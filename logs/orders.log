2025-06-03 00:04:00,064 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:04:16,141 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:04:43,511 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:05:05,505 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:05:57,575 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:05:57,606 - ERROR - orders - Unexpected error in create_order endpoint: module 'app.crud.crud_order' has no attribute 'get_create_order_function'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    create_order_fn = crud_order.get_create_order_function(current_user.user_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'app.crud.crud_order' has no attribute 'get_create_order_function'
2025-06-03 00:06:40,876 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:06:56,996 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:07:10,440 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:08:01,285 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:08:10,130 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:08:24,203 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:08:24,203 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:08:24,203 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:08:24,203 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:08:24,204 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('10000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:08:24,204 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:08:24,210 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:08:24,210 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:08:24,211 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:08:24,211 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:08:24,211 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:08:24,211 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:08:24,222 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:08:24,222 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:08:24,222 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:08:24,222 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:08:24,222 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 251, in calculate_single_order_margin
    adjusted_prices = await get_adjusted_market_price_cache(redis_client, user_group_name, direct_conversion_symbol)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 00:08:24,225 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:08:24,225 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:08:24,227 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:09:42,830 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:09:56,452 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:01,262 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:19,411 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:40,461 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:10:55,444 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:10:55,445 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:10:55,445 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:10:55,445 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:10:55,448 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('10000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:10:55,448 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:10:55,460 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:10:55,461 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:10:55,462 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:10:55,462 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:10:55,463 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:10:55,463 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:10:55,485 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:10:55,485 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:10:55,485 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:10:55,486 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:10:55,486 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:10:55,486 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 252, in calculate_single_order_margin
    adjusted_prices = await get_adjusted_market_price_cache(redis_client, user_group_name, direct_conversion_symbol)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 00:10:55,497 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:10:55,498 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:10:55,500 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:12:44,360 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:13:06,912 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:13:13,210 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:13:13,211 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:13:13,211 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:13:13,211 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:13:13,213 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('10000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:13:13,213 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:13:13,223 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:13:13,224 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:13:13,225 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:13:13,225 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:13:13,225 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:13:13,226 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:13:13,244 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:13:13,245 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:13:13,245 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:13:13,245 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:13:13,245 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:13:13,247 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:13:13,247 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:13:13,249 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:13:13,249 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:13:13,249 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:13:13,250 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:13:13,252 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:13:13,252 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:13:13,252 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:13:13,253 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:13:13,253 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:13:13,253 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:13:13,256 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:15:29,954 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:29,954 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:29,954 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:32,170 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:32,171 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:32,171 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:34,360 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:34,360 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:34,360 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:36,689 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:36,689 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:36,689 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:38,995 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:38,995 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:38,995 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:41,303 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:41,303 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:41,303 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:43,508 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:43,508 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:43,509 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:45,847 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:45,847 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:45,847 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:48,117 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:48,117 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:48,117 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:50,444 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:50,444 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:50,445 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:52,762 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:52,763 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:52,763 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:55,113 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:55,113 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:55,113 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:57,270 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:57,270 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:57,270 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:15:59,539 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:15:59,539 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:15:59,539 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:01,868 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:01,868 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:01,868 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:04,117 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:04,117 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:04,117 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:06,514 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:06,514 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:06,514 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:08,808 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:08,808 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:08,808 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:11,148 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:11,148 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:11,148 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:13,391 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:13,391 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:13,391 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:15,643 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:15,643 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:15,644 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:17,932 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:17,932 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:17,932 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:20,236 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:20,236 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:20,236 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:22,632 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:22,632 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:22,632 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:24,862 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:24,862 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:24,862 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:27,237 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:27,237 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:27,237 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:29,482 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:29,482 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:29,482 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:31,727 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:31,727 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:31,727 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:34,090 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:34,090 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:34,090 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:36,449 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:36,449 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:36,449 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:38,620 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:38,620 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:38,620 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:40,930 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:40,930 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:40,930 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:43,192 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:43,192 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:43,192 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:45,516 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:45,516 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:45,516 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:47,801 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:47,801 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:47,801 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:50,105 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:50,105 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:50,105 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:52,522 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:52,522 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:52,523 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:54,700 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:54,700 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:54,700 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:57,026 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:57,026 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:57,026 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:16:59,414 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:16:59,414 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:16:59,415 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:01,622 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:01,622 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:01,622 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:03,978 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:03,978 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:03,978 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:06,246 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:06,246 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:06,246 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:08,507 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:08,507 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:08,507 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:10,858 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:10,858 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:10,858 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:13,190 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:13,190 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:13,190 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:15,416 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:15,416 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:15,416 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:17,718 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:17,718 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:17,718 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:19,993 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:19,993 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:19,993 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:22,341 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:22,342 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:22,342 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:24,623 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:24,623 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:24,623 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:26,893 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:17:26,893 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:17:26,893 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:17:31,021 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:18:05,858 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:05,858 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:05,858 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:05,971 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:05,971 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:05,971 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:08,334 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:08,335 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:08,335 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:10,669 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:10,669 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:10,669 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:12,379 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:18:12,379 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:18:12,379 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:18:12,379 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:18:12,380 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:18:12,380 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:18:12,388 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:18:12,388 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:18:12,389 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:18:12,389 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:18:12,389 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:18:12,389 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:18:12,403 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:18:12,405 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:18:12,406 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:18:12,406 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:18:12,406 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:18:12,407 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:18:12,407 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:18:12,408 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:18:12,408 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:18:12,409 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:18:12,409 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:18:12,410 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:18:12,410 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:18:12,410 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:18:12,410 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:18:12,411 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:18:12,411 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:18:12,415 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:18:12,963 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:12,963 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:12,963 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:15,290 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:15,290 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:15,290 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:17,569 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:17,569 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:17,569 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:19,765 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:19,765 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:19,765 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:22,021 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:22,021 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:22,021 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:24,426 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:24,426 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:24,427 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:26,657 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:26,657 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:26,657 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:28,928 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:28,928 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:28,928 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:31,240 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:31,240 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:31,240 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:33,527 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:33,527 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:33,528 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:35,848 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:35,848 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:35,848 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:38,130 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:38,130 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:38,130 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:40,475 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:40,475 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:40,475 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:42,821 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:42,822 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:42,822 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:45,088 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:45,088 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:45,088 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:47,324 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:47,324 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:47,324 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:49,630 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:49,630 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:49,630 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:51,987 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:51,987 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:51,988 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:54,417 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:54,417 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:54,417 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:56,702 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:56,702 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:56,702 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:18:58,985 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:18:58,985 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:18:58,985 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:19:01,295 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:19:01,295 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:19:01,295 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:19:03,576 - DEBUG - orders - User 1: Calculating portfolio for 0 open positions.
2025-06-03 00:19:03,576 - WARNING - orders - User 1: Overall hedged margin is zero or negative (0E-8), margin_level cannot be calculated. Setting to 0.0 or a suitable default.
2025-06-03 00:19:03,576 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 0E-8, Free Margin: 100000.00000000, Margin Level: 0.0
2025-06-03 00:19:07,928 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:19:24,572 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:19:24,572 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:19:24,572 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:19:24,572 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:19:24,573 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:19:24,573 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:19:24,579 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:19:24,579 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:19:24,579 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:19:24,579 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:19:24,580 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:19:24,580 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:19:24,592 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:19:24,592 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:19:24,592 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:19:24,593 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:19:24,593 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:19:24,593 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:19:24,593 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:19:24,594 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:19:24,594 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:19:24,594 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:19:24,594 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:19:24,594 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:19:24,594 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:19:24,594 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:19:24,594 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:19:24,595 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:19:24,595 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:19:24,596 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:22:41,982 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:23:48,299 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:23:48,299 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:23:48,300 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:23:48,300 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:23:48,303 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:23:48,303 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:23:48,319 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:23:48,319 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:23:48,321 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:23:48,321 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:23:48,321 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:23:48,321 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:23:48,361 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:23:48,361 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:23:48,362 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:23:48,362 - DEBUG - orders - Converting margin from CAD to USD. Amount: 8.9000000000000000
2025-06-03 00:23:48,362 - DEBUG - orders - Attempting direct conversion using symbol: CADUSD
2025-06-03 00:23:48,365 - DEBUG - orders - No direct conversion rate found for CADUSD
2025-06-03 00:23:48,366 - DEBUG - orders - Attempting indirect conversion using symbol: USDCAD
2025-06-03 00:23:48,368 - DEBUG - orders - No indirect conversion rate found for USDCAD
2025-06-03 00:23:48,368 - DEBUG - orders - Calling _convert_to_usd with: amount=8.9000000000000000, from_currency=CAD, user_id=1, position_id=margin_calc_for_AUDCAD_BUY
2025-06-03 00:23:48,368 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd CALLED for 'Order Margin'. Amount: 8.9000000000000000, FromCurrency: CAD.
2025-06-03 00:23:48,370 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting direct with CADUSD. Rate: None
2025-06-03 00:23:48,371 - DEBUG - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - Attempting indirect with USDCAD. Rate: None
2025-06-03 00:23:48,371 - WARNING - orders - User 1, Pos margin_calc_for_AUDCAD_BUY: ADJUSTED _convert_to_usd - FAILED to find valid adjusted conversion rate from CAD to USD for Order Margin. Order Margin will remain 8.9000000000000000 CAD.
2025-06-03 00:23:48,371 - DEBUG - orders - Conversion result: 8.9000000000000000 CAD -> 8.90 USD
2025-06-03 00:23:48,371 - ERROR - orders - Failed to convert margin from CAD to USD for user 1, symbol AUDCAD. Original amount: 8.9000000000000000, Converted amount: 8.90
2025-06-03 00:23:48,371 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 00:23:48,371 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 00:23:48,373 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 00:25:39,541 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:26:39,876 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 00:26:39,876 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 00:26:39,876 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 00:26:39,876 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 00:26:39,877 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('0E-8')}
2025-06-03 00:26:39,877 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 00:26:39,882 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 00:26:39,882 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 00:26:39,883 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 00:26:39,883 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:26:39,883 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 00:26:39,883 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 00:26:39,895 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 00:26:39,895 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 00:26:39,895 - DEBUG - orders - Standard margin calculation for AUDCAD: 8.9000000000000000
2025-06-03 00:26:39,895 - WARNING - orders - TEMPORARILY SKIPPING CURRENCY CONVERSION FROM CAD TO USD. Using original amount: 8.9000000000000000
2025-06-03 00:26:39,895 - INFO - orders - Margin calculated for user 1, symbol AUDCAD, order_type BUY: Margin_USD=8.90, PriceBasisForMargin=0.89, AdjustedExecPrice/LimitPrice=0.89000, Contract_Units=1000.00000000, SymbolType=1
2025-06-03 00:26:39,951 - INFO - orders - Successfully created order for user 1: 2274538506
2025-06-03 00:26:51,747 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:51,747 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:26:51,748 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:26:53,773 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:53,773 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:26:53,781 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:26:56,114 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:56,149 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:26:56,154 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:26:58,353 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:26:58,353 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:26:58,358 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:00,695 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:00,695 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:00,698 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:02,922 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:02,922 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:02,925 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:05,324 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:05,325 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:05,330 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:07,655 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:07,655 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:07,661 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:09,917 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:09,917 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:09,923 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:12,209 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:12,209 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:12,216 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:14,585 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:14,585 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:14,591 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:16,799 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:16,799 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:16,803 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:19,070 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:19,071 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:19,075 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:21,357 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:21,357 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:21,360 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:23,587 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:23,587 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:23,589 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:25,918 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:25,918 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:25,920 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:28,266 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:28,267 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:28,268 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:30,578 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:30,578 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:30,580 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:33,004 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:33,004 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:33,011 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:35,219 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:35,219 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:35,222 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:37,482 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:37,483 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:37,486 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:39,730 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:39,731 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:39,733 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:41,978 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:41,979 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:41,980 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:44,305 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:44,305 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:44,307 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:46,605 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:46,605 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:46,607 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:48,993 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:48,993 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:48,995 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:51,214 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:51,214 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:51,217 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:53,500 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:53,500 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:53,502 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:55,862 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:55,862 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:55,864 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:27:58,105 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:27:58,105 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:27:58,106 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:00,363 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:00,363 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:00,364 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:02,718 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:02,718 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:02,720 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:04,968 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:04,969 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:04,970 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:07,317 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:07,317 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:07,319 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:09,571 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:09,571 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:09,573 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:11,915 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:11,915 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:11,918 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:14,305 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:14,305 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:14,307 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:16,475 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:16,476 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:16,478 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:18,896 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:18,896 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:18,898 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:21,078 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:21,078 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:21,080 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:23,392 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:23,392 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:23,395 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:25,743 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:25,743 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:25,745 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:28,133 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:28,133 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:28,136 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:30,371 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:30,371 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:30,373 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:32,587 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:32,587 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:32,589 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:34,955 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:34,956 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:34,957 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:37,213 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:37,213 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:37,214 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:39,480 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:39,480 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:39,482 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:41,845 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:41,845 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:41,847 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:44,134 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:44,134 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:44,136 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:46,428 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:46,428 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:46,430 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:48,791 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:48,791 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:48,793 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:51,049 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:51,049 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:51,052 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:53,427 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:53,427 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:53,429 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:55,629 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:55,629 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:55,631 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:28:57,931 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:28:57,931 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:28:57,933 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:00,241 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:00,241 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:00,243 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:02,541 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:02,541 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:02,544 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:04,830 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:04,830 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:04,832 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:07,130 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:07,130 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:07,132 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:09,470 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:09,470 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:09,472 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:11,706 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:11,706 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:11,708 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:14,089 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:14,089 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:14,091 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:16,321 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:16,321 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:16,323 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:18,593 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:18,593 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:18,597 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:20,890 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:20,890 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:20,892 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:23,314 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:23,314 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:23,316 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:25,558 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:25,558 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:25,560 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:27,806 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:27,806 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:27,808 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:30,153 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:30,153 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:30,155 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:32,413 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:32,413 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:32,415 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:34,783 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:34,783 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:34,785 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:37,022 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:37,022 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:37,024 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:39,294 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:39,294 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:39,296 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:41,619 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:41,619 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:41,622 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:43,916 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:43,916 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:43,918 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:46,246 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:46,246 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:46,249 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:48,537 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:48,537 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:48,539 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:50,845 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:50,845 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:50,848 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:53,153 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:53,153 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:53,155 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:55,436 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:55,436 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:55,438 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:29:57,741 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:29:57,741 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:29:57,746 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:00,716 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:00,717 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:00,719 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:02,390 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:02,390 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:02,392 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:04,735 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:04,735 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:04,737 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:07,024 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:07,024 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:07,026 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:09,330 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:09,331 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:09,333 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:11,638 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:11,638 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:11,639 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:13,922 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:13,922 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:13,924 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:16,216 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:16,216 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:16,219 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:18,526 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:18,527 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'live_price': None}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:18,529 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:22,817 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:30:52,907 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:52,907 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:30:52,907 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:52,974 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:52,974 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:52,979 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:55,368 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:55,369 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:55,372 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:30:57,667 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:30:57,667 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:30:57,672 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:00,008 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:00,009 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:00,015 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:02,249 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:02,249 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:02,253 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:04,641 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:04,642 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:04,647 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:06,854 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:06,854 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:06,858 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:09,242 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:09,242 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:09,248 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:11,449 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:11,449 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:11,452 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:13,996 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:13,996 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:14,002 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:16,135 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:16,135 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:16,138 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:18,419 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:18,419 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:18,425 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:20,681 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:20,681 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:20,685 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:22,914 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:22,914 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:22,917 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:25,258 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:25,258 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:25,260 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:27,491 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:27,491 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:27,493 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:29,918 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:29,918 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:29,920 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:32,102 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:32,102 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:32,104 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:34,454 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:34,454 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:34,456 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:36,704 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:36,704 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:36,706 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:39,069 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:39,069 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:39,072 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:41,312 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:41,312 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:41,314 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:43,690 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:43,690 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:43,691 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:45,933 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:45,933 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:45,935 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:48,221 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:48,221 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:48,222 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:50,527 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:50,527 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:50,529 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:52,912 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:52,912 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:52,914 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:55,176 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:55,176 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:55,178 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:57,430 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:57,430 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:57,432 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:31:59,708 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:31:59,708 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:31:59,710 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:02,130 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:02,130 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:02,131 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:04,342 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:04,342 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:04,344 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:06,643 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:06,643 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:06,646 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:08,913 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:08,913 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:08,915 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:11,401 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:11,401 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:11,402 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:13,612 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:13,612 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:13,614 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:15,950 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:15,950 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:15,952 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:18,302 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:18,302 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:18,304 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:20,560 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:20,560 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:20,562 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:22,801 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:22,801 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:22,802 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:25,145 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:25,145 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:25,147 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:27,354 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:27,354 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:27,356 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:29,762 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:29,762 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:29,764 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:31,992 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:31,992 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:31,994 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:34,306 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:34,306 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:34,308 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:36,634 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:36,634 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:36,636 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:38,976 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:38,976 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:38,977 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:41,187 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:41,187 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:41,189 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:43,497 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:43,497 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:43,499 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:45,749 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:45,749 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:45,752 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:48,078 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:48,078 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:48,080 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:50,404 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:50,404 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:50,406 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:52,688 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:52,688 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:52,690 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:55,035 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:55,036 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:55,037 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:57,323 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:57,323 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:57,326 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:32:59,627 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:32:59,628 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:32:59,632 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:01,876 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:01,876 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:01,878 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:04,208 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:04,208 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:04,210 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:06,541 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:06,541 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:06,544 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:08,828 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:08,828 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:08,832 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:11,128 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:33:11,128 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 157, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Adjusted PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:33:11,131 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:33:17,830 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:34:41,898 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:41,898 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:34:41,898 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:43,281 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:43,281 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:43,281 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:43,286 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:45,716 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:45,716 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:45,716 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:45,720 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:47,893 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:47,893 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:47,894 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:47,899 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:50,179 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:50,179 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:50,179 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:50,184 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:52,533 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:52,533 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:34:52,533 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:52,537 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:54,839 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:54,840 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:34:54,840 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:54,844 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:57,070 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:57,071 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.41000000000000000000000000
2025-06-03 00:34:57,071 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:57,076 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:34:59,514 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:34:59,515 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.39000000000000000000000000
2025-06-03 00:34:59,515 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:34:59,519 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:01,649 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:01,649 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:35:01,649 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:01,653 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:04,049 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:04,049 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:04,049 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:04,054 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:06,240 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:06,240 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:06,241 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:06,245 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:08,494 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:08,494 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:35:08,495 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:08,496 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:10,802 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:10,802 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.41000000000000000000000000
2025-06-03 00:35:10,802 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:10,805 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:13,111 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:13,111 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:13,111 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:13,113 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:15,567 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:15,567 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:15,567 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:15,569 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:17,699 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:17,699 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:17,699 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:17,701 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:20,063 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:20,063 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:20,063 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:20,065 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:22,314 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:22,314 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.39000000000000000000000000
2025-06-03 00:35:22,314 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:22,316 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:24,601 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:24,601 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:24,601 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:24,604 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:26,893 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:26,893 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:26,893 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:26,895 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:29,210 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:29,210 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:29,210 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:29,212 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:31,525 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:31,525 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:31,526 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:31,528 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:33,809 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:33,809 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:33,809 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:33,811 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:36,131 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:36,131 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:36,131 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:36,133 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:38,398 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:38,399 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:38,399 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:38,401 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:40,687 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:40,688 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.42000000000000000000000000
2025-06-03 00:35:40,688 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:40,690 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:43,004 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:43,004 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:43,004 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:43,006 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:45,299 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:45,299 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:45,299 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:45,301 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:47,583 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:47,583 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:47,583 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:47,586 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:49,899 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:49,899 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:35:49,900 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:49,902 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:52,197 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:52,197 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.36000000000000000000000000
2025-06-03 00:35:52,197 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:52,201 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:54,484 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:54,484 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8865800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.42000000000000000000000000
2025-06-03 00:35:54,484 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:54,486 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:56,767 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:56,767 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:56,767 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:56,768 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:35:59,083 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:35:59,083 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.38000000000000000000000000
2025-06-03 00:35:59,083 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:35:59,086 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:36:05,441 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:38:08,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:38:10,534 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:10,534 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:38:10,534 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:12,684 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:12,684 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:38:12,684 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:14,995 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:14,995 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:14,995 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:15,001 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:17,293 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:17,293 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:17,294 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:17,296 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:19,661 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:19,661 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88659 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.410000000000000000000000
2025-06-03 00:38:19,661 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:19,666 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:21,957 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:21,957 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:38:21,957 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:21,962 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:24,236 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:24,237 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:24,237 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:24,241 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:26,563 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:26,563 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88661 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.390000000000000000000000
2025-06-03 00:38:26,563 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:26,569 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:28,885 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:28,885 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:38:28,885 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:31,192 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:31,192 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88659 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.410000000000000000000000
2025-06-03 00:38:31,192 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:31,195 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:33,438 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:33,438 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:38:33,438 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:33,440 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:35,708 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:35,708 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.400000000000000000000000
2025-06-03 00:38:35,708 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:35,710 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:38,020 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:38,020 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.400000000000000000000000
2025-06-03 00:38:38,020 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:38,024 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:40,313 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:40,313 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88666 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.340000000000000000000000
2025-06-03 00:38:40,313 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:40,317 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:42,679 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:42,679 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88661 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.390000000000000000000000
2025-06-03 00:38:42,679 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:42,681 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:45,060 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:45,060 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:45,060 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:45,065 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:47,251 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:47,252 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:38:47,252 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:47,257 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:49,580 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:49,580 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:49,580 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:49,585 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:51,935 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:51,936 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:38:51,936 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:51,941 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:54,146 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:54,146 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:54,146 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:54,150 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:56,492 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:56,492 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:38:56,492 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:56,497 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:38:58,775 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:38:58,776 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:38:58,776 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:38:58,781 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:01,045 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:01,045 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:01,045 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:01,050 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:03,350 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:03,351 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:39:03,351 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:03,352 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:05,632 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:05,632 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88655 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.450000000000000000000000
2025-06-03 00:39:05,632 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:05,638 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:07,911 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:07,911 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:39:07,911 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:07,913 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:10,225 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:10,225 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88657 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.430000000000000000000000
2025-06-03 00:39:10,225 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:10,228 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:12,587 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:12,587 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:39:12,587 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:12,589 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:14,926 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:14,926 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88655 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.450000000000000000000000
2025-06-03 00:39:14,926 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:14,928 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:17,157 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:17,157 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88654 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.460000000000000000000000
2025-06-03 00:39:17,157 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:17,160 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:19,457 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:19,457 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:39:19,457 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:19,459 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:21,779 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:21,779 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:21,779 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:24,079 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:24,079 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:39:24,080 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:24,084 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:26,372 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:26,372 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:39:26,372 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:26,375 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:28,682 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:28,682 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:39:28,682 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:28,687 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:31,109 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:31,109 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:31,109 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:31,111 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:33,350 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:33,350 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88666 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.340000000000000000000000
2025-06-03 00:39:33,350 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:33,353 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:35,581 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:35,581 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88661 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.390000000000000000000000
2025-06-03 00:39:35,581 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:35,583 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:37,872 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:37,872 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:39:37,872 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:37,874 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:40,209 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:40,209 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:40,209 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:42,466 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:42,466 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:42,466 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:42,469 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:44,804 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:44,804 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:44,804 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:47,094 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:47,094 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:39:47,094 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:49,408 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:49,408 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:39:49,408 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:49,411 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:51,698 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:51,699 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88665 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.350000000000000000000000
2025-06-03 00:39:51,699 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:51,702 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:53,986 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:53,986 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:53,986 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:53,989 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:56,323 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:56,323 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88662 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.380000000000000000000000
2025-06-03 00:39:56,323 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:56,325 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:39:58,605 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:39:58,606 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88663 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.370000000000000000000000
2025-06-03 00:39:58,606 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:39:58,608 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:00,906 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:00,906 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88658 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.420000000000000000000000
2025-06-03 00:40:00,906 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:00,908 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:03,200 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:03,200 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88654 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.460000000000000000000000
2025-06-03 00:40:03,201 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:03,204 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:05,484 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:05,484 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88668 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.320000000000000000000000
2025-06-03 00:40:05,484 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:05,488 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:07,779 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:07,779 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88654 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.460000000000000000000000
2025-06-03 00:40:07,779 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:07,781 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:10,066 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:10,066 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.88664 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.360000000000000000000000
2025-06-03 00:40:10,066 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:10,070 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:12,412 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:12,412 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.300000000000000000000000
2025-06-03 00:40:12,412 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:12,414 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:14,684 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:14,684 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:40:14,684 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:18,953 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:40:41,424 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:41,424 - WARNING - orders - User 1, Pos 2274538506: PnL Market data or group settings missing for AUDCAD.
2025-06-03 00:40:41,424 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:42,283 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:42,283 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.40000000000000000000000000
2025-06-03 00:40:42,284 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0')}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:42,292 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:44,670 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:44,670 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:40:44,670 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:44,674 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:46,912 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:46,913 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:40:46,913 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:46,917 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:49,296 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:49,296 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866300000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.37000000000000000000000000
2025-06-03 00:40:49,296 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:49,310 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:51,633 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:51,633 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:40:51,633 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:51,639 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:53,893 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:53,893 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.31000000000000000000000000
2025-06-03 00:40:53,894 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:53,900 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:56,211 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:56,211 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:40:56,211 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:56,215 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:40:58,455 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:40:58,456 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:40:58,456 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:40:58,462 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:00,840 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:00,840 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.31000000000000000000000000
2025-06-03 00:41:00,840 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:00,845 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:03,069 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:03,069 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867000000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.30000000000000000000000000
2025-06-03 00:41:03,069 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:03,071 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:05,311 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:05,311 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.29000000000000000000000000
2025-06-03 00:41:05,311 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:05,313 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:07,681 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:07,681 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:41:07,681 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:07,683 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:09,895 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:09,895 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:41:09,895 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:09,897 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:12,276 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:12,276 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:12,276 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:12,278 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:14,620 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:14,620 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866600000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.34000000000000000000000000
2025-06-03 00:41:14,620 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:14,622 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:16,872 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:16,872 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866600000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.34000000000000000000000000
2025-06-03 00:41:16,872 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:16,874 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:19,191 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:19,191 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.32000000000000000000000000
2025-06-03 00:41:19,191 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:19,193 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:21,447 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:21,447 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:21,447 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:21,449 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:23,704 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:23,704 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8866900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.31000000000000000000000000
2025-06-03 00:41:23,704 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:23,706 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:26,023 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:26,024 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:26,024 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:26,025 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:28,299 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:28,299 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.29000000000000000000000000
2025-06-03 00:41:28,299 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:28,301 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:30,607 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:30,607 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:30,607 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:30,610 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:32,930 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:32,930 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.29000000000000000000000000
2025-06-03 00:41:32,930 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:32,934 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:35,204 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:35,204 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:35,204 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:35,207 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:37,518 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:37,519 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:37,519 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:37,523 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:39,806 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:39,806 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:39,806 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:39,810 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:42,107 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:42,107 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867400000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.26000000000000000000000000
2025-06-03 00:41:42,107 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:42,110 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:44,412 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:44,412 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867800000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.22000000000000000000000000
2025-06-03 00:41:44,412 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:44,414 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:46,718 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:46,719 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867500000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.25000000000000000000000000
2025-06-03 00:41:46,719 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:46,723 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:49,022 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:49,022 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:41:49,022 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:49,024 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:51,327 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:51,327 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:41:51,327 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:51,329 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:53,627 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:53,627 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867200000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.28000000000000000000000000
2025-06-03 00:41:53,627 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:53,631 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:55,914 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:55,914 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:41:55,914 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:55,917 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:41:58,182 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:41:58,182 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:41:58,182 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:41:58,187 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:00,540 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:00,540 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:42:00,540 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:00,543 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:02,930 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:02,930 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8867900000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.21000000000000000000000000
2025-06-03 00:42:02,930 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:02,931 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:05,342 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:05,342 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:42:05,342 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:05,345 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:07,536 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:07,536 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:42:07,536 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:07,539 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:09,846 - DEBUG - orders - User 1: Calculating portfolio for 1 open positions.
2025-06-03 00:42:09,846 - DEBUG - orders - User 1, Pos 2274538506: BUY PnL calculation: (0.8868100000 - 0.89000000) * 0.01000000 * 100000.00000000 = -3.19000000000000000000000000
2025-06-03 00:42:09,846 - ERROR - orders - User 1, Pos 2274538506: Generic error processing position in portfolio: name 'redis_client' is not defined. Data: {'order_id': Decimal('2274538506'), 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01000000'), 'order_price': Decimal('0.89000000'), 'margin': Decimal('8.90000000'), 'contract_value': Decimal('1000.00000000'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'profit_loss': Decimal('0.0'), 'commission_applied': 0.0}
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 159, in calculate_user_portfolio
    pnl_native, profit_currency, user_id, position_id, "Position PnL", redis_client, user_data.get('group_name', 'UNKNOWN_GROUP')
                                                                       ^^^^^^^^^^^^
NameError: name 'redis_client' is not defined
2025-06-03 00:42:09,849 - DEBUG - orders - User 1: Final Portfolio - Balance: 100000.00000000, Total PnL (USD): 0.0, Equity: 100000.00000000, Overall Hedged Margin (USD): 8.90000000, Free Margin: 99991.10000000, Margin Level: 1123595.505617977528089887640
2025-06-03 00:42:13,911 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:42:36,867 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:42:57,603 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:43:16,293 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:55:11,821 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 00:55:34,428 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:00:52,534 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:11:09,314 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:11:46,237 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:14:13,423 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:15:15,095 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:19:12,630 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:19:35,433 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:21:14,263 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:22:04,496 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:25:05,881 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:25:44,363 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:31:05,951 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:32:03,946 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:32:35,636 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:33:48,596 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 01:33:48,596 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 01:33:48,597 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 01:33:48,597 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 01:33:48,599 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 01:33:48,599 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 01:33:48,609 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 01:33:48,610 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 01:33:48,612 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 01:33:48,612 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:33:48,612 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:33:48,612 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 01:33:48,636 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 01:33:48,637 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 01:33:48,639 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 01:33:48,642 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 01:33:48,643 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 01:33:48,654 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 01:37:07,906 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:37:21,444 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:37:27,847 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 01:37:27,848 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 01:37:27,848 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 01:37:27,849 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 01:37:27,851 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 01:37:27,852 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 01:37:27,870 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 01:37:27,871 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 01:37:27,873 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 01:37:27,873 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:37:27,874 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:37:27,874 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 01:37:27,923 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 01:37:27,923 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 01:37:27,924 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 01:37:27,932 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 01:37:27,933 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 01:37:27,943 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 199, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 01:45:02,585 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 01:46:40,801 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 01:46:40,801 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 01:46:40,801 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 01:46:40,802 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 01:46:40,803 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 01:46:40,803 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 01:46:40,812 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 01:46:40,812 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 01:46:40,814 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 01:46:40,814 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:46:40,814 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 01:46:40,814 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 01:46:40,824 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 01:46:40,825 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 01:46:40,825 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 01:46:40,826 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 01:46:40,826 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 01:46:40,827 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 190, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 02:10:11,537 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:10:11,537 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:10:11,537 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 02:10:11,537 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 02:10:11,538 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 02:10:11,539 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 02:10:11,546 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 02:10:11,546 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 02:10:11,548 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 02:10:11,548 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:10:11,548 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:10:11,548 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 02:10:11,554 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 02:10:11,555 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 02:10:11,555 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 02:10:11,556 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 02:10:11,556 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 02:10:11,557 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 190, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 02:12:10,651 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:13:43,021 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:17:45,091 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:18:17,052 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:18:35,377 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:19:44,914 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:19:44,915 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:19:44,915 - INFO - orders - Processing new order for user 1, symbol AUDCAD, type BUY, quantity 0.01
2025-06-03 02:19:44,915 - INFO - orders - Starting margin calculation for user 1, symbol AUDCAD, order_type BUY
2025-06-03 02:19:44,917 - INFO - orders - User data from cache: {'id': 1, 'group_name': 'Group B', 'leverage': Decimal('100.00'), 'wallet_balance': Decimal('100000.00000000'), 'margin': Decimal('8.90000000')}
2025-06-03 02:19:44,917 - INFO - orders - Found user data in cache - leverage: 100.00, group: Group B
2025-06-03 02:19:44,926 - INFO - orders - Symbol type for AUDCAD: 1
2025-06-03 02:19:44,926 - INFO - orders - Fetching group settings for group 'Group B', symbol 'AUDCAD'
2025-06-03 02:19:44,927 - INFO - orders - Group settings from cache: {'commision_type': 1, 'commision_value_type': 0, 'type': 1, 'pip_currency': 'USD', 'show_points': 5, 'swap_buy': Decimal('-6.5528'), 'swap_sell': Decimal('-1.1040'), 'commision': Decimal('10.0000'), 'margin': Decimal('1.0000'), 'spread': Decimal('0.0000'), 'deviation': Decimal('0.4000'), 'min_lot': Decimal('0.0100'), 'max_lot': Decimal('10.0000'), 'pips': Decimal('10.0000'), 'spread_pip': Decimal('0.0001'), 'contract_size': Decimal('100000.00000000'), 'profit_currency': 'CAD'}
2025-06-03 02:19:44,927 - INFO - orders - Raw values from cache - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:19:44,927 - INFO - orders - Parsed values - spread: 0.0000, spread_pip: 0.0001, margin: 1.0000
2025-06-03 02:19:44,927 - INFO - orders - Fetching ExternalSymbolInfo for symbol AUDCAD
2025-06-03 02:19:44,937 - INFO - orders - ExternalSymbolInfo found: <ExternalSymbolInfo(fix_symbol='AUDCAD', instrument_type='1', contract_size=100000.00000000)>
2025-06-03 02:19:44,938 - INFO - orders - Symbol info - contract_size: 100000.00000000, profit_currency: CAD, digits: 5.00000
2025-06-03 02:19:44,938 - ERROR - orders - Unexpected error during margin calculation for user 1, symbol AUDCAD, order_type BUY: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\margin_calculator.py", line 210, in calculate_single_order_margin
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-03 02:19:44,939 - ERROR - orders - Margin calculation returned None values for user 1, symbol AUDCAD
2025-06-03 02:19:44,939 - ERROR - orders - Error in process_new_order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values
2025-06-03 02:19:44,941 - ERROR - orders - Error processing order for user 1: Failed to process order: Margin calculation returned invalid values
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 121, in process_new_order
    raise OrderProcessingError("Margin calculation returned invalid values")
app.services.order_processing.OrderProcessingError: Margin calculation returned invalid values

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 190, in process_new_order
    raise OrderProcessingError(f"Failed to process order: {str(e)}")
app.services.order_processing.OrderProcessingError: Failed to process order: Margin calculation returned invalid values
2025-06-03 02:21:19,829 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:21:41,870 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:22:00,366 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:22:27,811 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:22:37,428 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:22:37,428 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:22:37,428 - ERROR - orders - Error processing order for user 1: process_new_order() got an unexpected keyword argument 'user'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                      ~~~~~~~~~~~~~~~~~^
        db=db,
        ^^^^^^
    ...<5 lines>...
        get_user_by_id_with_lock_fn=get_user_by_id_with_lock_fn
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: process_new_order() got an unexpected keyword argument 'user'
2025-06-03 02:23:33,001 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:23:55,785 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:24:02,804 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:24:31,523 - INFO - orders - Received order request from user 1: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'ACTIVE', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 02:24:31,523 - DEBUG - orders - Processing order for user 1 with type demo
2025-06-03 02:24:31,523 - ERROR - orders - Error processing order for user 1: process_new_order() got an unexpected keyword argument 'user'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    new_order = await process_new_order(
                      ~~~~~~~~~~~~~~~~~^
        db=db,
        ^^^^^^
    ...<5 lines>...
        get_user_by_id_with_lock_fn=get_user_by_id_with_lock_fn
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: process_new_order() got an unexpected keyword argument 'user'
2025-06-03 02:38:54,655 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:39:08,925 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:39:08,925 - ERROR - orders - Error processing new order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 99, in process_new_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined
2025-06-03 02:39:08,933 - ERROR - orders - Order processing error: name 'get_user_data_cache' is not defined
2025-06-03 02:41:08,886 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:42:11,837 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:42:11,837 - ERROR - orders - Error processing new order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 99, in process_new_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined
2025-06-03 02:42:11,843 - ERROR - orders - Order processing error: name 'get_user_data_cache' is not defined
2025-06-03 02:42:40,294 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:42:40,294 - ERROR - orders - Error processing new order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 99, in process_new_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined
2025-06-03 02:42:40,303 - ERROR - orders - Order processing error: name 'get_user_data_cache' is not defined
2025-06-03 02:43:47,012 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:44:03,033 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:44:06,066 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:44:06,067 - ERROR - orders - Error processing new order: name 'get_latest_market_data' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 105, in process_new_order
    raw_market_data = await get_latest_market_data()
                            ^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_latest_market_data' is not defined
2025-06-03 02:44:06,069 - ERROR - orders - Order processing error: name 'get_latest_market_data' is not defined
2025-06-03 02:48:07,424 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:48:57,443 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:48:57,773 - ERROR - orders - Error processing new order: name 'get_group_symbol_settings_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 113, in process_new_order
    group_settings = await get_group_symbol_settings_cache(redis_client, group_name, symbol)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_group_symbol_settings_cache' is not defined
2025-06-03 02:48:57,785 - ERROR - orders - Order processing error: name 'get_group_symbol_settings_cache' is not defined
2025-06-03 02:49:27,201 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:50:30,804 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:50:31,172 - ERROR - orders - Error processing new order: name 'set_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 158, in process_new_order
    await set_user_data_cache(redis_client, user_id, {
          ^^^^^^^^^^^^^^^^^^^
NameError: name 'set_user_data_cache' is not defined. Did you mean: 'get_user_data_cache'?
2025-06-03 02:50:31,175 - ERROR - orders - Order processing error: name 'set_user_data_cache' is not defined
2025-06-03 02:50:43,079 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:50:51,416 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:50:51,752 - ERROR - orders - Unexpected error in place_order: module 'app.crud.crud_order' has no attribute 'create_user_order'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_user_order(db, new_order, order_model)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: module 'app.crud.crud_order' has no attribute 'create_user_order'. Did you mean: 'create_order'?
2025-06-03 02:52:26,440 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 02:52:33,864 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 02:59:14,424 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:03:46,864 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:04:06,775 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:04:07,085 - ERROR - orders - Error processing new order: calculate_single_order_margin() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 123, in process_new_order
    margin_usd, adjusted_price, contract_value = await calculate_single_order_margin(
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        symbol=symbol,
        ^^^^^^^^^^^^^^
    ...<5 lines>...
        raw_market_data=raw_market_data
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_single_order_margin() missing 1 required positional argument: 'redis_client'
2025-06-03 03:04:07,086 - ERROR - orders - Order processing error: calculate_single_order_margin() missing 1 required positional argument: 'redis_client'
2025-06-03 03:05:11,620 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:05:24,721 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:11:44,954 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:11:53,540 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:12:00,463 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:13:46,101 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:15:51,649 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:19:05,142 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:19:05,851 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 115, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:19:05,852 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:19:23,046 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:19:23,336 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 115, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:19:23,337 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:19:34,319 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:19:34,617 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 115, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:19:34,617 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:23:36,798 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:24:21,657 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:24:21,962 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:24:21,963 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:27:54,318 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:28:31,399 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:28:31,714 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:28:31,718 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:31:06,550 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCHF, Type: BUY, Quantity: 0.01
2025-06-03 03:31:06,909 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:31:06,910 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:31:18,396 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDJPY, Type: BUY, Quantity: 0.01
2025-06-03 03:31:18,704 - ERROR - orders - Error processing new order: No group settings found for 
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 138, in process_new_order
    raise OrderProcessingError(f"No group settings found for {symbol}")
app.services.order_processing.OrderProcessingError: No group settings found for 
2025-06-03 03:31:18,706 - ERROR - orders - Order processing error: No group settings found for 
2025-06-03 03:31:50,094 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:32:19,500 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDJPY, Type: BUY, Quantity: 0.01
2025-06-03 03:32:19,817 - ERROR - orders - Order processing failed: order_company_name is missing or blank in order_data: {'symbol': 'AUDJPY', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'OPEN', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 03:32:19,817 - ERROR - orders - Error processing new order: Symbol is required for order processing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 114, in process_new_order
    raise OrderProcessingError("Symbol is required for order processing")
app.services.order_processing.OrderProcessingError: Symbol is required for order processing
2025-06-03 03:32:19,819 - ERROR - orders - Order processing error: Symbol is required for order processing
2025-06-03 03:32:30,542 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:32:30,867 - ERROR - orders - Order processing failed: order_company_name is missing or blank in order_data: {'symbol': 'AUDCAD', 'order_type': 'BUY', 'order_quantity': Decimal('0.01'), 'order_price': Decimal('0.89'), 'user_type': 'live', 'user_id': 1, 'order_status': 'OPEN', 'status': 'OPEN', 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'contract_value': None, 'margin': None, 'close_price': None, 'net_profit': None, 'swap': None, 'commission': None, 'cancel_message': None, 'close_message': None, 'cancel_id': None, 'close_id': None, 'modify_id': None, 'stoploss_id': None, 'takeprofit_id': None, 'stoploss_cancel_id': None, 'takeprofit_cancel_id': None}
2025-06-03 03:32:30,874 - ERROR - orders - Error processing new order: Symbol is required for order processing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 114, in process_new_order
    raise OrderProcessingError("Symbol is required for order processing")
app.services.order_processing.OrderProcessingError: Symbol is required for order processing
2025-06-03 03:32:30,903 - ERROR - orders - Order processing error: Symbol is required for order processing
2025-06-03 03:33:12,619 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:35:37,638 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:35:44,266 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:35:58,290 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:35:58,290 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 134, in place_order
    user_data = await get_user_data_cache(redis_client, order_request.user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 03:36:51,033 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:37:04,580 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:37:04,580 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 134, in place_order
    user_data = await get_user_data_cache(redis_client, order_request.user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 03:37:42,375 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:37:42,377 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 134, in place_order
    user_data = await get_user_data_cache(redis_client, order_request.user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 03:38:10,501 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:38:38,307 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:38:38,338 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 169, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:40:22,519 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:40:30,194 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:40:37,208 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:42:03,144 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:42:12,146 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:42:12,168 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 120, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:42:38,562 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:42:50,740 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:42:50,760 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:43:29,076 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:44:05,215 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:44:05,240 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:45:07,533 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:45:11,923 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:45:11,948 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:46:44,815 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:46:58,917 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:46:58,935 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:47:17,285 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:47:40,794 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:47:40,808 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:49:43,498 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:49:49,118 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:49:49,131 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:52:17,306 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:52:22,424 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:52:22,455 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:53:23,948 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:53:38,951 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:53:38,972 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:54:42,437 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:55:20,194 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:55:24,907 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:55:24,947 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:57:08,818 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:57:20,308 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:57:34,048 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:57:34,060 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 03:58:28,136 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:58:32,223 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 03:58:37,826 - INFO - orders - Order placement request received - User ID: 1, Order Company Name: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 03:58:37,845 - ERROR - orders - Unexpected error in place_order: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 119, in place_order
    cached_adj_price = await get_adjusted_market_price_cache(redis_client, group_name, sym_upper)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 04:04:00,565 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:04:14,561 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:10:19,681 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:11:56,346 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:11:57,004 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:11:57,005 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:15:05,060 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:15:52,932 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:18:06,537 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:23:26,825 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:23:27,546 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:23:27,546 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:23:39,763 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:23:40,059 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:23:40,060 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:23:52,898 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:23:53,206 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:23:53,207 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:25:23,612 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:27:19,711 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:27:20,351 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:27:20,353 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:29:01,803 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:30:33,845 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:32:44,849 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:34:14,904 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:35:47,271 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:38:58,706 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:38:59,328 - ERROR - orders - Error processing new order: Insufficient margin
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 140, in process_new_order
    raise OrderProcessingError("Insufficient margin")
app.services.order_processing.OrderProcessingError: Insufficient margin
2025-06-03 04:38:59,332 - ERROR - orders - Order processing error: Insufficient margin
2025-06-03 04:41:02,612 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:41:34,090 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 0.01
2025-06-03 04:42:39,016 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 04:42:48,178 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 04:47:47,115 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:51:40,996 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:52:22,286 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 04:54:33,706 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:00:46,258 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:02:23,154 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:05:03,678 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:18:51,176 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:23:57,722 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:24:12,078 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:24:12,487 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 153, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 05:35:20,609 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:36:47,388 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:36:48,216 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 153, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 05:40:09,015 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:50:06,078 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:53:04,224 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:53:22,288 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:54:14,068 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:54:14,363 - ERROR - orders - Order processing error: Failed to process order: name 'get_order_model' is not defined
2025-06-03 05:54:52,457 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:55:10,789 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:55:11,213 - ERROR - orders - Order processing error: Failed to process order: module 'app.crud.crud_order' has no attribute 'get_open_orders_by_user_id_and_symbol'
2025-06-03 05:55:50,186 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:56:04,655 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 05:56:05,014 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 153, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 05:59:24,614 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 05:59:49,813 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 06:00:31,757 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 06:00:32,268 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '69893717-a874-43e3-bab1-ce153b49f719' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('69893717-a874-43e3-bab1-ce153b49f719', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8857400000', '1', '88574.000000000000000000', '652.3772067820311134417059955', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '69893717-a874-43e3-bab1-ce153b49f719' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '69893717-a874-43e3-bab1-ce153b49f719' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('69893717-a874-43e3-bab1-ce153b49f719', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8857400000', '1', '88574.000000000000000000', '652.3772067820311134417059955', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 07:40:41,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 07:51:34,874 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 07:51:35,884 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '20397ddd-86f6-4b03-a69e-a0e76bdef254' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('20397ddd-86f6-4b03-a69e-a0e76bdef254', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864000000', '1', '88640.000000000000000000', '653.8245527020225964799673234', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '20397ddd-86f6-4b03-a69e-a0e76bdef254' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '20397ddd-86f6-4b03-a69e-a0e76bdef254' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('20397ddd-86f6-4b03-a69e-a0e76bdef254', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864000000', '1', '88640.000000000000000000', '653.8245527020225964799673234', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 07:52:13,341 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 07:52:29,218 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 07:52:29,671 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '04b9bcf9-7423-43a6-b0d5-9e0204367ff9' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('04b9bcf9-7423-43a6-b0d5-9e0204367ff9', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '653.9889562407451984448286175', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '04b9bcf9-7423-43a6-b0d5-9e0204367ff9' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '04b9bcf9-7423-43a6-b0d5-9e0204367ff9' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('04b9bcf9-7423-43a6-b0d5-9e0204367ff9', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '653.9889562407451984448286175', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 07:57:05,411 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 07:58:00,943 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 07:58:01,389 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6544932240' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6544932240', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864300000', '1', '88643.000000000000000000', '654.1422514758572377206488664', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7497541545', '1344749400', None, '6606570968', '6213308870', '6420856648', '2886046506')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '6544932240' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 145, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6544932240' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6544932240', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8864300000', '1', '88643.000000000000000000', '654.1422514758572377206488664', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7497541545', '1344749400', None, '6606570968', '6213308870', '6420856648', '2886046506')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:00:46,836 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:00:53,451 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:00:53,865 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6306636063' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6306636063', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '654.1846041590660342940532652', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7169181950', '8981150872', None, '2879824007', '6070090479', '2218366526', '3170722181')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '6306636063' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '6306636063' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('6306636063', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865600000', '1', '88656.000000000000000000', '654.1846041590660342940532652', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '7169181950', '8981150872', None, '2879824007', '6070090479', '2218366526', '3170722181')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:03:40,441 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:03:41,545 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '5167742242' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('5167742242', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8866000000', '1', '88660.000000000000000000', '654.0419882409582305997694878', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '4703816488', '2019803258', None, '7812214892', '7872211289', '3319738771', '7133438765')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '5167742242' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '5167742242' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('5167742242', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8866000000', '1', '88660.000000000000000000', '654.0419882409582305997694878', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '4703816488', '2019803258', None, '7812214892', '7872211289', '3319738771', '7133438765')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:03:43,393 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:03:44,048 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4957011076' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4957011076', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867100000', '1', '88671.000000000000000000', '654.1222298411216316764658681', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '9636355165', '6404408281', None, '3734035182', '7166748359', '5274147257', '2837576588')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '4957011076' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4957011076' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4957011076', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867100000', '1', '88671.000000000000000000', '654.1222298411216316764658681', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '9636355165', '6404408281', None, '3734035182', '7166748359', '5274147257', '2837576588')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:03:45,965 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:03:46,691 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '9938724726' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('9938724726', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867400000', '1', '88674.000000000000000000', '654.1632015873710625756846267', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '3275719326', '5539972601', None, '5545776173', '6790739250', '1738962496', '4246087405')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '9938724726' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '9938724726' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('9938724726', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8867400000', '1', '88674.000000000000000000', '654.1632015873710625756846267', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '3275719326', '5539972601', None, '5545776173', '6790739250', '1738962496', '4246087405')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:05:13,857 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:05:21,045 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:05:52,298 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:10:50,459 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:10:55,799 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:10:56,371 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '8038870577' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('8038870577', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865500000', '1', '88655.000000000000000000', '653.6383718641324555455917412', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '5711983338', '4092511674', None, '5508900573', '5209831068', '4861756836', '3210755343')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '8038870577' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '8038870577' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('8038870577', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8865500000', '1', '88655.000000000000000000', '653.6383718641324555455917412', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '5711983338', '4092511674', None, '5508900573', '5209831068', '4861756836', '3210755343')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:17:08,160 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:18:51,988 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:22:38,317 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:23:07,850 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:23:08,989 - ERROR - orders - Unexpected error in place_order: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4315349946' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4315349946', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8863700000', '1', '88637.000000000000000000', '653.3070952224773149666557341', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '8426339281', '8760326880', None, '3663642978', '8148094201', '1748163218', '8033610687')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1062, "Duplicate entry '4315349946' for key 'demo_user_orders.ix_demo_user_orders_order_id'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 144, in place_order
    db_order = await crud_order.create_order(db, new_order, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 21, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1062, "Duplicate entry '4315349946' for key 'demo_user_orders.ix_demo_user_orders_order_id'")
[SQL: INSERT INTO demo_user_orders (order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('4315349946', 1, 'AUDCAD', 'BUY', 'OPEN', '0.8863700000', '1', '88637.000000000000000000', '653.3070952224773149666557341', Decimal('0.88'), Decimal('0.9'), None, None, None, '10.00', None, None, '8426339281', '8760326880', None, '3663642978', '8148094201', '1748163218', '8033610687')]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-03 08:27:27,422 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:27:35,923 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 08:58:27,614 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:58:28,251 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 152, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 08:59:02,757 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 08:59:03,157 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 152, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 09:04:01,535 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:04:20,045 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 09:04:20,444 - ERROR - orders - Unexpected error in place_order: name 'get_user_data_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 151, in place_order
    user_data = await get_user_data_cache(redis_client, user_id)
                      ^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_data_cache' is not defined. Did you mean: 'set_user_data_cache'?
2025-06-03 09:08:42,654 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:11:00,038 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:13:00,953 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:13:10,279 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:13:16,805 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 09:13:17,254 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 190, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 09:17:56,603 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 09:18:07,525 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 09:18:07,910 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=live
2025-06-03 09:18:07,918 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 09:18:07,918 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 09:18:07,919 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 09:18:07,930 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 09:18:07,930 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 09:18:07,953 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 09:18:07,978 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 198, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 10:35:07,982 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 10:35:08,590 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo
2025-06-03 10:35:08,595 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 10:35:08,595 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 10:35:08,595 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 10:35:08,602 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 10:35:08,602 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 10:35:08,618 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 10:35:08,633 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 198, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:12:33,674 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:13:37,747 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:14:21,288 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:15:51,063 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:15:51,065 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:15:52,245 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:15:52,255 - INFO - orders - [MARGIN DEBUG] open_positions count: 2
2025-06-03 12:15:52,255 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:15:52,255 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 2 positions
2025-06-03 12:15:52,265 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:15:52,265 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:15:52,283 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:15:52,303 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:27:15,122 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:27:19,589 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:27:58,709 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:32:47,802 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:32:59,824 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:34:30,433 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:34:48,744 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:34:48,748 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:34:49,573 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:34:49,583 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 12:34:49,584 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:34:49,584 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 12:34:49,598 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:34:49,599 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:34:49,617 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:34:49,642 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:40:00,694 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:00,695 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:04,935 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:04,935 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 12:40:20,569 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:40:20,571 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:40:21,180 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:40:21,187 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 12:40:21,187 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:40:21,188 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 12:40:21,194 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:40:21,194 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:40:21,218 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:40:21,234 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 12:58:01,050 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 12:58:01,052 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 12:58:01,914 - INFO - orders - [MARGIN DEBUG] user_id=1, group_name=Group B, sending_orders=None, user_type=demo, is_barclays_live_user_flag_check=False
2025-06-03 12:58:01,920 - INFO - orders - [MARGIN DEBUG] open_positions count: 1
2025-06-03 12:58:01,920 - INFO - orders - [MARGIN DEBUG] symbols found: {'AUDCAD'}
2025-06-03 12:58:01,920 - INFO - orders - [MARGIN DEBUG] Calculating margin for symbol: AUDCAD with 1 positions
2025-06-03 12:58:01,927 - INFO - orders - [MARGIN DEBUG] Margin for symbol AUDCAD: 0.0
2025-06-03 12:58:01,927 - INFO - orders - [MARGIN DEBUG] Total margin to update for user 1: 0.0
2025-06-03 12:58:01,941 - INFO - orders - [MARGIN DEBUG] Margin updated in DB for user 1
2025-06-03 12:58:01,955 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 208, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:01:39,737 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:06:20,791 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:06:20,793 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:06:21,799 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 181, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:20:13,653 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:20:13,655 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:14,309 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:14,322 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:28,151 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:30:28,152 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:38:10,153 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:40:26,051 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:40:26,054 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:40:26,843 - ERROR - orders - Order processing error: Failed to process order: No module named 'app.models'
2025-06-03 13:40:45,001 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:41:58,195 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:42:07,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:42:58,401 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:43:04,884 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:43:04,886 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:43:04,895 - ERROR - orders - Order processing error: Failed to process order: A transaction is already begun on this Session.
2025-06-03 13:43:45,724 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:43:45,725 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:43:45,726 - ERROR - orders - Order processing error: Failed to process order: A transaction is already begun on this Session.
2025-06-03 13:44:00,620 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:44:00,621 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:44:00,624 - ERROR - orders - Order processing error: Failed to process order: A transaction is already begun on this Session.
2025-06-03 13:44:55,181 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:45:17,852 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:45:17,854 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:45:18,314 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 181, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:46:58,652 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:47:26,542 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:48:23,220 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:48:23,224 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:48:23,764 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 181, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 13:49:23,404 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:49:27,926 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 13:49:55,619 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 13:49:55,621 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 13:49:56,040 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 13:49:56,064 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 191, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 14:00:38,657 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:00:44,714 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:00:44,716 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:00:45,234 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:00:45,271 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'get_adjusted_market_price_cache' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 191, in place_order
    prices = await get_adjusted_market_price_cache(redis_client, group_name, symbol)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_adjusted_market_price_cache' is not defined
2025-06-03 14:02:25,881 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:02:33,187 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:02:44,230 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:04:24,454 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:04:24,455 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:04:25,489 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:04:25,518 - ERROR - orders - Error updating portfolio cache or publishing websocket event after order placement: name 'symbol' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 195, in place_order
    adjusted_market_prices[symbol] = prices
                           ^^^^^^
NameError: name 'symbol' is not defined
2025-06-03 14:05:43,349 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:06:16,741 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:06:16,743 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:06:17,169 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:06:17,268 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:09:00,199 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:09:49,485 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:09:49,487 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:09:49,842 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:09:49,850 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:09:49,929 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:09:50,024 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:11:27,271 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:12:10,773 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:13:27,029 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:13:27,033 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:13:28,235 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:13:28,264 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:13:28,389 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:13:28,566 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:14:37,261 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:15:25,658 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:15:25,660 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:15:26,946 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:15:26,954 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:15:27,008 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:15:27,069 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:16:23,142 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:16:58,002 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:16:58,004 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:16:58,005 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:16:58,382 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.0, MarginAfter=0.0, AdditionalMargin=0.0
2025-06-03 14:16:58,394 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=0.00
2025-06-03 14:16:58,444 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 0.00
2025-06-03 14:16:58,509 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:18:36,255 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:19:15,595 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:19:15,597 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:19:15,597 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:19:15,897 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:19:15,897 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:19:15,898 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:19:15,898 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:19:15,898 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:19:15,899 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:19:15,900 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=9.00000000, TotalSellQty=0, NetQty=9.00000000
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702')], HighestMarginPerLot=654.2825702
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=5888.54, ContributingOrders=9 (based on individual stored margins)
2025-06-03 14:19:15,901 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:19:15,901 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:19:15,902 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.2018613396689818020158440
2025-06-03 14:19:15,903 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10: MarginPerLot=654.2018613396689818020158440
2025-06-03 14:19:15,910 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-03 14:19:15,910 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702'), Decimal('654.2018613396689818020158440')], HighestMarginPerLot=654.2825702
2025-06-03 14:19:15,910 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6542.83, ContributingOrders=10 (based on individual stored margins)
2025-06-03 14:19:15,911 - app.services.order_processing - ERROR - Error processing new order: unsupported operand type(s) for -: 'dict' and 'dict'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 220, in process_new_order
    additional_margin = max(Decimal("0.0"), margin_after - margin_before)
                                            ~~~~~~~~~~~~~^~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'dict' and 'dict'
2025-06-03 14:19:15,915 - ERROR - orders - Order processing error: Failed to process order: unsupported operand type(s) for -: 'dict' and 'dict'
2025-06-03 14:20:35,305 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 14:21:04,360 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:21:04,362 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:21:04,363 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:21:04,676 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:21:04,676 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 9
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:21:04,677 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=9.00000000, TotalSellQty=0, NetQty=9.00000000
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702')], HighestMarginPerLot=654.2825702
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=5888.54, ContributingOrders=9 (based on individual stored margins)
2025-06-03 14:21:04,678 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 10
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 47): Type=BUY, Qty=1.00000000, StoredMargin=653.96557002
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=653.96557002
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 48): Type=BUY, Qty=1.00000000, StoredMargin=653.86829926
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=653.86829926
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 49): Type=BUY, Qty=1.00000000, StoredMargin=653.47616965
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=653.47616965
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 50): Type=BUY, Qty=1.00000000, StoredMargin=654.18245410
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=654.1824541
2025-06-03 14:21:04,678 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 51): Type=BUY, Qty=1.00000000, StoredMargin=654.17516759
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=654.17516759
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 52): Type=BUY, Qty=1.00000000, StoredMargin=654.13621492
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=654.13621492
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 53): Type=BUY, Qty=1.00000000, StoredMargin=654.27996852
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=654.27996852
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 54): Type=BUY, Qty=1.00000000, StoredMargin=654.00001457
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=654.00001457
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 55): Type=BUY, Qty=1.00000000, StoredMargin=654.28257020
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=654.2825702
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.3139698433867523703331220
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10: MarginPerLot=654.3139698433867523703331220
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=10.00000000, TotalSellQty=0, NetQty=10.00000000
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.96557002'), Decimal('653.86829926'), Decimal('653.47616965'), Decimal('654.1824541'), Decimal('654.17516759'), Decimal('654.13621492'), Decimal('654.27996852'), Decimal('654.00001457'), Decimal('654.2825702'), Decimal('654.3139698433867523703331220')], HighestMarginPerLot=654.3139698433867523703331220
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=6543.14, ContributingOrders=10 (based on individual stored margins)
2025-06-03 14:21:04,679 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=5888.54, MarginAfter=6543.14, AdditionalMargin=654.60
2025-06-03 14:21:04,689 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=654.60
2025-06-03 14:21:04,776 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.60
2025-06-03 14:21:04,862 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:22:26,110 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:22:26,122 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:22:26,123 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:22:26,941 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 0
2025-06-03 14:22:26,941 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-03 14:22:26,942 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.2898578185236738352560505
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.2898578185236738352560505
2025-06-03 14:22:26,942 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-03 14:22:26,943 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.2898578185236738352560505')], HighestMarginPerLot=654.2898578185236738352560505
2025-06-03 14:22:26,943 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.29, ContributingOrders=1 (based on individual stored margins)
2025-06-03 14:22:26,943 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.29, AdditionalMargin=654.29
2025-06-03 14:22:26,963 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=654.29
2025-06-03 14:22:27,068 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.29
2025-06-03 14:22:27,231 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:22:39,463 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 14:22:39,467 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:22:39,467 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:22:39,866 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:39,867 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.29, ContributingOrders=1 (based on individual stored margins)
2025-06-03 14:22:39,868 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=654.2873383958372808232156131
2025-06-03 14:22:39,868 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873383958372808232156131
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873383958372808232156131')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=2 (based on individual stored margins)
2025-06-03 14:22:39,869 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=654.29, MarginAfter=1308.58, AdditionalMargin=654.29
2025-06-03 14:22:39,878 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=654.29000000, CalculatedNewMargin=1308.58
2025-06-03 14:22:39,971 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1308.58
2025-06-03 14:22:40,118 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:22:52,038 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 14:22:52,045 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:22:52,045 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:22:52,546 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:52,546 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=0, NetQty=2.00000000
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=2 (based on individual stored margins)
2025-06-03 14:22:52,547 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:22:52,547 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=652.9562232635422208294769675
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.9562232635422208294769675
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=1, NetQty=2.00000000
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.9562232635422208294769675')], HighestMarginPerLot=654.28985782
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=3 (based on individual stored margins)
2025-06-03 14:22:52,548 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1308.58, MarginAfter=1308.58, AdditionalMargin=0.00
2025-06-03 14:22:52,568 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1308.58000000, CalculatedNewMargin=1308.58
2025-06-03 14:22:52,645 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1308.58
2025-06-03 14:22:52,825 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:23:02,230 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 14:23:02,234 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:23:02,234 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:23:02,576 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:23:02,576 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:02,577 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=1.00000000, NetQty=2.00000000
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=3 (based on individual stored margins)
2025-06-03 14:23:02,578 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:02,578 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:02,579 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=652.9879026380994024194723801
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.9879026380994024194723801
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.9879026380994024194723801')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=4 (based on individual stored margins)
2025-06-03 14:23:02,580 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1308.58, MarginAfter=1308.58, AdditionalMargin=0.00
2025-06-03 14:23:02,589 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1308.58000000, CalculatedNewMargin=1308.58
2025-06-03 14:23:02,693 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1308.58
2025-06-03 14:23:02,853 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:23:11,412 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 14:23:11,419 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, sending_orders_setting=None
2025-06-03 14:23:11,420 - app.services.order_processing - WARNING - [!!! PNO_ENTRY_TEST !!!] User 1, Symbol: None
2025-06-03 14:23:11,795 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:11,797 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 4
2025-06-03 14:23:11,798 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:11,798 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:11,798 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-03 14:23:11,799 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-03 14:23:11,800 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-03 14:23:11,800 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:11,801 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1308.58, ContributingOrders=4 (based on individual stored margins)
2025-06-03 14:23:11,802 - app.services.order_processing - WARNING - [!!! CTSMC_ENTRY_TEST !!!] User 1, Symbol AUDCAD, Positions count: 5
2025-06-03 14:23:11,802 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 5
2025-06-03 14:23:11,802 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-03 14:23:11,803 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-03 14:23:11,804 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=652.9391187745048025769213952
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=652.9391187745048025769213952
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=2.00000000, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264'), Decimal('652.9391187745048025769213952')], HighestMarginPerLot=654.28985782
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1962.87, ContributingOrders=5 (based on individual stored margins)
2025-06-03 14:23:11,805 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1308.58, MarginAfter=1962.87, AdditionalMargin=654.29
2025-06-03 14:23:11,822 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1308.58000000, CalculatedNewMargin=1962.87
2025-06-03 14:23:11,902 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1962.87
2025-06-03 14:23:12,061 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-03 14:24:59,909 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:33:54,284 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:35:45,718 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:36:58,810 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-03 23:36:58,811 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=653.4045374404406300543502018
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4045374404406300543502018
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4045374404406300543502018')], HighestMarginPerLot=653.4045374404406300543502018
2025-06-03 23:36:59,115 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.40, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:36:59,115 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.40, AdditionalMargin=653.40
2025-06-03 23:36:59,121 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.40
2025-06-03 23:36:59,142 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1271435029', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8868500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88685.000000000000000000'), 'margin': Decimal('653.4045374404406300543502018'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '7211382415', 'status': 'OPEN'}
2025-06-03 23:36:59,169 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.40
2025-06-03 23:36:59,209 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:37:22,412 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:37:22,413 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 18): Type=BUY, Qty=1.00000000, StoredMargin=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.40453744')], HighestMarginPerLot=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.40, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 2
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: 18): Type=BUY, Qty=1.00000000, StoredMargin=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.40453744
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4356261793913429943243499
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 2: MarginPerLot=653.4356261793913429943243499
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=1, NetQty=1.00000000
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.40453744'), Decimal('653.4356261793913429943243499')], HighestMarginPerLot=653.4356261793913429943243499
2025-06-03 23:37:22,713 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.44, ContributingOrders=2 (based on individual stored margins)
2025-06-03 23:37:22,713 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=653.40, MarginAfter=653.44, AdditionalMargin=0.04
2025-06-03 23:37:22,715 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=653.40000000, CalculatedNewMargin=653.44
2025-06-03 23:37:22,722 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9935283813', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8868600000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88686.000000000000000000'), 'margin': Decimal('653.4356261793913429943243499'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '5274295319', 'status': 'OPEN'}
2025-06-03 23:37:22,734 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.44
2025-06-03 23:37:22,773 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:40:16,470 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:42:37,336 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:43:50,623 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:43:50,626 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4742916262905188304638946
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4742916262905188304638946
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4742916262905188304638946')], HighestMarginPerLot=653.4742916262905188304638946
2025-06-03 23:43:50,954 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.47, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:43:50,954 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.47, AdditionalMargin=653.47
2025-06-03 23:43:50,958 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.47
2025-06-03 23:43:51,012 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8140331175', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88690.000000000000000000'), 'margin': Decimal('653.4742916262905188304638946'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '2284295986', 'status': 'OPEN', 'additional_margin': Decimal('653.47')}
2025-06-03 23:43:51,019 - ERROR - orders - Unexpected error in place_order: 'additional_margin' is an invalid keyword argument for UserOrder
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 162, in place_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 33, in create_order
    db_order = order_model(**order_data)
  File "<string>", line 4, in __init__
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2173, in _declarative_constructor
    raise TypeError(
        "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
    )
TypeError: 'additional_margin' is an invalid keyword argument for UserOrder
2025-06-03 23:44:35,609 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:45:15,071 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:45:15,072 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:45:15,367 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.5516259007482859370332321
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.5516259007482859370332321
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.5516259007482859370332321')], HighestMarginPerLot=653.5516259007482859370332321
2025-06-03 23:45:15,368 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.55, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:45:15,368 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.55, AdditionalMargin=653.55
2025-06-03 23:45:15,375 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.55
2025-06-03 23:45:15,393 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4972353352', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.5516259007482859370332321'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '7328613719', 'status': 'OPEN', 'additional_margin': Decimal('653.55')}
2025-06-03 23:45:15,396 - ERROR - orders - Unexpected error in place_order: 'additional_margin' is an invalid keyword argument for UserOrder
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 162, in place_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 33, in create_order
    db_order = order_model(**order_data)
  File "<string>", line 4, in __init__
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 571, in _initialize_instance
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state.py", line 569, in _initialize_instance
    manager.original_init(*mixed[1:], **kwargs)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\decl_base.py", line 2173, in _declarative_constructor
    raise TypeError(
        "%r is an invalid keyword argument for %s" % (k, cls_.__name__)
    )
TypeError: 'additional_margin' is an invalid keyword argument for UserOrder
2025-06-03 23:45:28,686 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:48:00,769 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:48:00,770 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4597197834624155743856147
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4597197834624155743856147
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4597197834624155743856147')], HighestMarginPerLot=653.4597197834624155743856147
2025-06-03 23:48:01,444 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.46, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:48:01,444 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.46, AdditionalMargin=653.46
2025-06-03 23:48:01,449 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.46
2025-06-03 23:48:01,465 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3065794014', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8868800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88688.000000000000000000'), 'margin': Decimal('653.4597197834624155743856147'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '6927679421', 'status': 'OPEN'}
2025-06-03 23:48:01,481 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.46
2025-06-03 23:48:01,516 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:52:19,459 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:53:31,244 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:53:31,249 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, sending_orders_setting=None
2025-06-03 23:53:31,587 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:53:31,587 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:53:31,587 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.5992480162055422371517885
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.5992480162055422371517885
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.5992480162055422371517885')], HighestMarginPerLot=653.5992480162055422371517885
2025-06-03 23:53:31,588 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.60, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:53:31,588 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.60, AdditionalMargin=653.60
2025-06-03 23:53:31,598 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.60
2025-06-03 23:53:31,661 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2205733050', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.5992480162055422371517885'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '9396209973', 'status': 'OPEN'}
2025-06-03 23:53:31,701 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.60
2025-06-03 23:53:31,799 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:55:23,864 - INFO - orders - Application starting up - Orders logging initialized
2025-06-03 23:56:33,565 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-03 23:56:33,569 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, group_name=Group B, sending_orders_setting=None
2025-06-03 23:56:33,868 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.3966718153469530498644828
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.3966718153469530498644828
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-03 23:56:33,869 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.3966718153469530498644828')], HighestMarginPerLot=653.3966718153469530498644828
2025-06-03 23:56:33,870 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.40, ContributingOrders=1 (based on individual stored margins)
2025-06-03 23:56:33,870 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.40, AdditionalMargin=653.40
2025-06-03 23:56:33,893 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.40
2025-06-03 23:56:33,994 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8598617938', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8868000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88680.000000000000000000'), 'margin': Decimal('653.3966718153469530498644828'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '5279787105', 'status': 'OPEN'}
2025-06-03 23:56:34,027 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.40
2025-06-03 23:56:34,106 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-03 23:58:07,038 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:00:30,747 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:00:30,749 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:00:30,749 - INFO - orders - [DEBUG] sending_orders_cache value: None (type: <class 'NoneType'>)
2025-06-04 00:00:30,749 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, group_name=Group B, sending_orders_setting=None
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:00:31,069 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.5248841074083792530394472
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.5248841074083792530394472
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.5248841074083792530394472')], HighestMarginPerLot=653.5248841074083792530394472
2025-06-04 00:00:31,070 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.52, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:00:31,070 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.52, AdditionalMargin=653.52
2025-06-04 00:00:31,083 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.52
2025-06-04 00:00:31,135 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7300962042', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8866100000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88661.000000000000000000'), 'margin': Decimal('653.5248841074083792530394472'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '3031781399', 'status': 'OPEN'}
2025-06-04 00:00:31,171 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.52
2025-06-04 00:00:31,248 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:01:15,297 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:01:18,966 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:02:32,559 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:03:34,465 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:03:34,496 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:03:34,496 - INFO - orders - [DEBUG] sending_orders_cache value: None (type: <class 'NoneType'>)
2025-06-04 00:03:34,496 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=False, user_type=live, group_name=Group B, sending_orders_setting=None
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4820159615174374111730622
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4820159615174374111730622
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4820159615174374111730622')], HighestMarginPerLot=653.4820159615174374111730622
2025-06-04 00:03:34,800 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.48, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:03:34,800 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.48, AdditionalMargin=653.48
2025-06-04 00:03:34,818 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4: OriginalMarginDB=0E-8, CalculatedNewMargin=653.48
2025-06-04 00:03:34,860 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '3779047511', 'order_status': 'OPEN', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8866100000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88661.000000000000000000'), 'margin': Decimal('653.4820159615174374111730622'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '4452185473', 'status': 'OPEN'}
2025-06-04 00:03:34,901 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 653.48
2025-06-04 00:03:35,037 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:04:32,880 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:06:08,641 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:06:37,342 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024ACA775010>, <app.database.models.Group object at 0x0000024ACA74BD90>, <app.database.models.Group object at 0x0000024ACA88C7D0>, <app.database.models.Group object at 0x0000024ACA7FD0F0>, <app.database.models.Group object at 0x0000024ACA7FD220>, <app.database.models.Group object at 0x0000024ACA8883B0>, <app.database.models.Group object at 0x0000024ACA746CF0>, <app.database.models.Group object at 0x0000024ACA746E00>, <app.database.models.Group object at 0x0000024ACA746F10>, <app.database.models.Group object at 0x0000024ACA747020>, <app.database.models.Group object at 0x0000024ACA747130>, <app.database.models.Group object at 0x0000024ACA747240>, <app.database.models.Group object at 0x0000024ACA747350>, <app.database.models.Group object at 0x0000024ACA747460>, <app.database.models.Group object at 0x0000024ACA747570>, <app.database.models.Group object at 0x0000024ACA747680>, <app.database.models.Group object at 0x0000024ACA747790>, <app.database.models.Group object at 0x0000024ACA7478A0>, <app.database.models.Group object at 0x0000024ACA7479B0>, <app.database.models.Group object at 0x0000024ACA747AC0>, <app.database.models.Group object at 0x0000024ACA747BD0>, <app.database.models.Group object at 0x0000024ACA747CE0>, <app.database.models.Group object at 0x0000024ACA747DF0>, <app.database.models.Group object at 0x0000024ACA747F00>, <app.database.models.Group object at 0x0000024ACA8D4050>, <app.database.models.Group object at 0x0000024ACA8D4160>, <app.database.models.Group object at 0x0000024ACA8D4270>, <app.database.models.Group object at 0x0000024ACA8D4380>, <app.database.models.Group object at 0x0000024ACA8D4490>, <app.database.models.Group object at 0x0000024ACA8D45A0>, <app.database.models.Group object at 0x0000024ACA8D46B0>, <app.database.models.Group object at 0x0000024ACA8D47C0>, <app.database.models.Group object at 0x0000024ACA8D48D0>, <app.database.models.Group object at 0x0000024ACA8D49E0>, <app.database.models.Group object at 0x0000024ACA8D4AF0>, <app.database.models.Group object at 0x0000024ACA8D4C00>, <app.database.models.Group object at 0x0000024ACA8D4D10>, <app.database.models.Group object at 0x0000024ACA8D4E20>, <app.database.models.Group object at 0x0000024ACA8D4F30>, <app.database.models.Group object at 0x0000024ACA8D5040>, <app.database.models.Group object at 0x0000024ACA8D5150>, <app.database.models.Group object at 0x0000024ACA8D5260>, <app.database.models.Group object at 0x0000024ACA8D5370>, <app.database.models.Group object at 0x0000024ACA8D5480>, <app.database.models.Group object at 0x0000024ACA8D5590>, <app.database.models.Group object at 0x0000024ACA8D56A0>, <app.database.models.Group object at 0x0000024ACA8D57B0>, <app.database.models.Group object at 0x0000024ACA8D58C0>, <app.database.models.Group object at 0x0000024ACA8D59D0>, <app.database.models.Group object at 0x0000024ACA8D5AE0>, <app.database.models.Group object at 0x0000024ACA8D5BF0>, <app.database.models.Group object at 0x0000024ACA8D5D00>, <app.database.models.Group object at 0x0000024ACA8D5E10>, <app.database.models.Group object at 0x0000024ACA8D5F20>, <app.database.models.Group object at 0x0000024ACA8D6030>, <app.database.models.Group object at 0x0000024ACA8D6140>, <app.database.models.Group object at 0x0000024ACA8D6250>, <app.database.models.Group object at 0x0000024ACA8D6360>, <app.database.models.Group object at 0x0000024ACA8D6470>, <app.database.models.Group object at 0x0000024ACA8D6580>, <app.database.models.Group object at 0x0000024ACA8D6690>, <app.database.models.Group object at 0x0000024ACA8D67A0>, <app.database.models.Group object at 0x0000024ACA8D68B0>, <app.database.models.Group object at 0x0000024ACA8D69C0>, <app.database.models.Group object at 0x0000024ACA8D6AD0>, <app.database.models.Group object at 0x0000024ACA8D6BE0>, <app.database.models.Group object at 0x0000024ACA8D6CF0>, <app.database.models.Group object at 0x0000024ACA8D6E00>, <app.database.models.Group object at 0x0000024ACA8D6F10>, <app.database.models.Group object at 0x0000024ACA8D7020>, <app.database.models.Group object at 0x0000024ACA8D7130>, <app.database.models.Group object at 0x0000024ACA8D7240>, <app.database.models.Group object at 0x0000024ACA8D7350>, <app.database.models.Group object at 0x0000024ACA8D7460>, <app.database.models.Group object at 0x0000024ACA8D7570>, <app.database.models.Group object at 0x0000024ACA8D7680>, <app.database.models.Group object at 0x0000024ACA8D7790>, <app.database.models.Group object at 0x0000024ACA8D78A0>, <app.database.models.Group object at 0x0000024ACA8D79B0>]
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:06:37,360 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:06:37,360 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:06:37,683 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.6981429112853852657356928
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.6981429112853852657356928
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.6981429112853852657356928')], HighestMarginPerLot=653.6981429112853852657356928
2025-06-04 00:06:37,684 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.70, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:06:37,685 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.70, AdditionalMargin=653.70
2025-06-04 00:06:37,720 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '8250846120', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88690.000000000000000000'), 'margin': Decimal('653.6981429112853852657356928'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '8194293788', 'status': 'OPEN'}
2025-06-04 00:06:37,764 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:06:37,863 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:06:37,983 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 8250846120 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:09:09,971 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:09:09,979 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024ACA746F10>, <app.database.models.Group object at 0x0000024ACA747020>, <app.database.models.Group object at 0x0000024ACA747130>, <app.database.models.Group object at 0x0000024ACA747240>, <app.database.models.Group object at 0x0000024ACA747350>, <app.database.models.Group object at 0x0000024ACA747460>, <app.database.models.Group object at 0x0000024ACA747570>, <app.database.models.Group object at 0x0000024ACA747680>, <app.database.models.Group object at 0x0000024ACA747790>, <app.database.models.Group object at 0x0000024ACA7478A0>, <app.database.models.Group object at 0x0000024ACA7479B0>, <app.database.models.Group object at 0x0000024ACA747AC0>, <app.database.models.Group object at 0x0000024ACA747BD0>, <app.database.models.Group object at 0x0000024ACA747CE0>, <app.database.models.Group object at 0x0000024ACA747DF0>, <app.database.models.Group object at 0x0000024ACA747F00>, <app.database.models.Group object at 0x0000024ACA7456A0>, <app.database.models.Group object at 0x0000024ACA8D7BD0>, <app.database.models.Group object at 0x0000024ACA8D4050>, <app.database.models.Group object at 0x0000024ACA8D4160>, <app.database.models.Group object at 0x0000024ACA8D4270>, <app.database.models.Group object at 0x0000024ACA8D4380>, <app.database.models.Group object at 0x0000024ACA8D4490>, <app.database.models.Group object at 0x0000024ACA8D45A0>, <app.database.models.Group object at 0x0000024ACA8D46B0>, <app.database.models.Group object at 0x0000024ACA8D47C0>, <app.database.models.Group object at 0x0000024ACA8D48D0>, <app.database.models.Group object at 0x0000024ACA8D49E0>, <app.database.models.Group object at 0x0000024ACA8D4AF0>, <app.database.models.Group object at 0x0000024ACA8D4C00>, <app.database.models.Group object at 0x0000024ACA8D4D10>, <app.database.models.Group object at 0x0000024ACA8D4E20>, <app.database.models.Group object at 0x0000024ACA8D4F30>, <app.database.models.Group object at 0x0000024ACA8D5040>, <app.database.models.Group object at 0x0000024ACA8D5150>, <app.database.models.Group object at 0x0000024ACA8D5260>, <app.database.models.Group object at 0x0000024ACA8D5370>, <app.database.models.Group object at 0x0000024ACA8D5480>, <app.database.models.Group object at 0x0000024ACA8D5590>, <app.database.models.Group object at 0x0000024ACA8D56A0>, <app.database.models.Group object at 0x0000024ACA8D57B0>, <app.database.models.Group object at 0x0000024ACA8D58C0>, <app.database.models.Group object at 0x0000024ACA8D59D0>, <app.database.models.Group object at 0x0000024ACA8D5AE0>, <app.database.models.Group object at 0x0000024ACA8D5BF0>, <app.database.models.Group object at 0x0000024ACA8D5D00>, <app.database.models.Group object at 0x0000024ACA8D5E10>, <app.database.models.Group object at 0x0000024ACA8D5F20>, <app.database.models.Group object at 0x0000024ACA8D6030>, <app.database.models.Group object at 0x0000024ACA8D6140>, <app.database.models.Group object at 0x0000024ACA8D6250>, <app.database.models.Group object at 0x0000024ACA8D6360>, <app.database.models.Group object at 0x0000024ACA8D6470>, <app.database.models.Group object at 0x0000024ACA8D6580>, <app.database.models.Group object at 0x0000024ACA8D6690>, <app.database.models.Group object at 0x0000024ACA8D67A0>, <app.database.models.Group object at 0x0000024ACA8D68B0>, <app.database.models.Group object at 0x0000024ACA8D69C0>, <app.database.models.Group object at 0x0000024ACA8D6AD0>, <app.database.models.Group object at 0x0000024ACA8D6BE0>, <app.database.models.Group object at 0x0000024ACA8D6CF0>, <app.database.models.Group object at 0x0000024ACA8D6E00>, <app.database.models.Group object at 0x0000024ACA8D6F10>, <app.database.models.Group object at 0x0000024ACA8D7020>, <app.database.models.Group object at 0x0000024ACA8D7130>, <app.database.models.Group object at 0x0000024ACA8D7240>, <app.database.models.Group object at 0x0000024ACA8D7350>, <app.database.models.Group object at 0x0000024ACA8D7460>, <app.database.models.Group object at 0x0000024ACA8D7570>, <app.database.models.Group object at 0x0000024ACA8D7680>, <app.database.models.Group object at 0x0000024ACA8D7790>, <app.database.models.Group object at 0x0000024ACA8D78A0>, <app.database.models.Group object at 0x0000024ACA8D79B0>, <app.database.models.Group object at 0x0000024ACA8D7AC0>, <app.database.models.Group object at 0x0000024ACA8D7F00>, <app.database.models.Group object at 0x0000024ACA924050>, <app.database.models.Group object at 0x0000024ACA924270>, <app.database.models.Group object at 0x0000024ACA924490>, <app.database.models.Group object at 0x0000024ACA9245A0>]
2025-06-04 00:09:09,979 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:09:09,979 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:09:09,980 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:09:09,980 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:09:09,980 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.7774700244177994824884289
2025-06-04 00:09:10,641 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.7774700244177994824884289
2025-06-04 00:09:10,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:09:10,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.7774700244177994824884289')], HighestMarginPerLot=653.7774700244177994824884289
2025-06-04 00:09:10,642 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.78, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:09:10,642 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.78, AdditionalMargin=653.78
2025-06-04 00:09:10,646 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2030514773', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88695.000000000000000000'), 'margin': Decimal('653.7774700244177994824884289'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '3943212324', 'status': 'OPEN'}
2025-06-04 00:09:10,662 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:09:10,700 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:09:10,729 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 2030514773 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:12:48,981 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:14:56,401 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:14:56,411 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000022AB4E05010>, <app.database.models.Group object at 0x0000022AB4DDBD90>, <app.database.models.Group object at 0x0000022AB4F187D0>, <app.database.models.Group object at 0x0000022AB4E8D0F0>, <app.database.models.Group object at 0x0000022AB4E8D220>, <app.database.models.Group object at 0x0000022AB4F143B0>, <app.database.models.Group object at 0x0000022AB4DD6CF0>, <app.database.models.Group object at 0x0000022AB4DD6E00>, <app.database.models.Group object at 0x0000022AB4DD6F10>, <app.database.models.Group object at 0x0000022AB4DD7020>, <app.database.models.Group object at 0x0000022AB4DD7130>, <app.database.models.Group object at 0x0000022AB4DD7240>, <app.database.models.Group object at 0x0000022AB4DD7350>, <app.database.models.Group object at 0x0000022AB4DD7460>, <app.database.models.Group object at 0x0000022AB4DD7570>, <app.database.models.Group object at 0x0000022AB4DD7680>, <app.database.models.Group object at 0x0000022AB4DD7790>, <app.database.models.Group object at 0x0000022AB4DD78A0>, <app.database.models.Group object at 0x0000022AB4DD79B0>, <app.database.models.Group object at 0x0000022AB4DD7AC0>, <app.database.models.Group object at 0x0000022AB4DD7BD0>, <app.database.models.Group object at 0x0000022AB4DD7CE0>, <app.database.models.Group object at 0x0000022AB4DD7DF0>, <app.database.models.Group object at 0x0000022AB4DD7F00>, <app.database.models.Group object at 0x0000022AB4F60050>, <app.database.models.Group object at 0x0000022AB4F60160>, <app.database.models.Group object at 0x0000022AB4F60270>, <app.database.models.Group object at 0x0000022AB4F60380>, <app.database.models.Group object at 0x0000022AB4F60490>, <app.database.models.Group object at 0x0000022AB4F605A0>, <app.database.models.Group object at 0x0000022AB4F606B0>, <app.database.models.Group object at 0x0000022AB4F607C0>, <app.database.models.Group object at 0x0000022AB4F608D0>, <app.database.models.Group object at 0x0000022AB4F609E0>, <app.database.models.Group object at 0x0000022AB4F60AF0>, <app.database.models.Group object at 0x0000022AB4F60C00>, <app.database.models.Group object at 0x0000022AB4F60D10>, <app.database.models.Group object at 0x0000022AB4F60E20>, <app.database.models.Group object at 0x0000022AB4F60F30>, <app.database.models.Group object at 0x0000022AB4F61040>, <app.database.models.Group object at 0x0000022AB4F61150>, <app.database.models.Group object at 0x0000022AB4F61260>, <app.database.models.Group object at 0x0000022AB4F61370>, <app.database.models.Group object at 0x0000022AB4F61480>, <app.database.models.Group object at 0x0000022AB4F61590>, <app.database.models.Group object at 0x0000022AB4F616A0>, <app.database.models.Group object at 0x0000022AB4F617B0>, <app.database.models.Group object at 0x0000022AB4F618C0>, <app.database.models.Group object at 0x0000022AB4F619D0>, <app.database.models.Group object at 0x0000022AB4F61AE0>, <app.database.models.Group object at 0x0000022AB4F61BF0>, <app.database.models.Group object at 0x0000022AB4F61D00>, <app.database.models.Group object at 0x0000022AB4F61E10>, <app.database.models.Group object at 0x0000022AB4F61F20>, <app.database.models.Group object at 0x0000022AB4F62030>, <app.database.models.Group object at 0x0000022AB4F62140>, <app.database.models.Group object at 0x0000022AB4F62250>, <app.database.models.Group object at 0x0000022AB4F62360>, <app.database.models.Group object at 0x0000022AB4F62470>, <app.database.models.Group object at 0x0000022AB4F62580>, <app.database.models.Group object at 0x0000022AB4F62690>, <app.database.models.Group object at 0x0000022AB4F627A0>, <app.database.models.Group object at 0x0000022AB4F628B0>, <app.database.models.Group object at 0x0000022AB4F629C0>, <app.database.models.Group object at 0x0000022AB4F62AD0>, <app.database.models.Group object at 0x0000022AB4F62BE0>, <app.database.models.Group object at 0x0000022AB4F62CF0>, <app.database.models.Group object at 0x0000022AB4F62E00>, <app.database.models.Group object at 0x0000022AB4F62F10>, <app.database.models.Group object at 0x0000022AB4F63020>, <app.database.models.Group object at 0x0000022AB4F63130>, <app.database.models.Group object at 0x0000022AB4F63240>, <app.database.models.Group object at 0x0000022AB4F63350>, <app.database.models.Group object at 0x0000022AB4F63460>, <app.database.models.Group object at 0x0000022AB4F63570>, <app.database.models.Group object at 0x0000022AB4F63680>, <app.database.models.Group object at 0x0000022AB4F63790>, <app.database.models.Group object at 0x0000022AB4F638A0>, <app.database.models.Group object at 0x0000022AB4F639B0>]
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:14:56,412 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:14:56,412 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4965926897707809482161729
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4965926897707809482161729
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:14:57,065 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4965926897707809482161729')], HighestMarginPerLot=653.4965926897707809482161729
2025-06-04 00:14:57,066 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.50, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:14:57,066 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.50, AdditionalMargin=653.50
2025-06-04 00:14:57,071 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7234787971', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8866300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88663.000000000000000000'), 'margin': Decimal('653.4965926897707809482161729'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '3619474509', 'status': 'OPEN'}
2025-06-04 00:14:57,092 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:14:57,127 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:14:57,145 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7234787971', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88663000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88663.00000000'), 'margin': Decimal('653.49659269'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'close_id': '3619474509', 'status': 'OPEN'}
2025-06-04 00:14:57,149 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7234787971 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:22:07,805 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:24:58,788 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:25:03,101 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:25:13,942 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:25:13,970 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002D0C80B5010>, <app.database.models.Group object at 0x000002D0C81CC910>, <app.database.models.Group object at 0x000002D0C81CC2D0>, <app.database.models.Group object at 0x000002D0C811D220>, <app.database.models.Group object at 0x000002D0C811D350>, <app.database.models.Group object at 0x000002D0C81C85F0>, <app.database.models.Group object at 0x000002D0C8086CF0>, <app.database.models.Group object at 0x000002D0C8086E00>, <app.database.models.Group object at 0x000002D0C8086F10>, <app.database.models.Group object at 0x000002D0C8087020>, <app.database.models.Group object at 0x000002D0C8087130>, <app.database.models.Group object at 0x000002D0C8087240>, <app.database.models.Group object at 0x000002D0C8087350>, <app.database.models.Group object at 0x000002D0C8087460>, <app.database.models.Group object at 0x000002D0C8087570>, <app.database.models.Group object at 0x000002D0C8087680>, <app.database.models.Group object at 0x000002D0C8087790>, <app.database.models.Group object at 0x000002D0C80878A0>, <app.database.models.Group object at 0x000002D0C80879B0>, <app.database.models.Group object at 0x000002D0C8087AC0>, <app.database.models.Group object at 0x000002D0C8087BD0>, <app.database.models.Group object at 0x000002D0C8087CE0>, <app.database.models.Group object at 0x000002D0C8087DF0>, <app.database.models.Group object at 0x000002D0C8087F00>, <app.database.models.Group object at 0x000002D0C8214050>, <app.database.models.Group object at 0x000002D0C8214160>, <app.database.models.Group object at 0x000002D0C8214270>, <app.database.models.Group object at 0x000002D0C8214380>, <app.database.models.Group object at 0x000002D0C8214490>, <app.database.models.Group object at 0x000002D0C82145A0>, <app.database.models.Group object at 0x000002D0C82146B0>, <app.database.models.Group object at 0x000002D0C82147C0>, <app.database.models.Group object at 0x000002D0C82148D0>, <app.database.models.Group object at 0x000002D0C82149E0>, <app.database.models.Group object at 0x000002D0C8214AF0>, <app.database.models.Group object at 0x000002D0C8214C00>, <app.database.models.Group object at 0x000002D0C8214D10>, <app.database.models.Group object at 0x000002D0C8214E20>, <app.database.models.Group object at 0x000002D0C8214F30>, <app.database.models.Group object at 0x000002D0C8215040>, <app.database.models.Group object at 0x000002D0C8215150>, <app.database.models.Group object at 0x000002D0C8215260>, <app.database.models.Group object at 0x000002D0C8215370>, <app.database.models.Group object at 0x000002D0C8215480>, <app.database.models.Group object at 0x000002D0C8215590>, <app.database.models.Group object at 0x000002D0C82156A0>, <app.database.models.Group object at 0x000002D0C82157B0>, <app.database.models.Group object at 0x000002D0C82158C0>, <app.database.models.Group object at 0x000002D0C82159D0>, <app.database.models.Group object at 0x000002D0C8215AE0>, <app.database.models.Group object at 0x000002D0C8215BF0>, <app.database.models.Group object at 0x000002D0C8215D00>, <app.database.models.Group object at 0x000002D0C8215E10>, <app.database.models.Group object at 0x000002D0C8215F20>, <app.database.models.Group object at 0x000002D0C8216030>, <app.database.models.Group object at 0x000002D0C8216140>, <app.database.models.Group object at 0x000002D0C8216250>, <app.database.models.Group object at 0x000002D0C8216360>, <app.database.models.Group object at 0x000002D0C8216470>, <app.database.models.Group object at 0x000002D0C8216580>, <app.database.models.Group object at 0x000002D0C8216690>, <app.database.models.Group object at 0x000002D0C82167A0>, <app.database.models.Group object at 0x000002D0C82168B0>, <app.database.models.Group object at 0x000002D0C82169C0>, <app.database.models.Group object at 0x000002D0C8216AD0>, <app.database.models.Group object at 0x000002D0C8216BE0>, <app.database.models.Group object at 0x000002D0C8216CF0>, <app.database.models.Group object at 0x000002D0C8216E00>, <app.database.models.Group object at 0x000002D0C8216F10>, <app.database.models.Group object at 0x000002D0C8217020>, <app.database.models.Group object at 0x000002D0C8217130>, <app.database.models.Group object at 0x000002D0C8217240>, <app.database.models.Group object at 0x000002D0C8217350>, <app.database.models.Group object at 0x000002D0C8217460>, <app.database.models.Group object at 0x000002D0C8217570>, <app.database.models.Group object at 0x000002D0C8217680>, <app.database.models.Group object at 0x000002D0C8217790>, <app.database.models.Group object at 0x000002D0C82178A0>, <app.database.models.Group object at 0x000002D0C82179B0>]
2025-06-04 00:25:13,970 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:25:13,970 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:25:13,971 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:25:13,971 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:25:13,971 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:25:14,299 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:25:14,299 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:25:14,299 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.8517611383251691159318871
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.8517611383251691159318871
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.8517611383251691159318871')], HighestMarginPerLot=653.8517611383251691159318871
2025-06-04 00:25:14,300 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.85, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:25:14,300 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.85, AdditionalMargin=653.85
2025-06-04 00:25:14,319 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4112665728', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.8517611383251691159318871'), 'stop_loss': Decimal('0.88'), 'take_profit': Decimal('0.9'), 'close_id': '8232206759', 'status': 'OPEN'}
2025-06-04 00:25:14,368 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:25:14,442 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:25:14,494 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4112665728', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88698000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88698.00000000'), 'margin': Decimal('653.85176114'), 'stop_loss': Decimal('0.88000000'), 'take_profit': Decimal('0.90000000'), 'close_id': '8232206759', 'status': 'OPEN'}
2025-06-04 00:25:14,503 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4112665728 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:28:16,240 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:28:16,252 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002D0C8086F10>, <app.database.models.Group object at 0x000002D0C8087020>, <app.database.models.Group object at 0x000002D0C8087130>, <app.database.models.Group object at 0x000002D0C8087240>, <app.database.models.Group object at 0x000002D0C8087350>, <app.database.models.Group object at 0x000002D0C8087460>, <app.database.models.Group object at 0x000002D0C8087570>, <app.database.models.Group object at 0x000002D0C8087680>, <app.database.models.Group object at 0x000002D0C8087790>, <app.database.models.Group object at 0x000002D0C80878A0>, <app.database.models.Group object at 0x000002D0C80879B0>, <app.database.models.Group object at 0x000002D0C8087AC0>, <app.database.models.Group object at 0x000002D0C8087BD0>, <app.database.models.Group object at 0x000002D0C8087CE0>, <app.database.models.Group object at 0x000002D0C8087DF0>, <app.database.models.Group object at 0x000002D0C8087F00>, <app.database.models.Group object at 0x000002D0C80858C0>, <app.database.models.Group object at 0x000002D0C8217BD0>, <app.database.models.Group object at 0x000002D0C8214050>, <app.database.models.Group object at 0x000002D0C8214160>, <app.database.models.Group object at 0x000002D0C8214270>, <app.database.models.Group object at 0x000002D0C8214380>, <app.database.models.Group object at 0x000002D0C8214490>, <app.database.models.Group object at 0x000002D0C82145A0>, <app.database.models.Group object at 0x000002D0C82146B0>, <app.database.models.Group object at 0x000002D0C82147C0>, <app.database.models.Group object at 0x000002D0C82148D0>, <app.database.models.Group object at 0x000002D0C82149E0>, <app.database.models.Group object at 0x000002D0C8214AF0>, <app.database.models.Group object at 0x000002D0C8214C00>, <app.database.models.Group object at 0x000002D0C8214D10>, <app.database.models.Group object at 0x000002D0C8214E20>, <app.database.models.Group object at 0x000002D0C8214F30>, <app.database.models.Group object at 0x000002D0C8215040>, <app.database.models.Group object at 0x000002D0C8215150>, <app.database.models.Group object at 0x000002D0C8215260>, <app.database.models.Group object at 0x000002D0C8215370>, <app.database.models.Group object at 0x000002D0C8215480>, <app.database.models.Group object at 0x000002D0C8215590>, <app.database.models.Group object at 0x000002D0C82156A0>, <app.database.models.Group object at 0x000002D0C82157B0>, <app.database.models.Group object at 0x000002D0C82158C0>, <app.database.models.Group object at 0x000002D0C82159D0>, <app.database.models.Group object at 0x000002D0C8215AE0>, <app.database.models.Group object at 0x000002D0C8215BF0>, <app.database.models.Group object at 0x000002D0C8215D00>, <app.database.models.Group object at 0x000002D0C8215E10>, <app.database.models.Group object at 0x000002D0C8215F20>, <app.database.models.Group object at 0x000002D0C8216030>, <app.database.models.Group object at 0x000002D0C8216140>, <app.database.models.Group object at 0x000002D0C8216250>, <app.database.models.Group object at 0x000002D0C8216360>, <app.database.models.Group object at 0x000002D0C8216470>, <app.database.models.Group object at 0x000002D0C8216580>, <app.database.models.Group object at 0x000002D0C8216690>, <app.database.models.Group object at 0x000002D0C82167A0>, <app.database.models.Group object at 0x000002D0C82168B0>, <app.database.models.Group object at 0x000002D0C82169C0>, <app.database.models.Group object at 0x000002D0C8216AD0>, <app.database.models.Group object at 0x000002D0C8216BE0>, <app.database.models.Group object at 0x000002D0C8216CF0>, <app.database.models.Group object at 0x000002D0C8216E00>, <app.database.models.Group object at 0x000002D0C8216F10>, <app.database.models.Group object at 0x000002D0C8217020>, <app.database.models.Group object at 0x000002D0C8217130>, <app.database.models.Group object at 0x000002D0C8217240>, <app.database.models.Group object at 0x000002D0C8217350>, <app.database.models.Group object at 0x000002D0C8217460>, <app.database.models.Group object at 0x000002D0C8217570>, <app.database.models.Group object at 0x000002D0C8217680>, <app.database.models.Group object at 0x000002D0C8217790>, <app.database.models.Group object at 0x000002D0C82178A0>, <app.database.models.Group object at 0x000002D0C82179B0>, <app.database.models.Group object at 0x000002D0C8217AC0>, <app.database.models.Group object at 0x000002D0C8217F00>, <app.database.models.Group object at 0x000002D0C825C050>, <app.database.models.Group object at 0x000002D0C825C270>, <app.database.models.Group object at 0x000002D0C825C490>, <app.database.models.Group object at 0x000002D0C825C5A0>]
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:28:16,253 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:28:16,253 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:28:16,871 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.1391754456311741333430540
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.1391754456311741333430540
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.1391754456311741333430540')], HighestMarginPerLot=654.1391754456311741333430540
2025-06-04 00:28:16,872 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.14, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:28:16,872 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.14, AdditionalMargin=654.14
2025-06-04 00:28:16,877 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6188940979', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8872500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88725.000000000000000000'), 'margin': Decimal('654.1391754456311741333430540'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '7337322511', 'status': 'OPEN'}
2025-06-04 00:28:16,925 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:28:17,097 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:28:17,257 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6188940979', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88725000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88725.00000000'), 'margin': Decimal('654.13917545'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'close_id': '7337322511', 'status': 'OPEN'}
2025-06-04 00:28:17,272 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6188940979 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:36:26,280 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:38:09,107 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001D5B26174D0>, <app.database.models.Group object at 0x000001D5B2657250>, <app.database.models.Group object at 0x000001D5B2656990>, <app.database.models.Group object at 0x000001D5B148F490>, <app.database.models.Group object at 0x000001D5B2874FC0>, <app.database.models.Group object at 0x000001D5B2904050>, <app.database.models.Group object at 0x000001D5B26329C0>, <app.database.models.Group object at 0x000001D5B2632AD0>, <app.database.models.Group object at 0x000001D5B2632BE0>, <app.database.models.Group object at 0x000001D5B2632CF0>, <app.database.models.Group object at 0x000001D5B2632E00>, <app.database.models.Group object at 0x000001D5B2632F10>, <app.database.models.Group object at 0x000001D5B2633020>, <app.database.models.Group object at 0x000001D5B2633130>, <app.database.models.Group object at 0x000001D5B2633240>, <app.database.models.Group object at 0x000001D5B2633350>, <app.database.models.Group object at 0x000001D5B2633460>, <app.database.models.Group object at 0x000001D5B2633570>, <app.database.models.Group object at 0x000001D5B2633680>, <app.database.models.Group object at 0x000001D5B2633790>, <app.database.models.Group object at 0x000001D5B26338A0>, <app.database.models.Group object at 0x000001D5B26339B0>, <app.database.models.Group object at 0x000001D5B2633AC0>, <app.database.models.Group object at 0x000001D5B2633BD0>, <app.database.models.Group object at 0x000001D5B2633CE0>, <app.database.models.Group object at 0x000001D5B2633DF0>, <app.database.models.Group object at 0x000001D5B2633F00>, <app.database.models.Group object at 0x000001D5B296C050>, <app.database.models.Group object at 0x000001D5B296C160>, <app.database.models.Group object at 0x000001D5B296C270>, <app.database.models.Group object at 0x000001D5B296C380>, <app.database.models.Group object at 0x000001D5B296C490>, <app.database.models.Group object at 0x000001D5B296C5A0>, <app.database.models.Group object at 0x000001D5B296C6B0>, <app.database.models.Group object at 0x000001D5B296C7C0>, <app.database.models.Group object at 0x000001D5B296C8D0>, <app.database.models.Group object at 0x000001D5B296C9E0>, <app.database.models.Group object at 0x000001D5B296CAF0>, <app.database.models.Group object at 0x000001D5B296CC00>, <app.database.models.Group object at 0x000001D5B296CD10>, <app.database.models.Group object at 0x000001D5B296CE20>, <app.database.models.Group object at 0x000001D5B296CF30>, <app.database.models.Group object at 0x000001D5B296D040>, <app.database.models.Group object at 0x000001D5B296D150>, <app.database.models.Group object at 0x000001D5B296D260>, <app.database.models.Group object at 0x000001D5B296D370>, <app.database.models.Group object at 0x000001D5B296D480>, <app.database.models.Group object at 0x000001D5B296D590>, <app.database.models.Group object at 0x000001D5B296D6A0>, <app.database.models.Group object at 0x000001D5B296D7B0>, <app.database.models.Group object at 0x000001D5B296D8C0>, <app.database.models.Group object at 0x000001D5B296D9D0>, <app.database.models.Group object at 0x000001D5B296DAE0>, <app.database.models.Group object at 0x000001D5B296DBF0>, <app.database.models.Group object at 0x000001D5B296DD00>, <app.database.models.Group object at 0x000001D5B296DE10>, <app.database.models.Group object at 0x000001D5B296DF20>, <app.database.models.Group object at 0x000001D5B296E030>, <app.database.models.Group object at 0x000001D5B296E140>, <app.database.models.Group object at 0x000001D5B296E250>, <app.database.models.Group object at 0x000001D5B296E360>, <app.database.models.Group object at 0x000001D5B296E470>, <app.database.models.Group object at 0x000001D5B296E580>, <app.database.models.Group object at 0x000001D5B296E690>, <app.database.models.Group object at 0x000001D5B296E7A0>, <app.database.models.Group object at 0x000001D5B296E8B0>, <app.database.models.Group object at 0x000001D5B296E9C0>, <app.database.models.Group object at 0x000001D5B296EAD0>, <app.database.models.Group object at 0x000001D5B296EBE0>, <app.database.models.Group object at 0x000001D5B296ECF0>, <app.database.models.Group object at 0x000001D5B296EE00>, <app.database.models.Group object at 0x000001D5B296EF10>, <app.database.models.Group object at 0x000001D5B296F020>, <app.database.models.Group object at 0x000001D5B296F130>, <app.database.models.Group object at 0x000001D5B296F240>, <app.database.models.Group object at 0x000001D5B296F350>, <app.database.models.Group object at 0x000001D5B296F460>, <app.database.models.Group object at 0x000001D5B296F570>, <app.database.models.Group object at 0x000001D5B296F680>]
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:38:09,132 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:38:09,132 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:38:09,144 - app.services.order_processing - ERROR - Error processing new order: Failed to get market data
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 179, in process_new_order
    raise OrderProcessingError("Failed to get market data")
app.services.order_processing.OrderProcessingError: Failed to get market data
2025-06-04 00:38:09,145 - ERROR - orders - Order processing error: Failed to process order: Failed to get market data
2025-06-04 00:40:38,520 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:42:56,189 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:43:17,245 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:43:17,300 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000012E58815160>, <app.database.models.Group object at 0x0000012E5892C910>, <app.database.models.Group object at 0x0000012E5892C2D0>, <app.database.models.Group object at 0x0000012E588A10F0>, <app.database.models.Group object at 0x0000012E588A1220>, <app.database.models.Group object at 0x0000012E589285F0>, <app.database.models.Group object at 0x0000012E587E2CF0>, <app.database.models.Group object at 0x0000012E587E2E00>, <app.database.models.Group object at 0x0000012E587E2F10>, <app.database.models.Group object at 0x0000012E587E3020>, <app.database.models.Group object at 0x0000012E587E3130>, <app.database.models.Group object at 0x0000012E587E3240>, <app.database.models.Group object at 0x0000012E587E3350>, <app.database.models.Group object at 0x0000012E587E3460>, <app.database.models.Group object at 0x0000012E587E3570>, <app.database.models.Group object at 0x0000012E587E3680>, <app.database.models.Group object at 0x0000012E587E3790>, <app.database.models.Group object at 0x0000012E587E38A0>, <app.database.models.Group object at 0x0000012E587E39B0>, <app.database.models.Group object at 0x0000012E587E3AC0>, <app.database.models.Group object at 0x0000012E587E3BD0>, <app.database.models.Group object at 0x0000012E587E3CE0>, <app.database.models.Group object at 0x0000012E587E3DF0>, <app.database.models.Group object at 0x0000012E587E3F00>, <app.database.models.Group object at 0x0000012E58974050>, <app.database.models.Group object at 0x0000012E58974160>, <app.database.models.Group object at 0x0000012E58974270>, <app.database.models.Group object at 0x0000012E58974380>, <app.database.models.Group object at 0x0000012E58974490>, <app.database.models.Group object at 0x0000012E589745A0>, <app.database.models.Group object at 0x0000012E589746B0>, <app.database.models.Group object at 0x0000012E589747C0>, <app.database.models.Group object at 0x0000012E589748D0>, <app.database.models.Group object at 0x0000012E589749E0>, <app.database.models.Group object at 0x0000012E58974AF0>, <app.database.models.Group object at 0x0000012E58974C00>, <app.database.models.Group object at 0x0000012E58974D10>, <app.database.models.Group object at 0x0000012E58974E20>, <app.database.models.Group object at 0x0000012E58974F30>, <app.database.models.Group object at 0x0000012E58975040>, <app.database.models.Group object at 0x0000012E58975150>, <app.database.models.Group object at 0x0000012E58975260>, <app.database.models.Group object at 0x0000012E58975370>, <app.database.models.Group object at 0x0000012E58975480>, <app.database.models.Group object at 0x0000012E58975590>, <app.database.models.Group object at 0x0000012E589756A0>, <app.database.models.Group object at 0x0000012E589757B0>, <app.database.models.Group object at 0x0000012E589758C0>, <app.database.models.Group object at 0x0000012E589759D0>, <app.database.models.Group object at 0x0000012E58975AE0>, <app.database.models.Group object at 0x0000012E58975BF0>, <app.database.models.Group object at 0x0000012E58975D00>, <app.database.models.Group object at 0x0000012E58975E10>, <app.database.models.Group object at 0x0000012E58975F20>, <app.database.models.Group object at 0x0000012E58976030>, <app.database.models.Group object at 0x0000012E58976140>, <app.database.models.Group object at 0x0000012E58976250>, <app.database.models.Group object at 0x0000012E58976360>, <app.database.models.Group object at 0x0000012E58976470>, <app.database.models.Group object at 0x0000012E58976580>, <app.database.models.Group object at 0x0000012E58976690>, <app.database.models.Group object at 0x0000012E589767A0>, <app.database.models.Group object at 0x0000012E589768B0>, <app.database.models.Group object at 0x0000012E589769C0>, <app.database.models.Group object at 0x0000012E58976AD0>, <app.database.models.Group object at 0x0000012E58976BE0>, <app.database.models.Group object at 0x0000012E58976CF0>, <app.database.models.Group object at 0x0000012E58976E00>, <app.database.models.Group object at 0x0000012E58976F10>, <app.database.models.Group object at 0x0000012E58977020>, <app.database.models.Group object at 0x0000012E58977130>, <app.database.models.Group object at 0x0000012E58977240>, <app.database.models.Group object at 0x0000012E58977350>, <app.database.models.Group object at 0x0000012E58977460>, <app.database.models.Group object at 0x0000012E58977570>, <app.database.models.Group object at 0x0000012E58977680>, <app.database.models.Group object at 0x0000012E58977790>, <app.database.models.Group object at 0x0000012E589778A0>, <app.database.models.Group object at 0x0000012E589779B0>]
2025-06-04 00:43:17,301 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:43:17,301 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:43:17,301 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:43:17,302 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:43:17,302 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:43:17,616 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.0932325125236070905126840
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.0932325125236070905126840
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.0932325125236070905126840')], HighestMarginPerLot=654.0932325125236070905126840
2025-06-04 00:43:17,617 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.09, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:43:17,618 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.09, AdditionalMargin=654.09
2025-06-04 00:43:17,653 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9347759820', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88703.000000000000000000'), 'margin': Decimal('654.0932325125236070905126840'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '1745010916', 'status': 'OPEN'}
2025-06-04 00:43:17,695 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:43:17,776 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:43:17,828 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '9347759820', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88703000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88703.00000000'), 'margin': Decimal('654.09323251'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:43:18,127 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 9347759820 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:48:55,296 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:50:34,055 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:50:34,071 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000016CA1925160>, <app.database.models.Group object at 0x0000016CA1A3C910>, <app.database.models.Group object at 0x0000016CA1A3C2D0>, <app.database.models.Group object at 0x0000016CA19B10F0>, <app.database.models.Group object at 0x0000016CA19B1220>, <app.database.models.Group object at 0x0000016CA1A385F0>, <app.database.models.Group object at 0x0000016CA18F2CF0>, <app.database.models.Group object at 0x0000016CA18F2E00>, <app.database.models.Group object at 0x0000016CA18F2F10>, <app.database.models.Group object at 0x0000016CA18F3020>, <app.database.models.Group object at 0x0000016CA18F3130>, <app.database.models.Group object at 0x0000016CA18F3240>, <app.database.models.Group object at 0x0000016CA18F3350>, <app.database.models.Group object at 0x0000016CA18F3460>, <app.database.models.Group object at 0x0000016CA18F3570>, <app.database.models.Group object at 0x0000016CA18F3680>, <app.database.models.Group object at 0x0000016CA18F3790>, <app.database.models.Group object at 0x0000016CA18F38A0>, <app.database.models.Group object at 0x0000016CA18F39B0>, <app.database.models.Group object at 0x0000016CA18F3AC0>, <app.database.models.Group object at 0x0000016CA18F3BD0>, <app.database.models.Group object at 0x0000016CA18F3CE0>, <app.database.models.Group object at 0x0000016CA18F3DF0>, <app.database.models.Group object at 0x0000016CA18F3F00>, <app.database.models.Group object at 0x0000016CA1A84050>, <app.database.models.Group object at 0x0000016CA1A84160>, <app.database.models.Group object at 0x0000016CA1A84270>, <app.database.models.Group object at 0x0000016CA1A84380>, <app.database.models.Group object at 0x0000016CA1A84490>, <app.database.models.Group object at 0x0000016CA1A845A0>, <app.database.models.Group object at 0x0000016CA1A846B0>, <app.database.models.Group object at 0x0000016CA1A847C0>, <app.database.models.Group object at 0x0000016CA1A848D0>, <app.database.models.Group object at 0x0000016CA1A849E0>, <app.database.models.Group object at 0x0000016CA1A84AF0>, <app.database.models.Group object at 0x0000016CA1A84C00>, <app.database.models.Group object at 0x0000016CA1A84D10>, <app.database.models.Group object at 0x0000016CA1A84E20>, <app.database.models.Group object at 0x0000016CA1A84F30>, <app.database.models.Group object at 0x0000016CA1A85040>, <app.database.models.Group object at 0x0000016CA1A85150>, <app.database.models.Group object at 0x0000016CA1A85260>, <app.database.models.Group object at 0x0000016CA1A85370>, <app.database.models.Group object at 0x0000016CA1A85480>, <app.database.models.Group object at 0x0000016CA1A85590>, <app.database.models.Group object at 0x0000016CA1A856A0>, <app.database.models.Group object at 0x0000016CA1A857B0>, <app.database.models.Group object at 0x0000016CA1A858C0>, <app.database.models.Group object at 0x0000016CA1A859D0>, <app.database.models.Group object at 0x0000016CA1A85AE0>, <app.database.models.Group object at 0x0000016CA1A85BF0>, <app.database.models.Group object at 0x0000016CA1A85D00>, <app.database.models.Group object at 0x0000016CA1A85E10>, <app.database.models.Group object at 0x0000016CA1A85F20>, <app.database.models.Group object at 0x0000016CA1A86030>, <app.database.models.Group object at 0x0000016CA1A86140>, <app.database.models.Group object at 0x0000016CA1A86250>, <app.database.models.Group object at 0x0000016CA1A86360>, <app.database.models.Group object at 0x0000016CA1A86470>, <app.database.models.Group object at 0x0000016CA1A86580>, <app.database.models.Group object at 0x0000016CA1A86690>, <app.database.models.Group object at 0x0000016CA1A867A0>, <app.database.models.Group object at 0x0000016CA1A868B0>, <app.database.models.Group object at 0x0000016CA1A869C0>, <app.database.models.Group object at 0x0000016CA1A86AD0>, <app.database.models.Group object at 0x0000016CA1A86BE0>, <app.database.models.Group object at 0x0000016CA1A86CF0>, <app.database.models.Group object at 0x0000016CA1A86E00>, <app.database.models.Group object at 0x0000016CA1A86F10>, <app.database.models.Group object at 0x0000016CA1A87020>, <app.database.models.Group object at 0x0000016CA1A87130>, <app.database.models.Group object at 0x0000016CA1A87240>, <app.database.models.Group object at 0x0000016CA1A87350>, <app.database.models.Group object at 0x0000016CA1A87460>, <app.database.models.Group object at 0x0000016CA1A87570>, <app.database.models.Group object at 0x0000016CA1A87680>, <app.database.models.Group object at 0x0000016CA1A87790>, <app.database.models.Group object at 0x0000016CA1A878A0>, <app.database.models.Group object at 0x0000016CA1A879B0>]
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:50:34,072 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:50:34,072 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.0085311167013015421634037
2025-06-04 00:50:34,693 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.0085311167013015421634037
2025-06-04 00:50:34,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:50:34,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.0085311167013015421634037')], HighestMarginPerLot=654.0085311167013015421634037
2025-06-04 00:50:34,694 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.01, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:50:34,694 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.01, AdditionalMargin=654.01
2025-06-04 00:50:34,702 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7220350990', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869400000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88694.000000000000000000'), 'margin': Decimal('654.0085311167013015421634037'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '7112366871', 'status': 'OPEN'}
2025-06-04 00:50:34,724 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:50:34,785 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:50:34,861 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7220350990', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88694000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88694.00000000'), 'margin': Decimal('654.00853112'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:50:35,147 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7220350990 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:52:33,963 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:52:59,934 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001D733A75160>, <app.database.models.Group object at 0x000001D733B88A50>, <app.database.models.Group object at 0x000001D733B88410>, <app.database.models.Group object at 0x000001D733B04FC0>, <app.database.models.Group object at 0x000001D733B050F0>, <app.database.models.Group object at 0x000001D733B8C5F0>, <app.database.models.Group object at 0x000001D733A2EE00>, <app.database.models.Group object at 0x000001D733A2EF10>, <app.database.models.Group object at 0x000001D733A2F020>, <app.database.models.Group object at 0x000001D733A2F130>, <app.database.models.Group object at 0x000001D733A2F240>, <app.database.models.Group object at 0x000001D733A2F350>, <app.database.models.Group object at 0x000001D733A2F460>, <app.database.models.Group object at 0x000001D733A2F570>, <app.database.models.Group object at 0x000001D733A2F680>, <app.database.models.Group object at 0x000001D733A2F790>, <app.database.models.Group object at 0x000001D733A2F8A0>, <app.database.models.Group object at 0x000001D733A2F9B0>, <app.database.models.Group object at 0x000001D733A2FAC0>, <app.database.models.Group object at 0x000001D733A2FBD0>, <app.database.models.Group object at 0x000001D733A2FCE0>, <app.database.models.Group object at 0x000001D733A2FDF0>, <app.database.models.Group object at 0x000001D733A2FF00>, <app.database.models.Group object at 0x000001D733BD4050>, <app.database.models.Group object at 0x000001D733BD4160>, <app.database.models.Group object at 0x000001D733BD4270>, <app.database.models.Group object at 0x000001D733BD4380>, <app.database.models.Group object at 0x000001D733BD4490>, <app.database.models.Group object at 0x000001D733BD45A0>, <app.database.models.Group object at 0x000001D733BD46B0>, <app.database.models.Group object at 0x000001D733BD47C0>, <app.database.models.Group object at 0x000001D733BD48D0>, <app.database.models.Group object at 0x000001D733BD49E0>, <app.database.models.Group object at 0x000001D733BD4AF0>, <app.database.models.Group object at 0x000001D733BD4C00>, <app.database.models.Group object at 0x000001D733BD4D10>, <app.database.models.Group object at 0x000001D733BD4E20>, <app.database.models.Group object at 0x000001D733BD4F30>, <app.database.models.Group object at 0x000001D733BD5040>, <app.database.models.Group object at 0x000001D733BD5150>, <app.database.models.Group object at 0x000001D733BD5260>, <app.database.models.Group object at 0x000001D733BD5370>, <app.database.models.Group object at 0x000001D733BD5480>, <app.database.models.Group object at 0x000001D733BD5590>, <app.database.models.Group object at 0x000001D733BD56A0>, <app.database.models.Group object at 0x000001D733BD57B0>, <app.database.models.Group object at 0x000001D733BD58C0>, <app.database.models.Group object at 0x000001D733BD59D0>, <app.database.models.Group object at 0x000001D733BD5AE0>, <app.database.models.Group object at 0x000001D733BD5BF0>, <app.database.models.Group object at 0x000001D733BD5D00>, <app.database.models.Group object at 0x000001D733BD5E10>, <app.database.models.Group object at 0x000001D733BD5F20>, <app.database.models.Group object at 0x000001D733BD6030>, <app.database.models.Group object at 0x000001D733BD6140>, <app.database.models.Group object at 0x000001D733BD6250>, <app.database.models.Group object at 0x000001D733BD6360>, <app.database.models.Group object at 0x000001D733BD6470>, <app.database.models.Group object at 0x000001D733BD6580>, <app.database.models.Group object at 0x000001D733BD6690>, <app.database.models.Group object at 0x000001D733BD67A0>, <app.database.models.Group object at 0x000001D733BD68B0>, <app.database.models.Group object at 0x000001D733BD69C0>, <app.database.models.Group object at 0x000001D733BD6AD0>, <app.database.models.Group object at 0x000001D733BD6BE0>, <app.database.models.Group object at 0x000001D733BD6CF0>, <app.database.models.Group object at 0x000001D733BD6E00>, <app.database.models.Group object at 0x000001D733BD6F10>, <app.database.models.Group object at 0x000001D733BD7020>, <app.database.models.Group object at 0x000001D733BD7130>, <app.database.models.Group object at 0x000001D733BD7240>, <app.database.models.Group object at 0x000001D733BD7350>, <app.database.models.Group object at 0x000001D733BD7460>, <app.database.models.Group object at 0x000001D733BD7570>, <app.database.models.Group object at 0x000001D733BD7680>, <app.database.models.Group object at 0x000001D733BD7790>, <app.database.models.Group object at 0x000001D733BD78A0>, <app.database.models.Group object at 0x000001D733BD79B0>, <app.database.models.Group object at 0x000001D733BD7AC0>]
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:52:59,941 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:52:59,941 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.1075413087546850617626041
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.1075413087546850617626041
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.1075413087546850617626041')], HighestMarginPerLot=654.1075413087546850617626041
2025-06-04 00:53:00,250 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.11, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:53:00,250 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.11, AdditionalMargin=654.11
2025-06-04 00:53:00,258 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7361234532', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870300000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88703.000000000000000000'), 'margin': Decimal('654.1075413087546850617626041'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '1191104349', 'status': 'OPEN'}
2025-06-04 00:53:00,276 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:53:00,308 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:53:00,327 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7361234532', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88703000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88703.00000000'), 'margin': Decimal('654.10754131'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:53:00,618 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7361234532 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 00:54:13,466 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 00:54:44,489 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000019656C45160>, <app.database.models.Group object at 0x0000019656D5C910>, <app.database.models.Group object at 0x0000019656D5C2D0>, <app.database.models.Group object at 0x0000019656CD4FC0>, <app.database.models.Group object at 0x0000019656CD50F0>, <app.database.models.Group object at 0x0000019656D585F0>, <app.database.models.Group object at 0x0000019656C13020>, <app.database.models.Group object at 0x0000019656C13130>, <app.database.models.Group object at 0x0000019656C13240>, <app.database.models.Group object at 0x0000019656C13350>, <app.database.models.Group object at 0x0000019656C13460>, <app.database.models.Group object at 0x0000019656C13570>, <app.database.models.Group object at 0x0000019656C13680>, <app.database.models.Group object at 0x0000019656C13790>, <app.database.models.Group object at 0x0000019656C138A0>, <app.database.models.Group object at 0x0000019656C139B0>, <app.database.models.Group object at 0x0000019656C13AC0>, <app.database.models.Group object at 0x0000019656C13BD0>, <app.database.models.Group object at 0x0000019656C13CE0>, <app.database.models.Group object at 0x0000019656C13DF0>, <app.database.models.Group object at 0x0000019656C13F00>, <app.database.models.Group object at 0x0000019656DA4050>, <app.database.models.Group object at 0x0000019656DA4160>, <app.database.models.Group object at 0x0000019656DA4270>, <app.database.models.Group object at 0x0000019656DA4380>, <app.database.models.Group object at 0x0000019656DA4490>, <app.database.models.Group object at 0x0000019656DA45A0>, <app.database.models.Group object at 0x0000019656DA46B0>, <app.database.models.Group object at 0x0000019656DA47C0>, <app.database.models.Group object at 0x0000019656DA48D0>, <app.database.models.Group object at 0x0000019656DA49E0>, <app.database.models.Group object at 0x0000019656DA4AF0>, <app.database.models.Group object at 0x0000019656DA4C00>, <app.database.models.Group object at 0x0000019656DA4D10>, <app.database.models.Group object at 0x0000019656DA4E20>, <app.database.models.Group object at 0x0000019656DA4F30>, <app.database.models.Group object at 0x0000019656DA5040>, <app.database.models.Group object at 0x0000019656DA5150>, <app.database.models.Group object at 0x0000019656DA5260>, <app.database.models.Group object at 0x0000019656DA5370>, <app.database.models.Group object at 0x0000019656DA5480>, <app.database.models.Group object at 0x0000019656DA5590>, <app.database.models.Group object at 0x0000019656DA56A0>, <app.database.models.Group object at 0x0000019656DA57B0>, <app.database.models.Group object at 0x0000019656DA58C0>, <app.database.models.Group object at 0x0000019656DA59D0>, <app.database.models.Group object at 0x0000019656DA5AE0>, <app.database.models.Group object at 0x0000019656DA5BF0>, <app.database.models.Group object at 0x0000019656DA5D00>, <app.database.models.Group object at 0x0000019656DA5E10>, <app.database.models.Group object at 0x0000019656DA5F20>, <app.database.models.Group object at 0x0000019656DA6030>, <app.database.models.Group object at 0x0000019656DA6140>, <app.database.models.Group object at 0x0000019656DA6250>, <app.database.models.Group object at 0x0000019656DA6360>, <app.database.models.Group object at 0x0000019656DA6470>, <app.database.models.Group object at 0x0000019656DA6580>, <app.database.models.Group object at 0x0000019656DA6690>, <app.database.models.Group object at 0x0000019656DA67A0>, <app.database.models.Group object at 0x0000019656DA68B0>, <app.database.models.Group object at 0x0000019656DA69C0>, <app.database.models.Group object at 0x0000019656DA6AD0>, <app.database.models.Group object at 0x0000019656DA6BE0>, <app.database.models.Group object at 0x0000019656DA6CF0>, <app.database.models.Group object at 0x0000019656DA6E00>, <app.database.models.Group object at 0x0000019656DA6F10>, <app.database.models.Group object at 0x0000019656DA7020>, <app.database.models.Group object at 0x0000019656DA7130>, <app.database.models.Group object at 0x0000019656DA7240>, <app.database.models.Group object at 0x0000019656DA7350>, <app.database.models.Group object at 0x0000019656DA7460>, <app.database.models.Group object at 0x0000019656DA7570>, <app.database.models.Group object at 0x0000019656DA7680>, <app.database.models.Group object at 0x0000019656DA7790>, <app.database.models.Group object at 0x0000019656DA78A0>, <app.database.models.Group object at 0x0000019656DA79B0>, <app.database.models.Group object at 0x0000019656DA7AC0>, <app.database.models.Group object at 0x0000019656DA7BD0>, <app.database.models.Group object at 0x0000019656DA7CE0>]
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 00:54:44,499 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 00:54:44,499 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.8565274122886946633329203
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.8565274122886946633329203
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.8565274122886946633329203')], HighestMarginPerLot=653.8565274122886946633329203
2025-06-04 00:54:44,807 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.86, ContributingOrders=1 (based on individual stored margins)
2025-06-04 00:54:44,807 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.86, AdditionalMargin=653.86
2025-06-04 00:54:44,814 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '2001449270', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8869800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88698.000000000000000000'), 'margin': Decimal('653.8565274122886946633329203'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'close_id': '4134034480', 'status': 'OPEN'}
2025-06-04 00:54:44,829 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 00:54:44,859 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 00:54:44,877 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '2001449270', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88698000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88698.00000000'), 'margin': Decimal('653.85652741'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 00:54:45,468 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 2001449270 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:00:44,315 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:01:11,607 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:01:11,621 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001F1E9AC5010>, <app.database.models.Group object at 0x000001F1E9A97D90>, <app.database.models.Group object at 0x000001F1E9BDC7D0>, <app.database.models.Group object at 0x000001F1E9B4D0F0>, <app.database.models.Group object at 0x000001F1E9B4D220>, <app.database.models.Group object at 0x000001F1E9BD85F0>, <app.database.models.Group object at 0x000001F1E9A92CF0>, <app.database.models.Group object at 0x000001F1E9A92E00>, <app.database.models.Group object at 0x000001F1E9A92F10>, <app.database.models.Group object at 0x000001F1E9A93020>, <app.database.models.Group object at 0x000001F1E9A93130>, <app.database.models.Group object at 0x000001F1E9A93240>, <app.database.models.Group object at 0x000001F1E9A93350>, <app.database.models.Group object at 0x000001F1E9A93460>, <app.database.models.Group object at 0x000001F1E9A93570>, <app.database.models.Group object at 0x000001F1E9A93680>, <app.database.models.Group object at 0x000001F1E9A93790>, <app.database.models.Group object at 0x000001F1E9A938A0>, <app.database.models.Group object at 0x000001F1E9A939B0>, <app.database.models.Group object at 0x000001F1E9A93AC0>, <app.database.models.Group object at 0x000001F1E9A93BD0>, <app.database.models.Group object at 0x000001F1E9A93CE0>, <app.database.models.Group object at 0x000001F1E9A93DF0>, <app.database.models.Group object at 0x000001F1E9A93F00>, <app.database.models.Group object at 0x000001F1E9C24050>, <app.database.models.Group object at 0x000001F1E9C24160>, <app.database.models.Group object at 0x000001F1E9C24270>, <app.database.models.Group object at 0x000001F1E9C24380>, <app.database.models.Group object at 0x000001F1E9C24490>, <app.database.models.Group object at 0x000001F1E9C245A0>, <app.database.models.Group object at 0x000001F1E9C246B0>, <app.database.models.Group object at 0x000001F1E9C247C0>, <app.database.models.Group object at 0x000001F1E9C248D0>, <app.database.models.Group object at 0x000001F1E9C249E0>, <app.database.models.Group object at 0x000001F1E9C24AF0>, <app.database.models.Group object at 0x000001F1E9C24C00>, <app.database.models.Group object at 0x000001F1E9C24D10>, <app.database.models.Group object at 0x000001F1E9C24E20>, <app.database.models.Group object at 0x000001F1E9C24F30>, <app.database.models.Group object at 0x000001F1E9C25040>, <app.database.models.Group object at 0x000001F1E9C25150>, <app.database.models.Group object at 0x000001F1E9C25260>, <app.database.models.Group object at 0x000001F1E9C25370>, <app.database.models.Group object at 0x000001F1E9C25480>, <app.database.models.Group object at 0x000001F1E9C25590>, <app.database.models.Group object at 0x000001F1E9C256A0>, <app.database.models.Group object at 0x000001F1E9C257B0>, <app.database.models.Group object at 0x000001F1E9C258C0>, <app.database.models.Group object at 0x000001F1E9C259D0>, <app.database.models.Group object at 0x000001F1E9C25AE0>, <app.database.models.Group object at 0x000001F1E9C25BF0>, <app.database.models.Group object at 0x000001F1E9C25D00>, <app.database.models.Group object at 0x000001F1E9C25E10>, <app.database.models.Group object at 0x000001F1E9C25F20>, <app.database.models.Group object at 0x000001F1E9C26030>, <app.database.models.Group object at 0x000001F1E9C26140>, <app.database.models.Group object at 0x000001F1E9C26250>, <app.database.models.Group object at 0x000001F1E9C26360>, <app.database.models.Group object at 0x000001F1E9C26470>, <app.database.models.Group object at 0x000001F1E9C26580>, <app.database.models.Group object at 0x000001F1E9C26690>, <app.database.models.Group object at 0x000001F1E9C267A0>, <app.database.models.Group object at 0x000001F1E9C268B0>, <app.database.models.Group object at 0x000001F1E9C269C0>, <app.database.models.Group object at 0x000001F1E9C26AD0>, <app.database.models.Group object at 0x000001F1E9C26BE0>, <app.database.models.Group object at 0x000001F1E9C26CF0>, <app.database.models.Group object at 0x000001F1E9C26E00>, <app.database.models.Group object at 0x000001F1E9C26F10>, <app.database.models.Group object at 0x000001F1E9C27020>, <app.database.models.Group object at 0x000001F1E9C27130>, <app.database.models.Group object at 0x000001F1E9C27240>, <app.database.models.Group object at 0x000001F1E9C27350>, <app.database.models.Group object at 0x000001F1E9C27460>, <app.database.models.Group object at 0x000001F1E9C27570>, <app.database.models.Group object at 0x000001F1E9C27680>, <app.database.models.Group object at 0x000001F1E9C27790>, <app.database.models.Group object at 0x000001F1E9C278A0>, <app.database.models.Group object at 0x000001F1E9C279B0>]
2025-06-04 01:01:11,622 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:01:11,622 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:01:11,622 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:01:11,623 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:01:11,623 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.4191554347112980471341201
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.4191554347112980471341201
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.4191554347112980471341201')], HighestMarginPerLot=653.4191554347112980471341201
2025-06-04 01:01:11,949 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.42, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:01:11,949 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.42, AdditionalMargin=653.42
2025-06-04 01:01:11,970 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5106803106', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8863800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88638.000000000000000000'), 'margin': Decimal('653.4191554347112980471341201'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:01:12,021 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:01:12,112 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:01:12,167 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5106803106', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88638000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88638.00000000'), 'margin': Decimal('653.41915543'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:01:12,780 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5106803106 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:06:22,602 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:06:30,021 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:06:30,037 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000020E0C285160>, <app.database.models.Group object at 0x0000020E0C398A50>, <app.database.models.Group object at 0x0000020E0C398410>, <app.database.models.Group object at 0x0000020E0C314FC0>, <app.database.models.Group object at 0x0000020E0C3150F0>, <app.database.models.Group object at 0x0000020E0C39C710>, <app.database.models.Group object at 0x0000020E0C252F10>, <app.database.models.Group object at 0x0000020E0C253020>, <app.database.models.Group object at 0x0000020E0C253130>, <app.database.models.Group object at 0x0000020E0C253240>, <app.database.models.Group object at 0x0000020E0C253350>, <app.database.models.Group object at 0x0000020E0C253460>, <app.database.models.Group object at 0x0000020E0C253570>, <app.database.models.Group object at 0x0000020E0C253680>, <app.database.models.Group object at 0x0000020E0C253790>, <app.database.models.Group object at 0x0000020E0C2538A0>, <app.database.models.Group object at 0x0000020E0C2539B0>, <app.database.models.Group object at 0x0000020E0C253AC0>, <app.database.models.Group object at 0x0000020E0C253BD0>, <app.database.models.Group object at 0x0000020E0C253CE0>, <app.database.models.Group object at 0x0000020E0C253DF0>, <app.database.models.Group object at 0x0000020E0C253F00>, <app.database.models.Group object at 0x0000020E0C3E4050>, <app.database.models.Group object at 0x0000020E0C3E4160>, <app.database.models.Group object at 0x0000020E0C3E4270>, <app.database.models.Group object at 0x0000020E0C3E4380>, <app.database.models.Group object at 0x0000020E0C3E4490>, <app.database.models.Group object at 0x0000020E0C3E45A0>, <app.database.models.Group object at 0x0000020E0C3E46B0>, <app.database.models.Group object at 0x0000020E0C3E47C0>, <app.database.models.Group object at 0x0000020E0C3E48D0>, <app.database.models.Group object at 0x0000020E0C3E49E0>, <app.database.models.Group object at 0x0000020E0C3E4AF0>, <app.database.models.Group object at 0x0000020E0C3E4C00>, <app.database.models.Group object at 0x0000020E0C3E4D10>, <app.database.models.Group object at 0x0000020E0C3E4E20>, <app.database.models.Group object at 0x0000020E0C3E4F30>, <app.database.models.Group object at 0x0000020E0C3E5040>, <app.database.models.Group object at 0x0000020E0C3E5150>, <app.database.models.Group object at 0x0000020E0C3E5260>, <app.database.models.Group object at 0x0000020E0C3E5370>, <app.database.models.Group object at 0x0000020E0C3E5480>, <app.database.models.Group object at 0x0000020E0C3E5590>, <app.database.models.Group object at 0x0000020E0C3E56A0>, <app.database.models.Group object at 0x0000020E0C3E57B0>, <app.database.models.Group object at 0x0000020E0C3E58C0>, <app.database.models.Group object at 0x0000020E0C3E59D0>, <app.database.models.Group object at 0x0000020E0C3E5AE0>, <app.database.models.Group object at 0x0000020E0C3E5BF0>, <app.database.models.Group object at 0x0000020E0C3E5D00>, <app.database.models.Group object at 0x0000020E0C3E5E10>, <app.database.models.Group object at 0x0000020E0C3E5F20>, <app.database.models.Group object at 0x0000020E0C3E6030>, <app.database.models.Group object at 0x0000020E0C3E6140>, <app.database.models.Group object at 0x0000020E0C3E6250>, <app.database.models.Group object at 0x0000020E0C3E6360>, <app.database.models.Group object at 0x0000020E0C3E6470>, <app.database.models.Group object at 0x0000020E0C3E6580>, <app.database.models.Group object at 0x0000020E0C3E6690>, <app.database.models.Group object at 0x0000020E0C3E67A0>, <app.database.models.Group object at 0x0000020E0C3E68B0>, <app.database.models.Group object at 0x0000020E0C3E69C0>, <app.database.models.Group object at 0x0000020E0C3E6AD0>, <app.database.models.Group object at 0x0000020E0C3E6BE0>, <app.database.models.Group object at 0x0000020E0C3E6CF0>, <app.database.models.Group object at 0x0000020E0C3E6E00>, <app.database.models.Group object at 0x0000020E0C3E6F10>, <app.database.models.Group object at 0x0000020E0C3E7020>, <app.database.models.Group object at 0x0000020E0C3E7130>, <app.database.models.Group object at 0x0000020E0C3E7240>, <app.database.models.Group object at 0x0000020E0C3E7350>, <app.database.models.Group object at 0x0000020E0C3E7460>, <app.database.models.Group object at 0x0000020E0C3E7570>, <app.database.models.Group object at 0x0000020E0C3E7680>, <app.database.models.Group object at 0x0000020E0C3E7790>, <app.database.models.Group object at 0x0000020E0C3E78A0>, <app.database.models.Group object at 0x0000020E0C3E79B0>, <app.database.models.Group object at 0x0000020E0C3E7AC0>, <app.database.models.Group object at 0x0000020E0C3E7BD0>]
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:06:30,038 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:06:30,038 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:06:30,419 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=653.2566630955244113081312723
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=653.2566630955244113081312723
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('653.2566630955244113081312723')], HighestMarginPerLot=653.2566630955244113081312723
2025-06-04 01:06:30,420 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=653.26, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:06:30,420 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=653.26, AdditionalMargin=653.26
2025-06-04 01:06:30,427 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7337325122', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8863400000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88634.000000000000000000'), 'margin': Decimal('653.2566630955244113081312723'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:06:30,453 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:06:30,563 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:06:30,606 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7337325122', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88634000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88634.00000000'), 'margin': Decimal('653.25666310'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:06:30,937 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7337325122 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:20:21,673 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:20:25,791 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:21:05,353 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B716EB7620>, <app.database.models.Group object at 0x000001B7171AD1D0>, <app.database.models.Group object at 0x000001B7171AC410>, <app.database.models.Group object at 0x000001B715D2F820>, <app.database.models.Group object at 0x000001B7170DD350>, <app.database.models.Group object at 0x000001B7171A8EF0>, <app.database.models.Group object at 0x000001B716ED38A0>, <app.database.models.Group object at 0x000001B716ED39B0>, <app.database.models.Group object at 0x000001B716ED3AC0>, <app.database.models.Group object at 0x000001B716ED3BD0>, <app.database.models.Group object at 0x000001B716ED3CE0>, <app.database.models.Group object at 0x000001B716ED3DF0>, <app.database.models.Group object at 0x000001B716ED3F00>, <app.database.models.Group object at 0x000001B717214050>, <app.database.models.Group object at 0x000001B717214160>, <app.database.models.Group object at 0x000001B717214270>, <app.database.models.Group object at 0x000001B717214380>, <app.database.models.Group object at 0x000001B717214490>, <app.database.models.Group object at 0x000001B7172145A0>, <app.database.models.Group object at 0x000001B7172146B0>, <app.database.models.Group object at 0x000001B7172147C0>, <app.database.models.Group object at 0x000001B7172148D0>, <app.database.models.Group object at 0x000001B7172149E0>, <app.database.models.Group object at 0x000001B717214AF0>, <app.database.models.Group object at 0x000001B717214C00>, <app.database.models.Group object at 0x000001B717214D10>, <app.database.models.Group object at 0x000001B717214E20>, <app.database.models.Group object at 0x000001B717214F30>, <app.database.models.Group object at 0x000001B717215040>, <app.database.models.Group object at 0x000001B717215150>, <app.database.models.Group object at 0x000001B717215260>, <app.database.models.Group object at 0x000001B717215370>, <app.database.models.Group object at 0x000001B717215480>, <app.database.models.Group object at 0x000001B717215590>, <app.database.models.Group object at 0x000001B7172156A0>, <app.database.models.Group object at 0x000001B7172157B0>, <app.database.models.Group object at 0x000001B7172158C0>, <app.database.models.Group object at 0x000001B7172159D0>, <app.database.models.Group object at 0x000001B717215AE0>, <app.database.models.Group object at 0x000001B717215BF0>, <app.database.models.Group object at 0x000001B717215D00>, <app.database.models.Group object at 0x000001B717215E10>, <app.database.models.Group object at 0x000001B717215F20>, <app.database.models.Group object at 0x000001B717216030>, <app.database.models.Group object at 0x000001B717216140>, <app.database.models.Group object at 0x000001B717216250>, <app.database.models.Group object at 0x000001B717216360>, <app.database.models.Group object at 0x000001B717216470>, <app.database.models.Group object at 0x000001B717216580>, <app.database.models.Group object at 0x000001B717216690>, <app.database.models.Group object at 0x000001B7172167A0>, <app.database.models.Group object at 0x000001B7172168B0>, <app.database.models.Group object at 0x000001B7172169C0>, <app.database.models.Group object at 0x000001B717216AD0>, <app.database.models.Group object at 0x000001B717216BE0>, <app.database.models.Group object at 0x000001B717216CF0>, <app.database.models.Group object at 0x000001B717216E00>, <app.database.models.Group object at 0x000001B717216F10>, <app.database.models.Group object at 0x000001B717217020>, <app.database.models.Group object at 0x000001B717217130>, <app.database.models.Group object at 0x000001B717217240>, <app.database.models.Group object at 0x000001B717217350>, <app.database.models.Group object at 0x000001B717217460>, <app.database.models.Group object at 0x000001B717217570>, <app.database.models.Group object at 0x000001B717217680>, <app.database.models.Group object at 0x000001B717217790>, <app.database.models.Group object at 0x000001B7172178A0>, <app.database.models.Group object at 0x000001B7172179B0>, <app.database.models.Group object at 0x000001B717217AC0>, <app.database.models.Group object at 0x000001B717217BD0>, <app.database.models.Group object at 0x000001B717217CE0>, <app.database.models.Group object at 0x000001B717217DF0>, <app.database.models.Group object at 0x000001B717217F00>, <app.database.models.Group object at 0x000001B717228050>, <app.database.models.Group object at 0x000001B717228160>, <app.database.models.Group object at 0x000001B717228270>, <app.database.models.Group object at 0x000001B717228380>, <app.database.models.Group object at 0x000001B717228490>, <app.database.models.Group object at 0x000001B7172285A0>]
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:21:05,368 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:21:05,369 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:21:05,369 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=736.3072369524170560832829097
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=736.3072369524170560832829097
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('736.3072369524170560832829097')], HighestMarginPerLot=736.3072369524170560832829097
2025-06-04 01:21:05,736 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=736.31, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:21:05,736 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=736.31, AdditionalMargin=736.31
2025-06-04 01:21:05,741 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1794876472', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870000000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.3072369524170560832829097'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:21:05,763 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:21:05,813 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:21:05,836 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '1794876472', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88700000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.30723695'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:21:06,237 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 1794876472 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:23:00,509 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:23:09,200 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000025149BF5010>, <app.database.models.Group object at 0x0000025149BAFD90>, <app.database.models.Group object at 0x0000025149D0C7D0>, <app.database.models.Group object at 0x0000025149C51350>, <app.database.models.Group object at 0x0000025149C51480>, <app.database.models.Group object at 0x0000025149D085F0>, <app.database.models.Group object at 0x0000025149BC2F10>, <app.database.models.Group object at 0x0000025149BC3020>, <app.database.models.Group object at 0x0000025149BC3130>, <app.database.models.Group object at 0x0000025149BC3240>, <app.database.models.Group object at 0x0000025149BC3350>, <app.database.models.Group object at 0x0000025149BC3460>, <app.database.models.Group object at 0x0000025149BC3570>, <app.database.models.Group object at 0x0000025149BC3680>, <app.database.models.Group object at 0x0000025149BC3790>, <app.database.models.Group object at 0x0000025149BC38A0>, <app.database.models.Group object at 0x0000025149BC39B0>, <app.database.models.Group object at 0x0000025149BC3AC0>, <app.database.models.Group object at 0x0000025149BC3BD0>, <app.database.models.Group object at 0x0000025149BC3CE0>, <app.database.models.Group object at 0x0000025149BC3DF0>, <app.database.models.Group object at 0x0000025149BC3F00>, <app.database.models.Group object at 0x0000025149D54050>, <app.database.models.Group object at 0x0000025149D54160>, <app.database.models.Group object at 0x0000025149D54270>, <app.database.models.Group object at 0x0000025149D54380>, <app.database.models.Group object at 0x0000025149D54490>, <app.database.models.Group object at 0x0000025149D545A0>, <app.database.models.Group object at 0x0000025149D546B0>, <app.database.models.Group object at 0x0000025149D547C0>, <app.database.models.Group object at 0x0000025149D548D0>, <app.database.models.Group object at 0x0000025149D549E0>, <app.database.models.Group object at 0x0000025149D54AF0>, <app.database.models.Group object at 0x0000025149D54C00>, <app.database.models.Group object at 0x0000025149D54D10>, <app.database.models.Group object at 0x0000025149D54E20>, <app.database.models.Group object at 0x0000025149D54F30>, <app.database.models.Group object at 0x0000025149D55040>, <app.database.models.Group object at 0x0000025149D55150>, <app.database.models.Group object at 0x0000025149D55260>, <app.database.models.Group object at 0x0000025149D55370>, <app.database.models.Group object at 0x0000025149D55480>, <app.database.models.Group object at 0x0000025149D55590>, <app.database.models.Group object at 0x0000025149D556A0>, <app.database.models.Group object at 0x0000025149D557B0>, <app.database.models.Group object at 0x0000025149D558C0>, <app.database.models.Group object at 0x0000025149D559D0>, <app.database.models.Group object at 0x0000025149D55AE0>, <app.database.models.Group object at 0x0000025149D55BF0>, <app.database.models.Group object at 0x0000025149D55D00>, <app.database.models.Group object at 0x0000025149D55E10>, <app.database.models.Group object at 0x0000025149D55F20>, <app.database.models.Group object at 0x0000025149D56030>, <app.database.models.Group object at 0x0000025149D56140>, <app.database.models.Group object at 0x0000025149D56250>, <app.database.models.Group object at 0x0000025149D56360>, <app.database.models.Group object at 0x0000025149D56470>, <app.database.models.Group object at 0x0000025149D56580>, <app.database.models.Group object at 0x0000025149D56690>, <app.database.models.Group object at 0x0000025149D567A0>, <app.database.models.Group object at 0x0000025149D568B0>, <app.database.models.Group object at 0x0000025149D569C0>, <app.database.models.Group object at 0x0000025149D56AD0>, <app.database.models.Group object at 0x0000025149D56BE0>, <app.database.models.Group object at 0x0000025149D56CF0>, <app.database.models.Group object at 0x0000025149D56E00>, <app.database.models.Group object at 0x0000025149D56F10>, <app.database.models.Group object at 0x0000025149D57020>, <app.database.models.Group object at 0x0000025149D57130>, <app.database.models.Group object at 0x0000025149D57240>, <app.database.models.Group object at 0x0000025149D57350>, <app.database.models.Group object at 0x0000025149D57460>, <app.database.models.Group object at 0x0000025149D57570>, <app.database.models.Group object at 0x0000025149D57680>, <app.database.models.Group object at 0x0000025149D57790>, <app.database.models.Group object at 0x0000025149D578A0>, <app.database.models.Group object at 0x0000025149D579B0>, <app.database.models.Group object at 0x0000025149D57AC0>, <app.database.models.Group object at 0x0000025149D57BD0>]
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:23:09,207 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:23:09,207 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=736.2750315286090233785547140
2025-06-04 01:23:09,529 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=736.2750315286090233785547140
2025-06-04 01:23:09,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:23:09,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('736.2750315286090233785547140')], HighestMarginPerLot=736.2750315286090233785547140
2025-06-04 01:23:09,530 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=736.28, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:23:09,530 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=736.28, AdditionalMargin=736.28
2025-06-04 01:23:09,532 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6788985224', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8870400000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.2750315286090233785547140'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:23:09,548 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:23:09,591 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:23:09,619 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6788985224', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88704000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('736.27503153'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:23:09,951 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6788985224 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:28:27,419 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:28:31,506 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:28:45,338 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:28:45,365 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000024658385010>, <app.database.models.Group object at 0x000002465833FD90>, <app.database.models.Group object at 0x000002465849C7D0>, <app.database.models.Group object at 0x00000246584110F0>, <app.database.models.Group object at 0x0000024658411220>, <app.database.models.Group object at 0x0000024658498830>, <app.database.models.Group object at 0x0000024658352F10>, <app.database.models.Group object at 0x0000024658353020>, <app.database.models.Group object at 0x0000024658353130>, <app.database.models.Group object at 0x0000024658353240>, <app.database.models.Group object at 0x0000024658353350>, <app.database.models.Group object at 0x0000024658353460>, <app.database.models.Group object at 0x0000024658353570>, <app.database.models.Group object at 0x0000024658353680>, <app.database.models.Group object at 0x0000024658353790>, <app.database.models.Group object at 0x00000246583538A0>, <app.database.models.Group object at 0x00000246583539B0>, <app.database.models.Group object at 0x0000024658353AC0>, <app.database.models.Group object at 0x0000024658353BD0>, <app.database.models.Group object at 0x0000024658353CE0>, <app.database.models.Group object at 0x0000024658353DF0>, <app.database.models.Group object at 0x0000024658353F00>, <app.database.models.Group object at 0x00000246584E4050>, <app.database.models.Group object at 0x00000246584E4160>, <app.database.models.Group object at 0x00000246584E4270>, <app.database.models.Group object at 0x00000246584E4380>, <app.database.models.Group object at 0x00000246584E4490>, <app.database.models.Group object at 0x00000246584E45A0>, <app.database.models.Group object at 0x00000246584E46B0>, <app.database.models.Group object at 0x00000246584E47C0>, <app.database.models.Group object at 0x00000246584E48D0>, <app.database.models.Group object at 0x00000246584E49E0>, <app.database.models.Group object at 0x00000246584E4AF0>, <app.database.models.Group object at 0x00000246584E4C00>, <app.database.models.Group object at 0x00000246584E4D10>, <app.database.models.Group object at 0x00000246584E4E20>, <app.database.models.Group object at 0x00000246584E4F30>, <app.database.models.Group object at 0x00000246584E5040>, <app.database.models.Group object at 0x00000246584E5150>, <app.database.models.Group object at 0x00000246584E5260>, <app.database.models.Group object at 0x00000246584E5370>, <app.database.models.Group object at 0x00000246584E5480>, <app.database.models.Group object at 0x00000246584E5590>, <app.database.models.Group object at 0x00000246584E56A0>, <app.database.models.Group object at 0x00000246584E57B0>, <app.database.models.Group object at 0x00000246584E58C0>, <app.database.models.Group object at 0x00000246584E59D0>, <app.database.models.Group object at 0x00000246584E5AE0>, <app.database.models.Group object at 0x00000246584E5BF0>, <app.database.models.Group object at 0x00000246584E5D00>, <app.database.models.Group object at 0x00000246584E5E10>, <app.database.models.Group object at 0x00000246584E5F20>, <app.database.models.Group object at 0x00000246584E6030>, <app.database.models.Group object at 0x00000246584E6140>, <app.database.models.Group object at 0x00000246584E6250>, <app.database.models.Group object at 0x00000246584E6360>, <app.database.models.Group object at 0x00000246584E6470>, <app.database.models.Group object at 0x00000246584E6580>, <app.database.models.Group object at 0x00000246584E6690>, <app.database.models.Group object at 0x00000246584E67A0>, <app.database.models.Group object at 0x00000246584E68B0>, <app.database.models.Group object at 0x00000246584E69C0>, <app.database.models.Group object at 0x00000246584E6AD0>, <app.database.models.Group object at 0x00000246584E6BE0>, <app.database.models.Group object at 0x00000246584E6CF0>, <app.database.models.Group object at 0x00000246584E6E00>, <app.database.models.Group object at 0x00000246584E6F10>, <app.database.models.Group object at 0x00000246584E7020>, <app.database.models.Group object at 0x00000246584E7130>, <app.database.models.Group object at 0x00000246584E7240>, <app.database.models.Group object at 0x00000246584E7350>, <app.database.models.Group object at 0x00000246584E7460>, <app.database.models.Group object at 0x00000246584E7570>, <app.database.models.Group object at 0x00000246584E7680>, <app.database.models.Group object at 0x00000246584E7790>, <app.database.models.Group object at 0x00000246584E78A0>, <app.database.models.Group object at 0x00000246584E79B0>, <app.database.models.Group object at 0x00000246584E7AC0>, <app.database.models.Group object at 0x00000246584E7BD0>]
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:28:45,366 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:28:45,367 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:28:45,778 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.1072170660756337442859122
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.1072170660756337442859122
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.1072170660756337442859122')], HighestMarginPerLot=654.1072170660756337442859122
2025-06-04 01:28:45,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.11, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:28:45,779 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.11, AdditionalMargin=654.11
2025-06-04 01:28:45,785 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9069638766', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8871800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('88718.000000000000000000'), 'margin': Decimal('654.1072170660756337442859122'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:28:45,831 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:28:45,919 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:28:45,991 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '9069638766', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88718000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('88718.00000000'), 'margin': Decimal('654.10721707'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:28:46,301 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 9069638766 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:29:59,247 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 01:30:07,315 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 01:30:07,331 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE445010>, <app.database.models.Group object at 0x000001B0FE3FFD90>, <app.database.models.Group object at 0x000001B0FE55C7D0>, <app.database.models.Group object at 0x000001B0FE4A1350>, <app.database.models.Group object at 0x000001B0FE4A1480>, <app.database.models.Group object at 0x000001B0FE5585F0>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE5A4050>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>]
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:30:07,332 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:30:07,332 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.2235961445923679260414996
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.2235961445923679260414996
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 01:30:07,650 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.2235961445923679260414996')], HighestMarginPerLot=654.2235961445923679260414996
2025-06-04 01:30:07,651 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.22, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:30:07,651 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.22, AdditionalMargin=654.22
2025-06-04 01:30:07,660 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6126414820', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8872700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.2235961445923679260414996'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 01:30:07,734 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:30:07,814 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:30:07,877 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6126414820', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88727000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.22359614'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'OPEN'}
2025-06-04 01:30:08,235 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6126414820 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:34:43,438 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE4118C0>, <app.database.models.Group object at 0x000001B0FE411F20>, <app.database.models.Group object at 0x000001B0FE411E10>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE5E4490>, <app.database.models.Group object at 0x000001B0FE5E4380>, <app.database.models.Group object at 0x000001B0FE5E4160>, <app.database.models.Group object at 0x000001B0FE5E45A0>]
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:34:43,445 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:34:43,445 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.4738569240866331218551739
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.4738569240866331218551739
2025-06-04 01:34:44,194 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 01:34:44,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.4738569240866331218551739')], HighestMarginPerLot=654.4738569240866331218551739
2025-06-04 01:34:44,195 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.47, ContributingOrders=1 (based on individual stored margins)
2025-06-04 01:34:44,195 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.47, AdditionalMargin=654.47
2025-06-04 01:34:44,199 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4731730823', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8874500000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.4738569240866331218551739'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 01:34:44,224 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 01:34:44,286 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 01:34:44,326 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '4731730823', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88745000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.47385692'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 01:34:44,708 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 4731730823 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 01:35:09,602 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 01:35:09,616 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4050>, <app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE5E4490>, <app.database.models.Group object at 0x000001B0FE5E4380>, <app.database.models.Group object at 0x000001B0FE5E4160>, <app.database.models.Group object at 0x000001B0FE5E45A0>, <app.database.models.Group object at 0x000001B0FE5E48D0>, <app.database.models.Group object at 0x000001B0FE5E4AF0>, <app.database.models.Group object at 0x000001B0FE5E46B0>]
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 01:35:09,617 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 01:35:09,617 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 01:35:10,050 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 9
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 61): Type=SELL, Qty=1.00000000, StoredMargin=652.93911877
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=652.93911877
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 62): Type=BUY, Qty=1.00000000, StoredMargin=653.43178704
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=653.43178704
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 63): Type=BUY, Qty=1.00000000, StoredMargin=652.85064708
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=652.85064708
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 64): Type=BUY, Qty=1.00000000, StoredMargin=653.00753523
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=653.00753523
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 65): Type=BUY, Qty=1.00000000, StoredMargin=652.73314240
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=652.7331424
2025-06-04 01:35:10,051 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=6.00000000, TotalSellQty=3.00000000, NetQty=6.00000000
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264'), Decimal('652.93911877'), Decimal('653.43178704'), Decimal('652.85064708'), Decimal('653.00753523'), Decimal('652.7331424')], HighestMarginPerLot=654.28985782
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=3925.74, ContributingOrders=9 (based on individual stored margins)
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 10
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 57): Type=BUY, Qty=1.00000000, StoredMargin=654.28985782
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.28985782
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 58): Type=BUY, Qty=1.00000000, StoredMargin=654.28733840
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.2873384
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 59): Type=SELL, Qty=1.00000000, StoredMargin=652.95622326
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=652.95622326
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4 (ID: 60): Type=SELL, Qty=1.00000000, StoredMargin=652.98790264
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 4: MarginPerLot=652.98790264
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5 (ID: 61): Type=SELL, Qty=1.00000000, StoredMargin=652.93911877
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 5: MarginPerLot=652.93911877
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6 (ID: 62): Type=BUY, Qty=1.00000000, StoredMargin=653.43178704
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 6: MarginPerLot=653.43178704
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7 (ID: 63): Type=BUY, Qty=1.00000000, StoredMargin=652.85064708
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 7: MarginPerLot=652.85064708
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8 (ID: 64): Type=BUY, Qty=1.00000000, StoredMargin=653.00753523
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 8: MarginPerLot=653.00753523
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9 (ID: 65): Type=BUY, Qty=1.00000000, StoredMargin=652.73314240
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 9: MarginPerLot=652.7331424
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.4155181214905564063297601
2025-06-04 01:35:10,052 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 10: MarginPerLot=654.4155181214905564063297601
2025-06-04 01:35:10,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=7.00000000, TotalSellQty=3.00000000, NetQty=7.00000000
2025-06-04 01:35:10,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.28985782'), Decimal('654.2873384'), Decimal('652.95622326'), Decimal('652.98790264'), Decimal('652.93911877'), Decimal('653.43178704'), Decimal('652.85064708'), Decimal('653.00753523'), Decimal('652.7331424'), Decimal('654.4155181214905564063297601')], HighestMarginPerLot=654.4155181214905564063297601
2025-06-04 01:35:10,053 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=4580.91, ContributingOrders=10 (based on individual stored margins)
2025-06-04 01:35:10,053 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=3925.74, MarginAfter=4580.91, AdditionalMargin=655.17
2025-06-04 01:35:10,060 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '7418751756', 'order_status': 'PROCESSING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8873800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.4155181214905564063297601'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 01:35:10,093 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 3925.74000000
2025-06-04 01:35:10,155 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 01:35:10,178 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '7418751756', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88738000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.41551812'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 01:35:10,512 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 7418751756 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 02:03:37,398 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:03:37,417 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE4118C0>, <app.database.models.Group object at 0x000001B0FE411F20>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE5E4C00>, <app.database.models.Group object at 0x000001B0FE5E4D10>, <app.database.models.Group object at 0x000001B0FE5E4E20>, <app.database.models.Group object at 0x000001B0FE5E4F30>, <app.database.models.Group object at 0x000001B0FE5E5040>]
2025-06-04 02:03:37,418 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:03:37,418 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:03:37,418 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:03:37,419 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:03:37,419 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:03:38,158 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 02:03:38,159 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 02:03:38,159 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 02:03:38,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.8197429275907850775448272
2025-06-04 02:03:38,160 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.8197429275907850775448272
2025-06-04 02:03:38,162 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 02:03:38,163 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.8197429275907850775448272')], HighestMarginPerLot=654.8197429275907850775448272
2025-06-04 02:03:38,163 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:03:38,164 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.82, AdditionalMargin=654.82
2025-06-04 02:03:38,176 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6808727232', 'order_status': 'PROCESSING', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8876100000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.8197429275907850775448272'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 02:03:38,254 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 3925.74000000
2025-06-04 02:03:38,346 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 02:03:38,419 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '6808727232', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88761000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.81974293'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 02:03:38,741 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 6808727232 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 02:10:54,788 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:10:54,805 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE5A4050>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A45A0>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A47C0>, <app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A4C00>, <app.database.models.Group object at 0x000001B0FE5A4D10>, <app.database.models.Group object at 0x000001B0FE5A4E20>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A5040>, <app.database.models.Group object at 0x000001B0FE5A5150>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE5E5260>, <app.database.models.Group object at 0x000001B0FE5E4C00>, <app.database.models.Group object at 0x000001B0FE5E4D10>, <app.database.models.Group object at 0x000001B0FE5E4E20>, <app.database.models.Group object at 0x000001B0FE5E4F30>, <app.database.models.Group object at 0x000001B0FE5E5040>, <app.database.models.Group object at 0x000001B0FE5E5480>, <app.database.models.Group object at 0x000001B0FE5E5150>, <app.database.models.Group object at 0x000001B0FE5E5370>, <app.database.models.Group object at 0x000001B0FE5E4490>]
2025-06-04 02:10:54,805 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:10:54,805 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:10:54,806 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:10:54,806 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:10:54,806 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:10:55,594 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 02:10:55,594 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 02:10:55,594 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.6625623668777171534444023
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.6625623668777171534444023
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.6625623668777171534444023')], HighestMarginPerLot=654.6625623668777171534444023
2025-06-04 02:10:55,595 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.66, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:10:55,596 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.66, AdditionalMargin=654.66
2025-06-04 02:10:55,652 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=654.66
2025-06-04 02:10:55,718 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '6293048000', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8874700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.6625623668777171534444023'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 02:10:55,750 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.66
2025-06-04 02:10:55,848 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 02:11:37,672 - INFO - orders - Order placement request received - User ID: 4, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:11:38,145 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001B0FE5A48D0>, <app.database.models.Group object at 0x000001B0FE5A4F30>, <app.database.models.Group object at 0x000001B0FE5A4490>, <app.database.models.Group object at 0x000001B0FE5A46B0>, <app.database.models.Group object at 0x000001B0FE5A4AF0>, <app.database.models.Group object at 0x000001B0FE5A49E0>, <app.database.models.Group object at 0x000001B0FE5A5260>, <app.database.models.Group object at 0x000001B0FE5A5370>, <app.database.models.Group object at 0x000001B0FE5A5480>, <app.database.models.Group object at 0x000001B0FE5A5590>, <app.database.models.Group object at 0x000001B0FE5A56A0>, <app.database.models.Group object at 0x000001B0FE5A57B0>, <app.database.models.Group object at 0x000001B0FE5A58C0>, <app.database.models.Group object at 0x000001B0FE5A59D0>, <app.database.models.Group object at 0x000001B0FE5A5AE0>, <app.database.models.Group object at 0x000001B0FE5A5BF0>, <app.database.models.Group object at 0x000001B0FE5A5D00>, <app.database.models.Group object at 0x000001B0FE5A5E10>, <app.database.models.Group object at 0x000001B0FE5A5F20>, <app.database.models.Group object at 0x000001B0FE5A6030>, <app.database.models.Group object at 0x000001B0FE5A6140>, <app.database.models.Group object at 0x000001B0FE5A6250>, <app.database.models.Group object at 0x000001B0FE5A6360>, <app.database.models.Group object at 0x000001B0FE5A6470>, <app.database.models.Group object at 0x000001B0FE5A6580>, <app.database.models.Group object at 0x000001B0FE5A6690>, <app.database.models.Group object at 0x000001B0FE5A67A0>, <app.database.models.Group object at 0x000001B0FE5A68B0>, <app.database.models.Group object at 0x000001B0FE5A69C0>, <app.database.models.Group object at 0x000001B0FE5A6AD0>, <app.database.models.Group object at 0x000001B0FE5A6BE0>, <app.database.models.Group object at 0x000001B0FE5A6CF0>, <app.database.models.Group object at 0x000001B0FE5A6E00>, <app.database.models.Group object at 0x000001B0FE5A6F10>, <app.database.models.Group object at 0x000001B0FE5A7020>, <app.database.models.Group object at 0x000001B0FE5A7130>, <app.database.models.Group object at 0x000001B0FE5A7240>, <app.database.models.Group object at 0x000001B0FE5A7350>, <app.database.models.Group object at 0x000001B0FE5A7460>, <app.database.models.Group object at 0x000001B0FE5A7570>, <app.database.models.Group object at 0x000001B0FE5A7680>, <app.database.models.Group object at 0x000001B0FE5A7790>, <app.database.models.Group object at 0x000001B0FE5A78A0>, <app.database.models.Group object at 0x000001B0FE5A79B0>, <app.database.models.Group object at 0x000001B0FE5A7AC0>, <app.database.models.Group object at 0x000001B0FE5A7BD0>, <app.database.models.Group object at 0x000001B0FE5A7CE0>, <app.database.models.Group object at 0x000001B0FE5A7DF0>, <app.database.models.Group object at 0x000001B0FE5A4160>, <app.database.models.Group object at 0x000001B0FE5A4270>, <app.database.models.Group object at 0x000001B0FE5A4380>, <app.database.models.Group object at 0x000001B0FE4118C0>, <app.database.models.Group object at 0x000001B0FE413130>, <app.database.models.Group object at 0x000001B0FE413350>, <app.database.models.Group object at 0x000001B0FE411F20>, <app.database.models.Group object at 0x000001B0FE413680>, <app.database.models.Group object at 0x000001B0FE413460>, <app.database.models.Group object at 0x000001B0FE413240>, <app.database.models.Group object at 0x000001B0FE413570>, <app.database.models.Group object at 0x000001B0FE413790>, <app.database.models.Group object at 0x000001B0FE413020>, <app.database.models.Group object at 0x000001B0FE4138A0>, <app.database.models.Group object at 0x000001B0FE4139B0>, <app.database.models.Group object at 0x000001B0FE413AC0>, <app.database.models.Group object at 0x000001B0FE413BD0>, <app.database.models.Group object at 0x000001B0FE413CE0>, <app.database.models.Group object at 0x000001B0FE413DF0>, <app.database.models.Group object at 0x000001B0FE413F00>, <app.database.models.Group object at 0x000001B0FE411AE0>, <app.database.models.Group object at 0x000001B0FE411BF0>, <app.database.models.Group object at 0x000001B0FE412030>, <app.database.models.Group object at 0x000001B0FE412F10>, <app.database.models.Group object at 0x000001B0FE5E5260>, <app.database.models.Group object at 0x000001B0FE5E4C00>, <app.database.models.Group object at 0x000001B0FE5E4D10>, <app.database.models.Group object at 0x000001B0FE5E4E20>, <app.database.models.Group object at 0x000001B0FE5E4F30>, <app.database.models.Group object at 0x000001B0FE5E5040>, <app.database.models.Group object at 0x000001B0FE5E5480>]
2025-06-04 02:11:38,145 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:11:38,146 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:11:38,146 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:11:38,146 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:11:38,146 - INFO - orders - Order placement: user_id=4, is_barclays_live_user=True, user_type=live, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 0
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 4, Symbol AUDCAD. Returning zero margin.
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 4, Symbol AUDCAD, Positions count: 1
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY_LIMIT, Qty=1, StoredMargin=654.6892210283680183235952761
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 4, Symbol AUDCAD, Pos 1: MarginPerLot=654.6892210283680183235952761
2025-06-04 02:11:38,466 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-04 02:11:38,467 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 4, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.6892210283680183235952761')], HighestMarginPerLot=654.6892210283680183235952761
2025-06-04 02:11:38,467 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 4, Symbol AUDCAD: CalculatedTotalMargin=654.69, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:11:38,467 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 4 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=654.69, AdditionalMargin=654.69
2025-06-04 02:11:38,474 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '5413971369', 'order_status': 'PROCESSING', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_price': Decimal('0.8874900000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.6892210283680183235952761'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'PENDING'}
2025-06-04 02:11:38,491 - INFO - orders - [MARGIN_COMMIT_CHECK] User 4 margin in session BEFORE commit: 0E-8
2025-06-04 02:11:38,551 - INFO - orders - Portfolio cache updated and websocket event published for user 4 after placing order.
2025-06-04 02:11:38,610 - INFO - orders - [FIREBASE] Payload being sent to Firebase: {'order_id': '5413971369', 'order_user_id': 4, 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_status': 'PROCESSING', 'order_price': Decimal('0.88749000'), 'order_quantity': Decimal('1.00000000'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.68922103'), 'stop_loss': Decimal('0E-8'), 'take_profit': Decimal('0E-8'), 'status': 'PENDING'}
2025-06-04 02:11:38,977 - INFO - orders - [FIREBASE] Barclays order sent to Firebase: 5413971369 (order_status=PROCESSING, margin not updated in DB)
2025-06-04 02:29:18,189 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:05,432 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:09,791 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:14,259 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:31:41,969 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:35:29,133 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:35:29,133 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:35:29,140 - ERROR - orders - Unexpected error in place_pending_order: 3 validation errors for OrderCreateInternal
order_id
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
margin
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 352, in place_pending_order
    order_create_internal = OrderCreateInternal(**order_data_for_internal_processing)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 3 validation errors for OrderCreateInternal
order_id
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
margin
  Field required [type=missing, input_value={'order_company_name': 'A...rder_status': 'PENDING'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-06-04 02:51:15,946 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:51:27,236 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:51:27,237 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:51:27,238 - ERROR - orders - Unexpected error in place_pending_order: 2 validation errors for OrderCreateInternal
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 353, in place_pending_order
    order_create_internal = OrderCreateInternal(**order_data_for_internal_processing)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for OrderCreateInternal
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
2025-06-04 02:53:31,632 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:53:36,211 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:54:41,277 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:54:41,277 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:54:41,278 - ERROR - orders - Unexpected error in place_pending_order: 'OrderCreateInternal' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 355, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 31, in create_order
    orders_logger.debug(f"[DEBUG][create_order] status field value: {order_data.get('status')}")
                                                                     ^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'OrderCreateInternal' object has no attribute 'get'
2025-06-04 02:56:06,650 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 02:56:14,763 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:56:14,764 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:56:14,787 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1048, "Column 'contract_value' cannot be null")
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'efd0f261-9a33-4528-9ff3-30085b327f07', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1048, "Column 'contract_value' cannot be null")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1048, "Column 'contract_value' cannot be null")
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'efd0f261-9a33-4528-9ff3-30085b327f07', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 02:57:31,754 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:57:31,755 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:57:31,799 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'f046f737-493d-4e22-a351-b383608f06a0', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'f046f737-493d-4e22-a351-b383608f06a0', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 02:58:49,293 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 02:58:49,294 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 02:58:49,341 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '6215d2b4-4823-439c-a3af-31bbe3abd7cf', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '6215d2b4-4823-439c-a3af-31bbe3abd7cf', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 02:59:47,506 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 02:59:47,525 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000246B2787620>, <app.database.models.Group object at 0x00000246B27A7C50>, <app.database.models.Group object at 0x00000246B2B5C550>, <app.database.models.Group object at 0x00000246B15EE650>, <app.database.models.Group object at 0x00000246B15EEFD0>, <app.database.models.Group object at 0x00000246B28EE330>, <app.database.models.Group object at 0x00000246B2793CE0>, <app.database.models.Group object at 0x00000246B2793F00>, <app.database.models.Group object at 0x00000246B2793570>, <app.database.models.Group object at 0x00000246B2793DF0>, <app.database.models.Group object at 0x00000246B2793790>, <app.database.models.Group object at 0x00000246B27938A0>, <app.database.models.Group object at 0x00000246B2793680>, <app.database.models.Group object at 0x00000246B27939B0>, <app.database.models.Group object at 0x00000246B2793BD0>, <app.database.models.Group object at 0x00000246B2793AC0>, <app.database.models.Group object at 0x00000246B2B6C6B0>, <app.database.models.Group object at 0x00000246B2B6C7C0>, <app.database.models.Group object at 0x00000246B2B6C160>, <app.database.models.Group object at 0x00000246B2B6C050>, <app.database.models.Group object at 0x00000246B2B6CAF0>, <app.database.models.Group object at 0x00000246B2B6C9E0>, <app.database.models.Group object at 0x00000246B2B6C8D0>, <app.database.models.Group object at 0x00000246B2B6C270>, <app.database.models.Group object at 0x00000246B2B6D260>, <app.database.models.Group object at 0x00000246B2B6D370>, <app.database.models.Group object at 0x00000246B2B6D480>, <app.database.models.Group object at 0x00000246B2B6D590>, <app.database.models.Group object at 0x00000246B2B6D6A0>, <app.database.models.Group object at 0x00000246B2B6D7B0>, <app.database.models.Group object at 0x00000246B2B6D8C0>, <app.database.models.Group object at 0x00000246B2B6D9D0>, <app.database.models.Group object at 0x00000246B2B6DAE0>, <app.database.models.Group object at 0x00000246B2B6DBF0>, <app.database.models.Group object at 0x00000246B2B6DD00>, <app.database.models.Group object at 0x00000246B2B6DE10>, <app.database.models.Group object at 0x00000246B2B6DF20>, <app.database.models.Group object at 0x00000246B2B6E030>, <app.database.models.Group object at 0x00000246B2B6E140>, <app.database.models.Group object at 0x00000246B2B6E250>, <app.database.models.Group object at 0x00000246B2B6E360>, <app.database.models.Group object at 0x00000246B2B6E470>, <app.database.models.Group object at 0x00000246B2B6E580>, <app.database.models.Group object at 0x00000246B2B6E690>, <app.database.models.Group object at 0x00000246B2B6E7A0>, <app.database.models.Group object at 0x00000246B2B6E8B0>, <app.database.models.Group object at 0x00000246B2B6E9C0>, <app.database.models.Group object at 0x00000246B2B6EAD0>, <app.database.models.Group object at 0x00000246B2B6EBE0>, <app.database.models.Group object at 0x00000246B2B6ECF0>, <app.database.models.Group object at 0x00000246B2B6EE00>, <app.database.models.Group object at 0x00000246B2B6EF10>, <app.database.models.Group object at 0x00000246B2B6F020>, <app.database.models.Group object at 0x00000246B2B6F130>, <app.database.models.Group object at 0x00000246B2B6F240>, <app.database.models.Group object at 0x00000246B2B6F350>, <app.database.models.Group object at 0x00000246B2B6F460>, <app.database.models.Group object at 0x00000246B2B6F570>, <app.database.models.Group object at 0x00000246B2B6F680>, <app.database.models.Group object at 0x00000246B2B6F790>, <app.database.models.Group object at 0x00000246B2B6F8A0>, <app.database.models.Group object at 0x00000246B2B6F9B0>, <app.database.models.Group object at 0x00000246B2B6FAC0>, <app.database.models.Group object at 0x00000246B2B6FBD0>, <app.database.models.Group object at 0x00000246B2B6FCE0>, <app.database.models.Group object at 0x00000246B2B6FDF0>, <app.database.models.Group object at 0x00000246B2B6FF00>, <app.database.models.Group object at 0x00000246B2BDC050>, <app.database.models.Group object at 0x00000246B2BDC160>, <app.database.models.Group object at 0x00000246B2BDC270>, <app.database.models.Group object at 0x00000246B2BDC380>, <app.database.models.Group object at 0x00000246B2BDC490>, <app.database.models.Group object at 0x00000246B2BDC5A0>, <app.database.models.Group object at 0x00000246B2BDC6B0>, <app.database.models.Group object at 0x00000246B2BDC7C0>, <app.database.models.Group object at 0x00000246B2BDC8D0>, <app.database.models.Group object at 0x00000246B2BDC9E0>, <app.database.models.Group object at 0x00000246B2BDCAF0>, <app.database.models.Group object at 0x00000246B2BDCC00>]
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 02:59:47,526 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 02:59:47,529 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 02:59:48,388 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 02:59:48,388 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237')], HighestMarginPerLot=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.66, ContributingOrders=1 (based on individual stored margins)
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.7718870992438770078820536
2025-06-04 02:59:48,389 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.7718870992438770078820536
2025-06-04 02:59:48,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=1, NetQty=1.00000000
2025-06-04 02:59:48,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237'), Decimal('654.7718870992438770078820536')], HighestMarginPerLot=654.7718870992438770078820536
2025-06-04 02:59:48,390 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.77, ContributingOrders=2 (based on individual stored margins)
2025-06-04 02:59:48,390 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=654.66, MarginAfter=654.77, AdditionalMargin=0.11
2025-06-04 02:59:48,400 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=654.66000000, CalculatedNewMargin=654.77
2025-06-04 02:59:48,416 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4807293199', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879600000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.7718870992438770078820536'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 02:59:48,451 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 654.77
2025-06-04 02:59:48,558 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 03:00:33,104 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x00000246B27939B0>, <app.database.models.Group object at 0x00000246B2793BD0>, <app.database.models.Group object at 0x00000246B2793AC0>, <app.database.models.Group object at 0x00000246B2B6C5A0>, <app.database.models.Group object at 0x00000246B2B6CF30>, <app.database.models.Group object at 0x00000246B2B6CE20>, <app.database.models.Group object at 0x00000246B2B6D040>, <app.database.models.Group object at 0x00000246B2B6CC00>, <app.database.models.Group object at 0x00000246B2B6C380>, <app.database.models.Group object at 0x00000246B2B6D150>, <app.database.models.Group object at 0x00000246B2B6C6B0>, <app.database.models.Group object at 0x00000246B2B6C7C0>, <app.database.models.Group object at 0x00000246B2B6C160>, <app.database.models.Group object at 0x00000246B2B6C050>, <app.database.models.Group object at 0x00000246B2B6CAF0>, <app.database.models.Group object at 0x00000246B2B6C9E0>, <app.database.models.Group object at 0x00000246B2B6C8D0>, <app.database.models.Group object at 0x00000246B2B6C270>, <app.database.models.Group object at 0x00000246B2B6D260>, <app.database.models.Group object at 0x00000246B2B6D370>, <app.database.models.Group object at 0x00000246B2B6D480>, <app.database.models.Group object at 0x00000246B2B6D590>, <app.database.models.Group object at 0x00000246B2B6D6A0>, <app.database.models.Group object at 0x00000246B2B6D7B0>, <app.database.models.Group object at 0x00000246B2B6D8C0>, <app.database.models.Group object at 0x00000246B2B6D9D0>, <app.database.models.Group object at 0x00000246B2B6DAE0>, <app.database.models.Group object at 0x00000246B2B6DBF0>, <app.database.models.Group object at 0x00000246B2B6DD00>, <app.database.models.Group object at 0x00000246B2B6DE10>, <app.database.models.Group object at 0x00000246B2B6DF20>, <app.database.models.Group object at 0x00000246B2B6E030>, <app.database.models.Group object at 0x00000246B2B6E140>, <app.database.models.Group object at 0x00000246B2B6E250>, <app.database.models.Group object at 0x00000246B2B6E360>, <app.database.models.Group object at 0x00000246B2B6E470>, <app.database.models.Group object at 0x00000246B2B6E580>, <app.database.models.Group object at 0x00000246B2B6E690>, <app.database.models.Group object at 0x00000246B2B6E7A0>, <app.database.models.Group object at 0x00000246B2B6E8B0>, <app.database.models.Group object at 0x00000246B2B6E9C0>, <app.database.models.Group object at 0x00000246B2B6EAD0>, <app.database.models.Group object at 0x00000246B2B6EBE0>, <app.database.models.Group object at 0x00000246B2B6ECF0>, <app.database.models.Group object at 0x00000246B2B6EE00>, <app.database.models.Group object at 0x00000246B2B6EF10>, <app.database.models.Group object at 0x00000246B2B6F020>, <app.database.models.Group object at 0x00000246B2B6F130>, <app.database.models.Group object at 0x00000246B2B6F240>, <app.database.models.Group object at 0x00000246B2B6F350>, <app.database.models.Group object at 0x00000246B2B6F460>, <app.database.models.Group object at 0x00000246B2B6F570>, <app.database.models.Group object at 0x00000246B2B6F680>, <app.database.models.Group object at 0x00000246B2B6F790>, <app.database.models.Group object at 0x00000246B2B6F8A0>, <app.database.models.Group object at 0x00000246B2B6F9B0>, <app.database.models.Group object at 0x00000246B2B6FAC0>, <app.database.models.Group object at 0x00000246B2B6FBD0>, <app.database.models.Group object at 0x00000246B2B6FCE0>, <app.database.models.Group object at 0x00000246B2B6FDF0>, <app.database.models.Group object at 0x00000246B2B6FF00>, <app.database.models.Group object at 0x00000246B2B6CD10>, <app.database.models.Group object at 0x00000246B2BDCF30>, <app.database.models.Group object at 0x00000246B2BDC050>, <app.database.models.Group object at 0x00000246B2BDC160>, <app.database.models.Group object at 0x00000246B2BDC270>, <app.database.models.Group object at 0x00000246B2BDC380>, <app.database.models.Group object at 0x00000246B2BDC490>, <app.database.models.Group object at 0x00000246B2BDC5A0>, <app.database.models.Group object at 0x00000246B2BDC6B0>, <app.database.models.Group object at 0x00000246B2BDC7C0>, <app.database.models.Group object at 0x00000246B2BDC8D0>, <app.database.models.Group object at 0x00000246B2BDC9E0>, <app.database.models.Group object at 0x00000246B2BDCAF0>, <app.database.models.Group object at 0x00000246B2BDCC00>, <app.database.models.Group object at 0x00000246B2BDD370>, <app.database.models.Group object at 0x00000246B2BDCD10>, <app.database.models.Group object at 0x00000246B2BDCE20>, <app.database.models.Group object at 0x00000246B2BDD480>]
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 03:00:33,116 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 03:00:33,116 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 69): Type=SELL, Qty=1.00000000, StoredMargin=654.77188710
2025-06-04 03:00:33,425 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.7718871
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237'), Decimal('654.7718871')], HighestMarginPerLot=654.7718871
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=654.77, ContributingOrders=2 (based on individual stored margins)
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 68): Type=BUY_LIMIT, Qty=1.00000000, StoredMargin=654.66256237
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=654.66256237
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 69): Type=SELL, Qty=1.00000000, StoredMargin=654.77188710
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=654.7718871
2025-06-04 03:00:33,426 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=654.7791785456481002136393796
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=654.7791785456481002136393796
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('654.66256237'), Decimal('654.7718871'), Decimal('654.7791785456481002136393796')], HighestMarginPerLot=654.7791785456481002136393796
2025-06-04 03:00:33,427 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1309.56, ContributingOrders=3 (based on individual stored margins)
2025-06-04 03:00:33,427 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=654.77, MarginAfter=1309.56, AdditionalMargin=654.79
2025-06-04 03:00:33,433 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=654.77000000, CalculatedNewMargin=1309.56
2025-06-04 03:00:33,474 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9106212759', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879800000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('654.7791785456481002136393796'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 03:00:33,493 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1309.56
2025-06-04 03:00:33,543 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 03:01:43,975 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:01:43,975 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:01:43,987 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'ce1906db-be3b-424c-86bd-c2ae91294933', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 357, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal_dict, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', 'ce1906db-be3b-424c-86bd-c2ae91294933', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 03:07:48,440 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:08:56,549 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:08:56,549 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': 'f2530900-21b9-412d-8b95-67833d94361d', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:08:56,549 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:08:56,551 - ERROR - orders - Unexpected error in place_pending_order: 'OrderCreateInternal' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 371, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal, order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 31, in create_order
    orders_logger.debug(f"[DEBUG][create_order] status field value: {order_data.get('status')}")
                                                                     ^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 991, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'OrderCreateInternal' object has no attribute 'get'
2025-06-04 03:10:14,400 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:10:24,475 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:10:24,475 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '617fe870-a3f4-4b70-ba6c-93f5e96ed6c7', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'live', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:10:24,475 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:10:24,492 - ERROR - orders - Unexpected error in place_pending_order: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '617fe870-a3f4-4b70-ba6c-93f5e96ed6c7', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.IntegrityError: (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 371, in place_pending_order
    db_order = await crud_order.create_order(db, order_create_internal.model_dump(), order_model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\crud\crud_order.py", line 35, in create_order
    await db.commit()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 1014, in commit
    await greenlet_spawn(self.sync_session.commit)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 203, in greenlet_spawn
    result = context.switch(value)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 2032, in commit
    trans.commit(_to_root=True)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "<string>", line 2, in commit
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    ~~~~~~~~~~~~~~~~~~^^
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    ~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4345, in flush
    self._flush(objects)
    ~~~~~~~~~~~^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4480, in _flush
    with util.safe_reraise():
         ~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 224, in __exit__
    raise exc_value.with_traceback(exc_tb)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\session.py", line 4441, in _flush
    flush_context.execute()
    ~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    ~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self.mapper,
        ^^^^^^^^^^^^
        uow.states_for_mapper_hierarchy(self.mapper, False, False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        uow,
        ^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        base_mapper,
        ^^^^^^^^^^^^
    ...<3 lines>...
        insert,
        ^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
        statement,
        params,
        execution_options=execution_options,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1415, in execute
    return meth(
        self,
        distilled_parameters,
        execution_options or NO_OPTIONS,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\sql\elements.py", line 523, in _execute_on_connection
    return connection._execute_clauseelement(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self, distilled_params, execution_options
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1637, in _execute_clauseelement
    ret = self._execute_context(
        dialect,
    ...<8 lines>...
        cache_hit=cache_hit,
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1842, in _execute_context
    return self._exec_single_context(
           ~~~~~~~~~~~~~~~~~~~~~~~~~^
        dialect, context, statement, parameters
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1982, in _exec_single_context
    self._handle_dbapi_exception(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        e, str_statement, effective_parameters, cursor, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 2351, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\base.py", line 1963, in _exec_single_context
    self.dialect.do_execute(
    ~~~~~~~~~~~~~~~~~~~~~~~^
        cursor, str_statement, effective_parameters, context
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\engine\default.py", line 943, in do_execute
    cursor.execute(statement, parameters)
    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 97, in execute
    return self.await_(self._execute_async(operation, parameters))
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 132, in await_only
    return current.parent.switch(awaitable)  # type: ignore[no-any-return,attr-defined] # noqa: E501
           ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 196, in greenlet_spawn
    value = await result
            ^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\sqlalchemy\dialects\mysql\aiomysql.py", line 106, in _execute_async
    result = await self._cursor.execute(operation, parameters)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 239, in execute
    await self._query(query)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\cursors.py", line 457, in _query
    await conn.query(q)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 469, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 683, in _read_query_result
    await result.read()
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 1164, in read
    first_packet = await self.connection._read_packet()
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\aiomysql\connection.py", line 652, in _read_packet
    packet.raise_for_error()
    ~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\protocol.py", line 219, in raise_for_error
    err.raise_mysql_exception(self._data)
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pymysql\err.py", line 150, in raise_mysql_exception
    raise errorclass(errno, errval)
sqlalchemy.exc.IntegrityError: (pymysql.err.IntegrityError) (1452, 'Cannot add or update a child row: a foreign key constraint fails (`u436589492_forex`.`user_orders`, CONSTRAINT `user_orders_ibfk_1` FOREIGN KEY (`order_user_id`) REFERENCES `users` (`id`))')
[SQL: INSERT INTO user_orders (status, order_id, order_user_id, order_company_name, order_type, order_status, order_price, order_quantity, contract_value, margin, stop_loss, take_profit, close_price, net_profit, swap, commission, cancel_message, close_message, cancel_id, close_id, modify_id, stoploss_id, takeprofit_id, stoploss_cancel_id, takeprofit_cancel_id) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)]
[parameters: ('PENDING', '617fe870-a3f4-4b70-ba6c-93f5e96ed6c7', 1, 'AUDCAD', 'BUY_LIMIT', 'PENDING', Decimal('0.8885'), Decimal('1'), None, None, Decimal('0'), Decimal('0'), None, None, None, None, None, None, None, None, None, None, None, None, None)]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2025-06-04 03:14:11,505 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:14:11,505 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '97a90ed2-c6d7-4f91-8047-894d7b9c1e2e', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:14:11,505 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:14:11,606 - ERROR - orders - Unexpected error in place_pending_order: 'DemoUserOrder' object has no attribute 'open_time'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 391, in place_pending_order
    'open_time': db_order.open_time.isoformat() if db_order.open_time else None,
                                                   ^^^^^^^^^^^^^^^^^^
AttributeError: 'DemoUserOrder' object has no attribute 'open_time'
2025-06-04 03:19:15,250 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:19:35,956 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:19:35,956 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '1e845b23-4c0e-4872-bbc1-5ffc56996df6', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:19:35,956 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:19:35,994 - INFO - orders - Pending order 1e845b23-4c0e-4872-bbc1-5ffc56996df6 added to Redis.
2025-06-04 03:19:36,001 - ERROR - orders - Unexpected error in place_pending_order: 4 validation errors for OrderResponse
order_user_id
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
order_company_name
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 399, in place_pending_order
    response = OrderResponse(
        order_id=db_order.order_id,
    ...<13 lines>...
        user_id=db_order.order_user_id
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 4 validation errors for OrderResponse
order_user_id
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
order_company_name
  Field required [type=missing, input_value={'order_id': '1e845b23-4c...03:19:35', 'user_id': 1}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
contract_value
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
margin
  Decimal input should be an integer, float, string or Decimal object [type=decimal_type, input_value=None, input_type=NoneType]
    For further information visit https://errors.pydantic.dev/2.11/v/decimal_type
2025-06-04 03:21:08,081 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:21:12,676 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:21:52,009 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:21:52,009 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '2eee3387-0039-417a-9677-73344057e913', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:21:52,009 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:21:52,041 - INFO - orders - Pending order 2eee3387-0039-417a-9677-73344057e913 added to Redis.
2025-06-04 03:25:31,225 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 03:25:58,364 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:25:58,364 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '3f439c9a-4a09-4d80-b7e2-8a168120c50d', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:25:58,364 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-04 03:25:58,387 - INFO - orders - Pending order 3f439c9a-4a09-4d80-b7e2-8a168120c50d added to Redis.
2025-06-04 03:39:45,470 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:39:45,470 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': 'e03cbd1f-3aa1-4e73-bfa1-20002e20ea23', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8882'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:39:45,470 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8882
2025-06-04 03:39:45,499 - INFO - orders - Pending order e03cbd1f-3aa1-4e73-bfa1-20002e20ea23 added to Redis.
2025-06-04 03:40:59,923 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:40:59,923 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '497367b0-dc3f-4a11-9da0-a1610b9daaff', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8881'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:40:59,923 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8881
2025-06-04 03:40:59,961 - INFO - orders - Pending order 497367b0-dc3f-4a11-9da0-a1610b9daaff added to Redis.
2025-06-04 03:41:03,958 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 03:41:03,958 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '87097d92-0c8a-4cc5-9538-218430be3bdf', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88815'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 03:41:03,958 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88815
2025-06-04 03:41:04,016 - INFO - orders - Pending order 87097d92-0c8a-4cc5-9538-218430be3bdf added to Redis.
2025-06-04 03:51:28,018 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:10:47,632 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:18:23,685 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:20:29,960 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-04 04:20:29,960 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': 'aa4f7629-dcf0-4630-af05-6790e2e42066', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.88815'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-04 04:20:29,960 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.88815
2025-06-04 04:20:30,060 - INFO - orders - Pending order aa4f7629-dcf0-4630-af05-6790e2e42066 added to Redis.
2025-06-04 04:30:08,871 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:43:38,479 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:43:38,500 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:44:33,168 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:44:33,374 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:46:09,844 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:46:45,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:46:45,172 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:49:55,452 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:49:55,455 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 04:50:19,393 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:12:34,022 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 05:12:34,032 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000027ABFA26360>, <app.database.models.Group object at 0x0000027ABFD58270>, <app.database.models.Group object at 0x0000027ABFD585A0>, <app.database.models.Group object at 0x0000027ABFD58160>, <app.database.models.Group object at 0x0000027ABFD586B0>, <app.database.models.Group object at 0x0000027ABFD58380>, <app.database.models.Group object at 0x0000027ABFD587C0>, <app.database.models.Group object at 0x0000027ABFD588D0>, <app.database.models.Group object at 0x0000027ABFD589E0>, <app.database.models.Group object at 0x0000027ABFD58AF0>, <app.database.models.Group object at 0x0000027ABFD58C00>, <app.database.models.Group object at 0x0000027ABFD58D10>, <app.database.models.Group object at 0x0000027ABFD58E20>, <app.database.models.Group object at 0x0000027ABFD58F30>, <app.database.models.Group object at 0x0000027ABFD59040>, <app.database.models.Group object at 0x0000027ABFD59150>, <app.database.models.Group object at 0x0000027ABFD59260>, <app.database.models.Group object at 0x0000027ABFD59370>, <app.database.models.Group object at 0x0000027ABFD59480>, <app.database.models.Group object at 0x0000027ABFD59590>, <app.database.models.Group object at 0x0000027ABFD596A0>, <app.database.models.Group object at 0x0000027ABFD597B0>, <app.database.models.Group object at 0x0000027ABFD598C0>, <app.database.models.Group object at 0x0000027ABFD599D0>, <app.database.models.Group object at 0x0000027ABFD59AE0>, <app.database.models.Group object at 0x0000027ABFD59BF0>, <app.database.models.Group object at 0x0000027ABFD59D00>, <app.database.models.Group object at 0x0000027ABFD59E10>, <app.database.models.Group object at 0x0000027ABFD59F20>, <app.database.models.Group object at 0x0000027ABFD5A030>, <app.database.models.Group object at 0x0000027ABFD5A140>, <app.database.models.Group object at 0x0000027ABFD5A250>, <app.database.models.Group object at 0x0000027ABFD5A360>, <app.database.models.Group object at 0x0000027ABFD5A470>, <app.database.models.Group object at 0x0000027ABFD5A580>, <app.database.models.Group object at 0x0000027ABFD5A690>, <app.database.models.Group object at 0x0000027ABFD5A7A0>, <app.database.models.Group object at 0x0000027ABFD5A8B0>, <app.database.models.Group object at 0x0000027ABFD5A9C0>, <app.database.models.Group object at 0x0000027ABFD5AAD0>, <app.database.models.Group object at 0x0000027ABFD5ABE0>, <app.database.models.Group object at 0x0000027ABFD5ACF0>, <app.database.models.Group object at 0x0000027ABFD5AE00>, <app.database.models.Group object at 0x0000027ABFD5AF10>, <app.database.models.Group object at 0x0000027ABFD5B020>, <app.database.models.Group object at 0x0000027ABFD5B130>, <app.database.models.Group object at 0x0000027ABFD5B240>, <app.database.models.Group object at 0x0000027ABFD5B350>, <app.database.models.Group object at 0x0000027ABFD5B460>, <app.database.models.Group object at 0x0000027ABFD5B570>, <app.database.models.Group object at 0x0000027ABFD5B680>, <app.database.models.Group object at 0x0000027ABFD5B790>, <app.database.models.Group object at 0x0000027ABFD5B8A0>, <app.database.models.Group object at 0x0000027ABFD5B9B0>, <app.database.models.Group object at 0x0000027ABFD5BAC0>, <app.database.models.Group object at 0x0000027ABFD5BBD0>, <app.database.models.Group object at 0x0000027ABFD5BCE0>, <app.database.models.Group object at 0x0000027ABFD5BDF0>, <app.database.models.Group object at 0x0000027ABFD5BF00>, <app.database.models.Group object at 0x0000027ABFE5C050>, <app.database.models.Group object at 0x0000027ABFE5C160>, <app.database.models.Group object at 0x0000027ABFE5C270>, <app.database.models.Group object at 0x0000027ABFE5C380>, <app.database.models.Group object at 0x0000027ABFE5C490>, <app.database.models.Group object at 0x0000027ABFE5C5A0>, <app.database.models.Group object at 0x0000027ABFE5C6B0>, <app.database.models.Group object at 0x0000027ABFE5C7C0>, <app.database.models.Group object at 0x0000027ABFE5C8D0>, <app.database.models.Group object at 0x0000027ABFE5C9E0>, <app.database.models.Group object at 0x0000027ABFE5CAF0>, <app.database.models.Group object at 0x0000027ABFE5CC00>, <app.database.models.Group object at 0x0000027ABFE5CD10>, <app.database.models.Group object at 0x0000027ABFE5CE20>, <app.database.models.Group object at 0x0000027ABFE5CF30>, <app.database.models.Group object at 0x0000027ABFE5D040>, <app.database.models.Group object at 0x0000027ABFE5D150>, <app.database.models.Group object at 0x0000027ABFE5D260>, <app.database.models.Group object at 0x0000027ABFE5D370>, <app.database.models.Group object at 0x0000027ABFE5D480>]
2025-06-04 05:12:34,032 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 05:12:34,033 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 05:12:34,033 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 05:12:34,033 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 05:12:34,033 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 05:12:34,770 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 05:12:34,770 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=655.8162952585263342235453789
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.8162952585263342235453789
2025-06-04 05:12:34,771 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1, NetQty=1
2025-06-04 05:12:34,772 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.8162952585263342235453789')], HighestMarginPerLot=655.8162952585263342235453789
2025-06-04 05:12:34,772 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 05:12:34,772 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=655.82, AdditionalMargin=655.82
2025-06-04 05:12:34,781 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=655.82
2025-06-04 05:12:34,834 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1688253127', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8886900000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('655.8162952585263342235453789'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 05:12:34,862 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 655.82
2025-06-04 05:12:34,926 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 05:12:34,931 - ERROR - orders - Unexpected error in place_order: 1 validation error for OrderResponse
status
  Field required [type=missing, input_value={'order_id': '1688253127'...rofit': Decimal('0E-8')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 292, in place_order
    return OrderResponse(
        order_id=db_order.order_id,
    ...<9 lines>...
        take_profit=db_order.take_profit
    )
  File "C:\Users\Dhanush\FASTAPI\venv\Lib\site-packages\pydantic\main.py", line 253, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderResponse
status
  Field required [type=missing, input_value={'order_id': '1688253127'...rofit': Decimal('0E-8')}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
2025-06-04 05:14:25,214 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:14:48,963 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000028E40199160>, <app.database.models.Group object at 0x0000028E40167ED0>, <app.database.models.Group object at 0x0000028E402F4050>, <app.database.models.Group object at 0x0000028E401C96E0>, <app.database.models.Group object at 0x0000028E401C9810>, <app.database.models.Group object at 0x0000028E402AD370>, <app.database.models.Group object at 0x0000028E3FFD3020>, <app.database.models.Group object at 0x0000028E3FFD3130>, <app.database.models.Group object at 0x0000028E3FFD3240>, <app.database.models.Group object at 0x0000028E3FFD3350>, <app.database.models.Group object at 0x0000028E3FFD3460>, <app.database.models.Group object at 0x0000028E3FFD3570>, <app.database.models.Group object at 0x0000028E3FFD3680>, <app.database.models.Group object at 0x0000028E3FFD3790>, <app.database.models.Group object at 0x0000028E3FFD38A0>, <app.database.models.Group object at 0x0000028E3FFD39B0>, <app.database.models.Group object at 0x0000028E3FFD3AC0>, <app.database.models.Group object at 0x0000028E3FFD3BD0>, <app.database.models.Group object at 0x0000028E3FFD3CE0>, <app.database.models.Group object at 0x0000028E3FFD3DF0>, <app.database.models.Group object at 0x0000028E3FFD3F00>, <app.database.models.Group object at 0x0000028E402F8050>, <app.database.models.Group object at 0x0000028E402F8160>, <app.database.models.Group object at 0x0000028E402F8270>, <app.database.models.Group object at 0x0000028E402F8380>, <app.database.models.Group object at 0x0000028E402F8490>, <app.database.models.Group object at 0x0000028E402F85A0>, <app.database.models.Group object at 0x0000028E402F86B0>, <app.database.models.Group object at 0x0000028E402F87C0>, <app.database.models.Group object at 0x0000028E402F88D0>, <app.database.models.Group object at 0x0000028E402F89E0>, <app.database.models.Group object at 0x0000028E402F8AF0>, <app.database.models.Group object at 0x0000028E402F8C00>, <app.database.models.Group object at 0x0000028E402F8D10>, <app.database.models.Group object at 0x0000028E402F8E20>, <app.database.models.Group object at 0x0000028E402F8F30>, <app.database.models.Group object at 0x0000028E402F9040>, <app.database.models.Group object at 0x0000028E402F9150>, <app.database.models.Group object at 0x0000028E402F9260>, <app.database.models.Group object at 0x0000028E402F9370>, <app.database.models.Group object at 0x0000028E402F9480>, <app.database.models.Group object at 0x0000028E402F9590>, <app.database.models.Group object at 0x0000028E402F96A0>, <app.database.models.Group object at 0x0000028E402F97B0>, <app.database.models.Group object at 0x0000028E402F98C0>, <app.database.models.Group object at 0x0000028E402F99D0>, <app.database.models.Group object at 0x0000028E402F9AE0>, <app.database.models.Group object at 0x0000028E402F9BF0>, <app.database.models.Group object at 0x0000028E402F9D00>, <app.database.models.Group object at 0x0000028E402F9E10>, <app.database.models.Group object at 0x0000028E402F9F20>, <app.database.models.Group object at 0x0000028E402FA030>, <app.database.models.Group object at 0x0000028E402FA140>, <app.database.models.Group object at 0x0000028E402FA250>, <app.database.models.Group object at 0x0000028E402FA360>, <app.database.models.Group object at 0x0000028E402FA470>, <app.database.models.Group object at 0x0000028E402FA580>, <app.database.models.Group object at 0x0000028E402FA690>, <app.database.models.Group object at 0x0000028E402FA7A0>, <app.database.models.Group object at 0x0000028E402FA8B0>, <app.database.models.Group object at 0x0000028E402FA9C0>, <app.database.models.Group object at 0x0000028E402FAAD0>, <app.database.models.Group object at 0x0000028E402FABE0>, <app.database.models.Group object at 0x0000028E402FACF0>, <app.database.models.Group object at 0x0000028E402FAE00>, <app.database.models.Group object at 0x0000028E402FAF10>, <app.database.models.Group object at 0x0000028E402FB020>, <app.database.models.Group object at 0x0000028E402FB130>, <app.database.models.Group object at 0x0000028E402FB240>, <app.database.models.Group object at 0x0000028E402FB350>, <app.database.models.Group object at 0x0000028E402FB460>, <app.database.models.Group object at 0x0000028E402FB570>, <app.database.models.Group object at 0x0000028E402FB680>, <app.database.models.Group object at 0x0000028E402FB790>, <app.database.models.Group object at 0x0000028E402FB8A0>, <app.database.models.Group object at 0x0000028E402FB9B0>, <app.database.models.Group object at 0x0000028E402FBAC0>, <app.database.models.Group object at 0x0000028E402FBBD0>, <app.database.models.Group object at 0x0000028E402FBCE0>]
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 05:14:48,974 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 05:14:48,974 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526')], HighestMarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=655.7540913037451024741169861
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913037451024741169861
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913037451024741169861')], HighestMarginPerLot=655.81629526
2025-06-04 05:14:49,316 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 05:14:49,316 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=655.82, MarginAfter=1311.63, AdditionalMargin=655.81
2025-06-04 05:14:49,322 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=655.82000000, CalculatedNewMargin=1311.63
2025-06-04 05:14:49,332 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '1855881167', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8886700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('655.7540913037451024741169861'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 05:14:49,349 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1311.63
2025-06-04 05:14:49,398 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 05:18:15,971 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:18:15,971 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:18:15,971 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:18:15,972 - ERROR - orders - Error in close_order endpoint: name 'generate_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 490, in close_order
    close_order_id = generate_10_digit_id() # Generate close_order_id
                     ^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_10_digit_id' is not defined
2025-06-04 05:19:12,789 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:20:27,925 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:20:34,981 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:21:27,966 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:21:27,967 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:21:27,967 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:21:27,967 - ERROR - orders - Error in close_order endpoint: type object 'UserOrder' has no attribute 'close_order_id'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 490, in close_order
    close_order_id = await generate_unique_10_digit_id(db, order_model_class, 'close_order_id')
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Dhanush\FASTAPI\app\services\order_processing.py", line 11, in generate_unique_10_digit_id
    stmt = select(model).where(getattr(model, column) == candidate)
                               ~~~~~~~^^^^^^^^^^^^^^^
AttributeError: type object 'UserOrder' has no attribute 'close_order_id'
2025-06-04 05:21:53,507 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:22:36,515 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:22:36,515 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:22:36,515 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:22:36,554 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 676, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:22:36,559 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 676, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 775, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:27:20,773 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:27:24,862 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:28:05,857 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:28:05,857 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:28:05,857 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:28:05,857 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:28:05,873 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 677, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:28:05,875 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 677, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 776, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:28:40,636 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:29:28,620 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:29:28,620 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:29:28,620 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:29:28,620 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:29:28,635 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 700, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:29:28,636 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 700, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 799, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:32:03,632 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:32:42,068 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:32:42,068 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:32:42,068 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:32:42,068 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:32:42,084 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:32:42,086 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:35:56,399 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:37:07,593 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:37:07,593 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:37:07,593 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001BCCD6260D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:37:07,593 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:37:07,594 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:37:07,675 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:37:07,683 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:40:05,217 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:41:07,974 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:41:07,974 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:41:07,974 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002704B6796A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:41:07,974 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:41:07,974 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:41:07,996 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:41:07,997 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 716, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:42:12,084 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:42:43,438 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:42:43,438 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:42:43,438 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000193263496A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:42:43,438 - INFO - orders - Using order model: user_orders for user 1 (DemoUser)
2025-06-04 05:42:43,438 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:42:43,455 - ERROR - orders - Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.
2025-06-04 05:42:43,457 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 404: Order not found.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=404, detail="Order not found.")
fastapi.exceptions.HTTPException: 404: Order not found.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 816, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 404: Order not found.
2025-06-04 05:44:09,965 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:45:27,580 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:45:50,551 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:45:50,552 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:45:50,552 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000027321AB16A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000027321AB16A0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 05:45:50,552 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 05:45:50,552 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 05:45:50,552 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:45:50,583 - ERROR - orders - Error processing close order: name 'get_user_by_id_with_lock_fn' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 728, in close_order
    db_user_locked = await get_user_by_id_with_lock_fn(db, user_to_operate_on.id, model_class=type(user_to_operate_on))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_by_id_with_lock_fn' is not defined
2025-06-04 05:45:50,589 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'get_user_by_id_with_lock_fn' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 728, in close_order
    db_user_locked = await get_user_by_id_with_lock_fn(db, user_to_operate_on.id, model_class=type(user_to_operate_on))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'get_user_by_id_with_lock_fn' is not defined

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 816, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'get_user_by_id_with_lock_fn' is not defined
2025-06-04 05:49:29,204 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 05:49:31,254 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:49:31,255 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:49:31,255 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FFD37AD7F0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001FFD37AD7F0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 05:49:31,255 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 05:49:31,255 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 05:49:31,255 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:49:31,268 - ERROR - orders - Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 05:49:31,269 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 807, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 05:49:44,169 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 05:49:44,170 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 05:49:44,170 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FFD3900CD0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:44,170 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001FFD3900CD0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 05:49:44,170 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 05:49:44,171 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 05:49:44,171 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 05:49:44,171 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 05:49:44,171 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 05:49:44,171 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 05:49:44,198 - ERROR - orders - Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 05:49:44,201 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 731, in close_order
    current_overall_margin = Decimal(str(db_user_locked.margin))
                                         ^^^^^^^^^^^^^^
UnboundLocalError: cannot access local variable 'db_user_locked' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 807, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'db_user_locked' where it is not associated with a value
2025-06-04 06:02:00,550 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:05:03,729 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:05:16,639 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:05:16,639 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:05:16,639 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000177DFABD7F0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:05:16,639 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000177DFABD7F0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:05:16,639 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:05:16,639 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:05:16,640 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:05:16,640 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:05:16,640 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:05:16,640 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:05:16,651 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 689, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:05:16,652 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 689, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 792, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:06:38,323 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:08:27,924 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:08:27,924 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:08:27,924 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001617F5D20D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:08:27,924 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001617F5D20D0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:08:27,924 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:08:27,924 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:08:27,925 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:08:27,925 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:08:27,925 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:08:27,925 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:08:27,956 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 691, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:08:27,959 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 691, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 794, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:10:12,719 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 06:10:22,637 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:10:22,637 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:10:22,637 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000232BB5916A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000232BB5916A0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:10:22,637 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:10:22,637 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:10:22,637 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:10:22,645 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:10:22,646 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 795, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:21:25,433 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 06:21:25,433 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 06:21:25,433 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000232BB6DC910>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000232BB6DC910> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 06:21:25,434 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 06:21:25,434 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 06:21:25,434 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 06:21:25,441 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 06:21:25,444 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 795, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:39:46,786 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:44:56,554 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: SELL, Quantity: 1
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000002B39F87BE00>, <app.database.models.Group object at 0x000002B39FA079D0>, <app.database.models.Group object at 0x000002B39FA07B10>, <app.database.models.Group object at 0x000002B39FAF55B0>, <app.database.models.Group object at 0x000002B39FAF5940>, <app.database.models.Group object at 0x000002B39FA87650>, <app.database.models.Group object at 0x000002B39FA26030>, <app.database.models.Group object at 0x000002B39FA26140>, <app.database.models.Group object at 0x000002B39FA26250>, <app.database.models.Group object at 0x000002B39FA26360>, <app.database.models.Group object at 0x000002B39FA26470>, <app.database.models.Group object at 0x000002B39FA26580>, <app.database.models.Group object at 0x000002B39FA26690>, <app.database.models.Group object at 0x000002B39FA267A0>, <app.database.models.Group object at 0x000002B39FA268B0>, <app.database.models.Group object at 0x000002B39FA269C0>, <app.database.models.Group object at 0x000002B39FA26AD0>, <app.database.models.Group object at 0x000002B39FA26BE0>, <app.database.models.Group object at 0x000002B39FA26CF0>, <app.database.models.Group object at 0x000002B39FA26E00>, <app.database.models.Group object at 0x000002B39FA26F10>, <app.database.models.Group object at 0x000002B39FA27020>, <app.database.models.Group object at 0x000002B39FA27130>, <app.database.models.Group object at 0x000002B39FA27240>, <app.database.models.Group object at 0x000002B39FA27350>, <app.database.models.Group object at 0x000002B39FA27460>, <app.database.models.Group object at 0x000002B39FA27570>, <app.database.models.Group object at 0x000002B39FA27680>, <app.database.models.Group object at 0x000002B39FA27790>, <app.database.models.Group object at 0x000002B39FA278A0>, <app.database.models.Group object at 0x000002B39FA279B0>, <app.database.models.Group object at 0x000002B39FA27AC0>, <app.database.models.Group object at 0x000002B39FA27BD0>, <app.database.models.Group object at 0x000002B39FA27CE0>, <app.database.models.Group object at 0x000002B39FA27DF0>, <app.database.models.Group object at 0x000002B39FA27F00>, <app.database.models.Group object at 0x000002B39FC64050>, <app.database.models.Group object at 0x000002B39FC64160>, <app.database.models.Group object at 0x000002B39FC64270>, <app.database.models.Group object at 0x000002B39FC64380>, <app.database.models.Group object at 0x000002B39FC64490>, <app.database.models.Group object at 0x000002B39FC645A0>, <app.database.models.Group object at 0x000002B39FC646B0>, <app.database.models.Group object at 0x000002B39FC647C0>, <app.database.models.Group object at 0x000002B39FC648D0>, <app.database.models.Group object at 0x000002B39FC649E0>, <app.database.models.Group object at 0x000002B39FC64AF0>, <app.database.models.Group object at 0x000002B39FC64C00>, <app.database.models.Group object at 0x000002B39FC64D10>, <app.database.models.Group object at 0x000002B39FC64E20>, <app.database.models.Group object at 0x000002B39FC64F30>, <app.database.models.Group object at 0x000002B39FC65040>, <app.database.models.Group object at 0x000002B39FC65150>, <app.database.models.Group object at 0x000002B39FC65260>, <app.database.models.Group object at 0x000002B39FC65370>, <app.database.models.Group object at 0x000002B39FC65480>, <app.database.models.Group object at 0x000002B39FC65590>, <app.database.models.Group object at 0x000002B39FC656A0>, <app.database.models.Group object at 0x000002B39FC657B0>, <app.database.models.Group object at 0x000002B39FC658C0>, <app.database.models.Group object at 0x000002B39FC659D0>, <app.database.models.Group object at 0x000002B39FC65AE0>, <app.database.models.Group object at 0x000002B39FC65BF0>, <app.database.models.Group object at 0x000002B39FC65D00>, <app.database.models.Group object at 0x000002B39FC65E10>, <app.database.models.Group object at 0x000002B39FC65F20>, <app.database.models.Group object at 0x000002B39FC66030>, <app.database.models.Group object at 0x000002B39FC66140>, <app.database.models.Group object at 0x000002B39FC66250>, <app.database.models.Group object at 0x000002B39FC66360>, <app.database.models.Group object at 0x000002B39FC66470>, <app.database.models.Group object at 0x000002B39FC66580>, <app.database.models.Group object at 0x000002B39FC66690>, <app.database.models.Group object at 0x000002B39FC667A0>, <app.database.models.Group object at 0x000002B39FC668B0>, <app.database.models.Group object at 0x000002B39FC669C0>, <app.database.models.Group object at 0x000002B39FC66AD0>, <app.database.models.Group object at 0x000002B39FC66BE0>, <app.database.models.Group object at 0x000002B39FC66CF0>]
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-04 21:44:56,569 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-04 21:44:56,569 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-04 21:44:57,331 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 21:44:57,332 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: NEW_UNSAVED): Type=SELL, Qty=1, StoredMargin=656.5355988711304780148273795
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.5355988711304780148273795
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.5355988711304780148273795')], HighestMarginPerLot=656.5355988711304780148273795
2025-06-04 21:44:57,333 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 21:44:57,333 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=1311.63, MarginAfter=1969.61, AdditionalMargin=657.98
2025-06-04 21:44:57,341 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=1311.63000000, CalculatedNewMargin=1969.61
2025-06-04 21:44:57,361 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-04 21:44:57,361 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-04 21:44:57,362 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-04 21:44:57,362 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9447353637', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'SELL', 'order_price': Decimal('0.8879700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('656.5355988711304780148273795'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-04 21:44:57,388 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 1969.61
2025-06-04 21:44:57,432 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-04 21:45:35,363 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 21:45:35,363 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 21:45:35,363 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002B39FA05950>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002B39FA05950> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 21:45:35,363 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 21:45:35,363 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 21:45:35,363 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 21:45:35,368 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:45:35,371 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 692, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 795, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:50:35,416 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:52:56,482 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:53:00,648 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 21:53:00,648 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 21:53:00,648 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002808D3BD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002808D3BD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:53:00,648 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 21:53:00,649 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 21:53:00,649 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 21:53:00,649 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 21:53:00,663 - ERROR - orders - Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 693, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:53:00,666 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 693, in close_order
    orders_logger.info(f"Live user {user_to_operate_on.id} from group '{user_group[0].group_name if user_group else 'default'}' ('sending_orders' is NOT 'barclays'). Processing close locally.") # Fixed: user_group might be empty
                                                                                                    ^^^^^^^^^^
UnboundLocalError: cannot access local variable 'user_group' where it is not associated with a value

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 796, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: cannot access local variable 'user_group' where it is not associated with a value
2025-06-04 21:55:12,028 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 21:55:36,033 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 21:55:36,033 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 21:55:36,033 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002C912441550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002C912441550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 21:55:36,034 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 21:55:36,034 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 21:55:36,034 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 21:55:36,058 - INFO - orders - Live user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 21:55:36,077 - ERROR - orders - Could not retrieve and lock user record for user ID: 1
2025-06-04 21:55:36,080 - ERROR - orders - Error processing close order: 500: Could not retrieve user data securely.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=500, detail="Could not retrieve user data securely.")
fastapi.exceptions.HTTPException: 500: Could not retrieve user data securely.
2025-06-04 21:55:36,082 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Could not retrieve user data securely.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 717, in close_order
    raise HTTPException(status_code=500, detail="Could not retrieve user data securely.")
fastapi.exceptions.HTTPException: 500: Could not retrieve user data securely.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 802, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Could not retrieve user data securely.
2025-06-04 22:00:46,696 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:32:36,138 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:35:04,922 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 22:35:04,922 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 22:35:04,923 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000023C90585450>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000023C90585450> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 22:35:04,923 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 22:35:04,923 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 22:35:04,923 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 22:35:04,959 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 22:35:05,007 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:35:05,011 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:37:14,085 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:37:42,186 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 22:37:42,186 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 22:37:42,187 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000254B3015550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000254B3015550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 22:37:42,187 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 22:37:42,187 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 22:37:42,187 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 22:37:42,207 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 22:37:42,226 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:37:42,227 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 735, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 815, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 22:46:53,658 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:47:31,562 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 22:59:06,116 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:00:35,897 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:00:40,004 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:00:40,005 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:00:40,005 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000255AC019550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:00:40,005 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000255AC019550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:00:40,005 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:00:40,005 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:00:40,006 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:00:40,006 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:00:40,007 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:00:40,007 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:00:40,050 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:00:40,102 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 737, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:00:40,106 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 737, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 817, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:06:24,131 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:07:41,883 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:08:44,174 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:10:35,778 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:10:35,779 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:10:35,779 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002BD7D0416D0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002BD7D0416D0> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:10:35,779 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:10:35,780 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:10:35,780 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:10:35,780 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:10:35,847 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:10:35,874 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:10:35,877 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 818, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:11:19,007 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:11:25,550 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:11:25,550 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:11:25,550 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001FD7E57D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:11:25,550 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001FD7E57D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:11:25,550 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:11:25,551 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:11:25,551 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:11:25,551 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:11:25,551 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:11:25,551 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:11:25,585 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:11:25,605 - ERROR - orders - Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:11:25,607 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 738, in close_order
    margin_before_recalc = await calculate_total_symbol_margin_contribution(
                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        db=db, redis_client=redis_client, user_id=db_user_locked.id, symbol=order_symbol,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        open_positions_for_symbol=all_open_orders_for_symbol, order_model_for_calc=order_model_class
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
TypeError: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 818, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: calculate_total_symbol_margin_contribution() got an unexpected keyword argument 'order_model_for_calc'
2025-06-04 23:14:39,779 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:14:44,111 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:15:10,659 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:15:10,659 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:15:10,659 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001BB1DD1D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:15:10,659 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001BB1DD1D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:15:10,660 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:15:10,660 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:15:10,660 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:15:10,674 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:15:10,690 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:15:10,691 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:15:10,692 - ERROR - orders - Error processing close order: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 743, in close_order
    non_symbol_margin = current_overall_margin - margin_before_recalc
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
2025-06-04 23:15:10,694 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 743, in close_order
    non_symbol_margin = current_overall_margin - margin_before_recalc
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
TypeError: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 818, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: unsupported operand type(s) for -: 'decimal.Decimal' and 'dict'
2025-06-04 23:16:39,870 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:16:45,312 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:16:45,312 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:16:45,312 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002E4FAC2D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002E4FAC2D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:16:45,313 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:16:45,314 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:16:45,314 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:16:45,314 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:16:45,361 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:16:45,405 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:16:45,406 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:16:45,407 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:16:45,408 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:16:45,408 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:16:45,436 - ERROR - orders - Error converting PnL on Close from CAD to USD: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 32, in _convert_to_usd
    raw_market_data = await get_latest_market_data()
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
2025-06-04 23:16:45,441 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:16:45,453 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:16:45,457 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:25:01,357 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:25:15,692 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:25:20,947 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:25:20,947 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:25:20,948 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000016DF629D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000016DF629D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:25:20,948 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:25:20,949 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:25:20,949 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:25:20,949 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:25:20,990 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:25:21,010 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:25:21,011 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:25:21,049 - ERROR - orders - Error converting PnL on Close from CAD to USD: get_last_known_price() missing 2 required positional arguments: 'redis_client' and 'symbol'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\services\portfolio_calculator.py", line 33, in _convert_to_usd
    raw_market_data = await get_last_known_price()
                            ~~~~~~~~~~~~~~~~~~~~^^
TypeError: get_last_known_price() missing 2 required positional arguments: 'redis_client' and 'symbol'
2025-06-04 23:25:21,053 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:25:21,056 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:25:21,059 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:26:06,614 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:27:22,695 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:28:08,861 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:28:08,861 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:28:08,861 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000021E6A0AD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000021E6A0AD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:28:08,861 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:28:08,861 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:28:08,861 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:28:08,895 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:28:08,918 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:28:08,918 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:28:08,919 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:28:08,920 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:28:08,920 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:28:08,937 - ERROR - orders - Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 788, in close_order
    profit_usd = await _convert_to_usd(profit, profit_currency, db_user_locked.id, db_order.order_id, "PnL on Close", db=db)
                       ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: _convert_to_usd() missing 1 required positional argument: 'redis_client'
2025-06-04 23:28:08,940 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 788, in close_order
    profit_usd = await _convert_to_usd(profit, profit_currency, db_user_locked.id, db_order.order_id, "PnL on Close", db=db)
                       ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: _convert_to_usd() missing 1 required positional argument: 'redis_client'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: _convert_to_usd() missing 1 required positional argument: 'redis_client'
2025-06-04 23:28:27,170 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:32:35,789 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:32:49,723 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:33:03,496 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:34:15,432 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:34:28,871 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:35:51,596 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:36:41,279 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:36:41,279 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:36:41,279 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002A101DDD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002A101DDD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:36:41,279 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:36:41,279 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:36:41,279 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:36:41,303 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:36:41,322 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:36:41,322 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:36:41,323 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:36:41,343 - ERROR - orders - No conversion rate found for CAD to USD for PnL on Close
2025-06-04 23:36:41,343 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:36:41,347 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:36:41,348 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:43:29,892 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:43:29,893 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:43:29,893 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000002A101DC3B10>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000002A101DC3B10> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:43:29,894 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:43:29,894 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:43:29,894 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:43:29,919 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:43:29,942 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:43:29,943 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:43:29,944 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:43:29,945 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:43:29,945 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:43:29,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:43:29,946 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:43:29,966 - ERROR - orders - No conversion rate found for CAD to USD for PnL on Close
2025-06-04 23:43:29,967 - ERROR - orders - Order 9447353637: PnL conversion failed. Rates missing for CAD/USD.
2025-06-04 23:43:29,970 - ERROR - orders - Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:43:29,972 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 791, in close_order
    raise HTTPException(status_code=500, detail=f"Critical: Could not convert PnL from {profit_currency} to USD.")
fastapi.exceptions.HTTPException: 500: Critical: Could not convert PnL from CAD to USD.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 500: Critical: Could not convert PnL from CAD to USD.
2025-06-04 23:44:12,434 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:44:21,734 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:44:21,734 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:44:21,735 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001CB6615D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001CB6615D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:44:21,735 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:44:21,735 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:44:21,735 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:44:21,754 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:44:21,779 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:44:21,780 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:44:21,803 - DEBUG - orders - Inverse conversion for PnL on Close: -103.000000000000000000000000 CAD / 1.3704900000 = -75.15560128129355194127647776 USD
2025-06-04 23:44:21,812 - ERROR - orders - Error processing close order: name 'generate_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 809, in close_order
    db.add(Wallet(**WalletCreate(**wallet_common_data, transaction_type="Profit/Loss", transaction_amount=db_order.net_profit, description=f"P/L for closing order {db_order.order_id}").model_dump(exclude_none=True), transaction_id=generate_10_digit_id()))
                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_10_digit_id' is not defined. Did you mean: 'generate_unique_10_digit_id'?
2025-06-04 23:44:21,820 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: name 'generate_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 809, in close_order
    db.add(Wallet(**WalletCreate(**wallet_common_data, transaction_type="Profit/Loss", transaction_amount=db_order.net_profit, description=f"P/L for closing order {db_order.order_id}").model_dump(exclude_none=True), transaction_id=generate_10_digit_id()))
                                                                                                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_10_digit_id' is not defined. Did you mean: 'generate_unique_10_digit_id'?

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 820, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: name 'generate_10_digit_id' is not defined
2025-06-04 23:46:34,664 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:46:41,630 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:47:09,567 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:47:09,568 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:47:09,568 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000218010DD550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000218010DD550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:47:09,568 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:47:09,568 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:47:09,568 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:47:09,597 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:47:09,621 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 3
2025-06-04 23:47:09,621 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3 (ID: 81): Type=SELL, Qty=1.00000000, StoredMargin=656.53559887
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 3: MarginPerLot=656.53559887
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=3.00000000, NetQty=3.00000000
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913'), Decimal('656.53559887')], HighestMarginPerLot=656.53559887
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1969.61, ContributingOrders=3 (based on individual stored margins)
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:47:09,622 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:47:09,623 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:47:09,666 - DEBUG - orders - Inverse conversion for PnL on Close: -103.000000000000000000000000 CAD / 1.3704900000 = -75.15560128129355194127647776 USD
2025-06-04 23:47:09,743 - ERROR - orders - Error processing close order: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    await db.refresh(db_order)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 331, in refresh
    await greenlet_spawn(
    ...<4 lines>...
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 3168, in refresh
    loading.load_on_ident(
    ~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<10 lines>...
        is_user_refresh=True,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 509, in load_on_ident
    return load_on_pk_identity(
        session,
    ...<11 lines>...
        is_user_refresh=is_user_refresh,
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 694, in load_on_pk_identity
    session.execute(
    ~~~~~~~~~~~~~~~^
        q,
        ^^
    ...<2 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2105, in _connection_for_bind
    TransactionalContext._trans_ctx_check(self)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\util.py", line 111, in _trans_ctx_check
    raise exc.InvalidRequestError(
    ...<3 lines>...
    )
sqlalchemy.exc.InvalidRequestError: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
2025-06-04 23:47:09,756 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    await db.refresh(db_order)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\ext\asyncio\session.py", line 331, in refresh
    await greenlet_spawn(
    ...<4 lines>...
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.switch(*args, **kwargs)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 3168, in refresh
    loading.load_on_ident(
    ~~~~~~~~~~~~~~~~~~~~~^
        self,
        ^^^^^
    ...<10 lines>...
        is_user_refresh=True,
        ^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 509, in load_on_ident
    return load_on_pk_identity(
        session,
    ...<11 lines>...
        is_user_refresh=is_user_refresh,
    )
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\loading.py", line 694, in load_on_pk_identity
    session.execute(
    ~~~~~~~~~~~~~~~^
        q,
        ^^
    ...<2 lines>...
        bind_arguments=bind_arguments,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2365, in execute
    return self._execute_internal(
           ~~~~~~~~~~~~~~~~~~~~~~^
        statement,
        ^^^^^^^^^^
    ...<4 lines>...
        _add_event=_add_event,
        ^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2241, in _execute_internal
    conn = self._connection_for_bind(bind)
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\orm\session.py", line 2105, in _connection_for_bind
    TransactionalContext._trans_ctx_check(self)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\sqlalchemy\engine\util.py", line 111, in _trans_ctx_check
    raise exc.InvalidRequestError(
    ...<3 lines>...
    )
sqlalchemy.exc.InvalidRequestError: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 823, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: Can't operate on closed transaction inside context manager.  Please complete the context manager before emitting further commands.
2025-06-04 23:51:56,574 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:52:33,026 - INFO - orders - Close order request received - Order ID: 9447353637, User ID: 1, User Type: demo
2025-06-04 23:52:33,026 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:52:33,026 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000201E69B9550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000201E69B9550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:52:33,026 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:52:33,026 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:52:33,026 - INFO - orders - Request to close order 9447353637 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:52:33,045 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:52:33,049 - ERROR - orders - Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 710, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-04 23:52:33,052 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 710, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 822, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-04 23:54:07,887 - INFO - orders - Close order request received - Order ID: 1855881167, User ID: 1, User Type: demo
2025-06-04 23:54:07,887 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:54:07,887 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x00000201E6B3C550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x00000201E6B3C550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:54:07,888 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:54:07,888 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:54:07,889 - INFO - orders - Request to close order 1855881167 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:54:07,921 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:54:07,957 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-04 23:54:07,957 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:54:07,958 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:54:07,958 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 80): Type=SELL, Qty=1.00000000, StoredMargin=655.75409130
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=655.7540913
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526'), Decimal('655.7540913')], HighestMarginPerLot=655.81629526
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1311.63, ContributingOrders=2 (based on individual stored margins)
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:54:07,959 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:54:07,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 23:54:07,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526')], HighestMarginPerLot=655.81629526
2025-06-04 23:54:07,960 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 23:54:07,986 - DEBUG - orders - Inverse conversion for PnL on Close: -33.000000000000000000000000 CAD / 1.3704900000 = -24.07897905128822537924392006 USD
2025-06-04 23:54:08,050 - ERROR - orders - Error processing close order: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    return OrderResponse.model_validate(db_order)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 705, in model_validate
    return cls.__pydantic_validator__.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        obj, strict=strict, from_attributes=from_attributes, context=context, by_alias=by_alias, by_name=by_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
2025-06-04 23:54:08,055 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 819, in close_order
    return OrderResponse.model_validate(db_order)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "C:\Users\Dhanush\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 705, in model_validate
    return cls.__pydantic_validator__.validate_python(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        obj, strict=strict, from_attributes=from_attributes, context=context, by_alias=by_alias, by_name=by_name
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
pydantic_core._pydantic_core.ValidationError: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 822, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 1 validation error for OrderResponse
  Input should be a valid dictionary or instance of OrderResponse [type=model_type, input_value=<app.database.models.Demo...t at 0x00000201E6B3C410>, input_type=DemoUserOrder]
    For further information visit https://errors.pydantic.dev/2.11/v/model_type
2025-06-04 23:54:56,412 - INFO - orders - Application starting up - Orders logging initialized
2025-06-04 23:56:05,278 - INFO - orders - Close order request received - Order ID: 1688253127, User ID: 1, User Type: demo
2025-06-04 23:56:05,279 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-04 23:56:05,279 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001F89146D550>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:56:05,279 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001F89146D550> (type: <class 'app.database.models.DemoUser'>)
2025-06-04 23:56:05,280 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-04 23:56:05,280 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-04 23:56:05,280 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-04 23:56:05,281 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-04 23:56:05,281 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-04 23:56:05,281 - INFO - orders - Request to close order 1688253127 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-04 23:56:05,319 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-04 23:56:05,371 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-04 23:56:05,371 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 79): Type=SELL, Qty=1.00000000, StoredMargin=655.81629526
2025-06-04 23:56:05,371 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=655.81629526
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=0, TotalSellQty=1.00000000, NetQty=1.00000000
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('655.81629526')], HighestMarginPerLot=655.81629526
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=655.82, ContributingOrders=1 (based on individual stored margins)
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-04 23:56:05,372 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-04 23:56:05,394 - DEBUG - orders - Inverse conversion for PnL on Close: -31.000000000000000000000000 CAD / 1.3704900000 = -22.61964698757378747747156127 USD
2025-06-05 00:01:50,094 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-05 00:01:50,115 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x000001F89028BBD0>, <app.database.models.Group object at 0x000001F89028BCE0>, <app.database.models.Group object at 0x000001F891461480>, <app.database.models.Group object at 0x000001F891461370>, <app.database.models.Group object at 0x000001F8914618C0>, <app.database.models.Group object at 0x000001F8914619D0>, <app.database.models.Group object at 0x000001F8914608D0>, <app.database.models.Group object at 0x000001F891462140>, <app.database.models.Group object at 0x000001F891462250>, <app.database.models.Group object at 0x000001F891462360>, <app.database.models.Group object at 0x000001F891462470>, <app.database.models.Group object at 0x000001F891462580>, <app.database.models.Group object at 0x000001F891462690>, <app.database.models.Group object at 0x000001F8914627A0>, <app.database.models.Group object at 0x000001F8914628B0>, <app.database.models.Group object at 0x000001F8914629C0>, <app.database.models.Group object at 0x000001F891462AD0>, <app.database.models.Group object at 0x000001F891462BE0>, <app.database.models.Group object at 0x000001F891462CF0>, <app.database.models.Group object at 0x000001F891462E00>, <app.database.models.Group object at 0x000001F891462F10>, <app.database.models.Group object at 0x000001F891463020>, <app.database.models.Group object at 0x000001F891463130>, <app.database.models.Group object at 0x000001F891463240>, <app.database.models.Group object at 0x000001F891463350>, <app.database.models.Group object at 0x000001F891463460>, <app.database.models.Group object at 0x000001F891463570>, <app.database.models.Group object at 0x000001F891463680>, <app.database.models.Group object at 0x000001F891463790>, <app.database.models.Group object at 0x000001F8914638A0>, <app.database.models.Group object at 0x000001F8914639B0>, <app.database.models.Group object at 0x000001F891463AC0>, <app.database.models.Group object at 0x000001F891463BD0>, <app.database.models.Group object at 0x000001F891463CE0>, <app.database.models.Group object at 0x000001F891463DF0>, <app.database.models.Group object at 0x000001F891463F00>, <app.database.models.Group object at 0x000001F8914605A0>, <app.database.models.Group object at 0x000001F8915E4050>, <app.database.models.Group object at 0x000001F8915E4160>, <app.database.models.Group object at 0x000001F8915E4270>, <app.database.models.Group object at 0x000001F8915E4380>, <app.database.models.Group object at 0x000001F8915E4490>, <app.database.models.Group object at 0x000001F8915E45A0>, <app.database.models.Group object at 0x000001F8915E46B0>, <app.database.models.Group object at 0x000001F8915E47C0>, <app.database.models.Group object at 0x000001F8915E48D0>, <app.database.models.Group object at 0x000001F8915E49E0>, <app.database.models.Group object at 0x000001F8915E4AF0>, <app.database.models.Group object at 0x000001F8915E4C00>, <app.database.models.Group object at 0x000001F8915E4D10>, <app.database.models.Group object at 0x000001F8915E4E20>, <app.database.models.Group object at 0x000001F8915E4F30>, <app.database.models.Group object at 0x000001F8915E5040>, <app.database.models.Group object at 0x000001F8915E5150>, <app.database.models.Group object at 0x000001F8915E5260>, <app.database.models.Group object at 0x000001F8915E5370>, <app.database.models.Group object at 0x000001F8915E5480>, <app.database.models.Group object at 0x000001F8915E5590>, <app.database.models.Group object at 0x000001F8915E56A0>, <app.database.models.Group object at 0x000001F8915E57B0>, <app.database.models.Group object at 0x000001F8915E58C0>, <app.database.models.Group object at 0x000001F8915E59D0>, <app.database.models.Group object at 0x000001F8915E5AE0>, <app.database.models.Group object at 0x000001F8915E5BF0>, <app.database.models.Group object at 0x000001F8915E5D00>, <app.database.models.Group object at 0x000001F8915E5E10>, <app.database.models.Group object at 0x000001F8915E5F20>, <app.database.models.Group object at 0x000001F8915E6030>, <app.database.models.Group object at 0x000001F8915E6140>, <app.database.models.Group object at 0x000001F8915E6250>, <app.database.models.Group object at 0x000001F8915E6360>, <app.database.models.Group object at 0x000001F8915E6470>, <app.database.models.Group object at 0x000001F8915E69C0>, <app.database.models.Group object at 0x000001F8915E6AD0>, <app.database.models.Group object at 0x000001F8915E6F10>, <app.database.models.Group object at 0x000001F8915E7130>, <app.database.models.Group object at 0x000001F8915E7020>, <app.database.models.Group object at 0x000001F8915E7240>, <app.database.models.Group object at 0x000001F8915E7350>]
2025-06-05 00:01:50,115 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-05 00:01:50,116 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-05 00:01:50,117 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-05 00:01:50,118 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-05 00:01:50,119 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-05 00:01:50,803 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:01:50,803 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=656.8341271060582782813540226
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.8341271060582782813540226
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-05 00:01:50,804 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.8341271060582782813540226')], HighestMarginPerLot=656.8341271060582782813540226
2025-06-05 00:01:50,805 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.83, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:01:50,805 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=656.83, AdditionalMargin=656.83
2025-06-05 00:01:50,813 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=656.83
2025-06-05 00:01:50,851 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 00:01:50,852 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 00:01:50,853 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 00:01:50,854 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '9602639657', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8878200000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('656.8341271060582782813540226'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-05 00:01:50,928 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 656.83
2025-06-05 00:01:51,047 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-05 00:02:51,077 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-05 00:02:51,077 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '5d469dac-cd90-4774-97c6-035e12eb7bf0', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-05 00:02:51,078 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-05 00:02:51,078 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 00:02:51,078 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 00:02:51,078 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 00:02:51,120 - INFO - orders - Pending order 5d469dac-cd90-4774-97c6-035e12eb7bf0 added to Redis.
2025-06-05 00:08:33,562 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:08:41,804 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:20:59,055 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:22:57,996 - INFO - orders - Close order request received - Order ID: 9602639657, User ID: 1, User Type: demo
2025-06-05 00:22:57,996 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-05 00:22:57,997 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x000001496F681E50>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:22:57,997 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x000001496F681E50> (type: <class 'app.database.models.DemoUser'>)
2025-06-05 00:22:57,997 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-05 00:22:57,998 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:22:57,998 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-05 00:22:57,998 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-05 00:22:57,998 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-05 00:22:57,999 - INFO - orders - Request to close order 9602639657 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-05 00:22:58,092 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-05 00:22:58,164 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:22:58,165 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 82): Type=BUY, Qty=1.00000000, StoredMargin=656.83412711
2025-06-05 00:22:58,165 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.83412711
2025-06-05 00:22:58,167 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-05 00:22:58,167 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.83412711')], HighestMarginPerLot=656.83412711
2025-06-05 00:22:58,167 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.83, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:22:58,168 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:22:58,168 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:22:58,221 - DEBUG - orders - Inverse conversion for PnL on Close: 118.000000000000000000000000 CAD / 1.3704900000 = 86.10059175915183620456916869 USD
2025-06-05 00:24:40,274 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:28:45,001 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:30:23,530 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 00:30:39,449 - INFO - orders - Close order request received - Order ID: 9602639657, User ID: 1, User Type: demo
2025-06-05 00:30:39,449 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-05 00:30:39,450 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000019FDA4256A0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000019FDA4256A0> (type: <class 'app.database.models.DemoUser'>)
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:30:39,450 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-05 00:30:39,451 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-05 00:30:39,451 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-05 00:30:39,451 - INFO - orders - Request to close order 9602639657 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-05 00:30:39,475 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-05 00:30:39,482 - ERROR - orders - Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 709, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-05 00:30:39,483 - ERROR - orders - Error in close_order endpoint: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 709, in close_order
    raise HTTPException(status_code=400, detail=f"Order status is '{db_order.order_status}'. Only 'OPEN' orders can be closed.")
fastapi.exceptions.HTTPException: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 821, in close_order
    raise HTTPException(status_code=500, detail=f"Error processing close order: {str(e)}")
fastapi.exceptions.HTTPException: 500: Error processing close order: 400: Order status is 'CLOSED'. Only 'OPEN' orders can be closed.
2025-06-05 00:31:25,904 - INFO - orders - Order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY, Quantity: 1
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] db_group_result fetched from DB: [<app.database.models.Group object at 0x0000019FDA3F5260>, <app.database.models.Group object at 0x0000019FDA3F5150>, <app.database.models.Group object at 0x0000019FDA3F5040>, <app.database.models.Group object at 0x0000019FDA3F4F30>, <app.database.models.Group object at 0x0000019FDA3F6AD0>, <app.database.models.Group object at 0x0000019FDA3F5BF0>, <app.database.models.Group object at 0x0000019FDA3F7680>, <app.database.models.Group object at 0x0000019FDA3F7790>, <app.database.models.Group object at 0x0000019FDA3F78A0>, <app.database.models.Group object at 0x0000019FDA3F79B0>, <app.database.models.Group object at 0x0000019FDA3F7AC0>, <app.database.models.Group object at 0x0000019FDA3F7BD0>, <app.database.models.Group object at 0x0000019FDA3F7CE0>, <app.database.models.Group object at 0x0000019FDA3F7DF0>, <app.database.models.Group object at 0x0000019FDA3F7F00>, <app.database.models.Group object at 0x0000019FDA3F5AE0>, <app.database.models.Group object at 0x0000019FDA3F6BE0>, <app.database.models.Group object at 0x0000019FDA608050>, <app.database.models.Group object at 0x0000019FDA608160>, <app.database.models.Group object at 0x0000019FDA608270>, <app.database.models.Group object at 0x0000019FDA608380>, <app.database.models.Group object at 0x0000019FDA608490>, <app.database.models.Group object at 0x0000019FDA6085A0>, <app.database.models.Group object at 0x0000019FDA6086B0>, <app.database.models.Group object at 0x0000019FDA6087C0>, <app.database.models.Group object at 0x0000019FDA6088D0>, <app.database.models.Group object at 0x0000019FDA6089E0>, <app.database.models.Group object at 0x0000019FDA608AF0>, <app.database.models.Group object at 0x0000019FDA608C00>, <app.database.models.Group object at 0x0000019FDA608D10>, <app.database.models.Group object at 0x0000019FDA608E20>, <app.database.models.Group object at 0x0000019FDA608F30>, <app.database.models.Group object at 0x0000019FDA609040>, <app.database.models.Group object at 0x0000019FDA609150>, <app.database.models.Group object at 0x0000019FDA609260>, <app.database.models.Group object at 0x0000019FDA609370>, <app.database.models.Group object at 0x0000019FDA609480>, <app.database.models.Group object at 0x0000019FDA609590>, <app.database.models.Group object at 0x0000019FDA6096A0>, <app.database.models.Group object at 0x0000019FDA6097B0>, <app.database.models.Group object at 0x0000019FDA6098C0>, <app.database.models.Group object at 0x0000019FDA6099D0>, <app.database.models.Group object at 0x0000019FDA609AE0>, <app.database.models.Group object at 0x0000019FDA609BF0>, <app.database.models.Group object at 0x0000019FDA609D00>, <app.database.models.Group object at 0x0000019FDA609E10>, <app.database.models.Group object at 0x0000019FDA609F20>, <app.database.models.Group object at 0x0000019FDA60A030>, <app.database.models.Group object at 0x0000019FDA60A140>, <app.database.models.Group object at 0x0000019FDA60A250>, <app.database.models.Group object at 0x0000019FDA60A360>, <app.database.models.Group object at 0x0000019FDA60A470>, <app.database.models.Group object at 0x0000019FDA60A580>, <app.database.models.Group object at 0x0000019FDA60A690>, <app.database.models.Group object at 0x0000019FDA60A7A0>, <app.database.models.Group object at 0x0000019FDA60A8B0>, <app.database.models.Group object at 0x0000019FDA60A9C0>, <app.database.models.Group object at 0x0000019FDA60AAD0>, <app.database.models.Group object at 0x0000019FDA60ABE0>, <app.database.models.Group object at 0x0000019FDA60ACF0>, <app.database.models.Group object at 0x0000019FDA60AE00>, <app.database.models.Group object at 0x0000019FDA60AF10>, <app.database.models.Group object at 0x0000019FDA60B020>, <app.database.models.Group object at 0x0000019FDA60B130>, <app.database.models.Group object at 0x0000019FDA60B240>, <app.database.models.Group object at 0x0000019FDA60B350>, <app.database.models.Group object at 0x0000019FDA60B460>, <app.database.models.Group object at 0x0000019FDA60B570>, <app.database.models.Group object at 0x0000019FDA60B680>, <app.database.models.Group object at 0x0000019FDA60B790>, <app.database.models.Group object at 0x0000019FDA60B8A0>, <app.database.models.Group object at 0x0000019FDA60B9B0>, <app.database.models.Group object at 0x0000019FDA60BAC0>, <app.database.models.Group object at 0x0000019FDA60BBD0>, <app.database.models.Group object at 0x0000019FDA60BCE0>, <app.database.models.Group object at 0x0000019FDA60BDF0>, <app.database.models.Group object at 0x0000019FDA60BF00>, <app.database.models.Group object at 0x0000019FDA61C050>, <app.database.models.Group object at 0x0000019FDA61C160>]
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] Number of group records found: 79
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] sending_orders_cache extracted from DB: barclays
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] group_settings_cache: None
2025-06-05 00:31:25,921 - INFO - orders - [DEBUG] sending_orders_cache value: barclays (type: <class 'str'>)
2025-06-05 00:31:25,921 - INFO - orders - Order placement: user_id=1, is_barclays_live_user=False, user_type=demo, group_name=Group B, sending_orders_setting=barclays
2025-06-05 00:31:26,295 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:31:26,295 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:31:26,295 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: NEW_UNSAVED): Type=BUY, Qty=1, StoredMargin=657.8621875800490357521864822
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=657.8621875800490357521864822
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1, TotalSellQty=0, NetQty=1
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('657.8621875800490357521864822')], HighestMarginPerLot=657.8621875800490357521864822
2025-06-05 00:31:26,296 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=657.86, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:31:26,296 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1 Symbol AUDCAD: MarginBefore=0.00, MarginAfter=657.86, AdditionalMargin=657.86
2025-06-05 00:31:26,303 - app.services.order_processing - INFO - [MARGIN_PROCESS] User 1: OriginalMarginDB=0E-8, CalculatedNewMargin=657.86
2025-06-05 00:31:26,354 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 00:31:26,354 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 00:31:26,355 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 00:31:26,355 - INFO - orders - [PRE-CRUD] About to call create_order with: {'order_id': '4104060571', 'order_status': 'OPEN', 'order_user_id': 1, 'order_company_name': 'AUDCAD', 'order_type': 'BUY', 'order_price': Decimal('0.8888700000'), 'order_quantity': Decimal('1'), 'contract_value': Decimal('100000.00000000'), 'margin': Decimal('657.8621875800490357521864822'), 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'status': 'OPEN'}
2025-06-05 00:31:26,393 - INFO - orders - [MARGIN_COMMIT_CHECK] User 1 margin in session BEFORE commit: 657.86
2025-06-05 00:31:26,465 - INFO - orders - Portfolio cache updated and websocket event published for user 1 after placing order.
2025-06-05 00:31:55,264 - INFO - orders - Close order request received - Order ID: 4104060571, User ID: 1, User Type: demo
2025-06-05 00:31:55,264 - INFO - orders - Close request details - Price: 0.889, Type: SELL, Symbol: AUDCAD
2025-06-05 00:31:55,265 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000019FDA5C5450>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:31:55,265 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000019FDA5C5450> (type: <class 'app.database.models.DemoUser'>)
2025-06-05 00:31:55,265 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-05 00:31:55,265 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-05 00:31:55,266 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-05 00:31:55,266 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-05 00:31:55,266 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-05 00:31:55,266 - INFO - orders - Request to close order 4104060571 for user 1 (DemoUser) with price 0.889. Frontend provided type: SELL, company: AUDCAD, status: CLOSED, frontend_status: CLOSED.
2025-06-05 00:31:55,285 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-05 00:31:55,308 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 84): Type=BUY, Qty=1.00000000, StoredMargin=657.86218758
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=657.86218758
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('657.86218758')], HighestMarginPerLot=657.86218758
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=657.86, ContributingOrders=1 (based on individual stored margins)
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 0
2025-06-05 00:31:55,309 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB] No open positions for User 1, Symbol AUDCAD. Returning zero margin.
2025-06-05 00:31:55,325 - DEBUG - orders - Inverse conversion for PnL on Close: 13.000000000000000000000000 CAD / 1.3704900000 = 9.485658414143846361520332144 USD
2025-06-05 02:30:56,384 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:36:07,667 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-05 02:36:07,667 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 02:36:07,667 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 02:36:07,667 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 02:36:07,668 - ERROR - orders - Unexpected error in place_pending_order: name 'generate_unique_10_digit_id' is not defined
Traceback (most recent call last):
  File "C:\Users\Dhanush\FASTAPI\app\api\v1\endpoints\orders.py", line 384, in place_pending_order
    new_order_id = await generate_unique_10_digit_id(db, order_model, 'order_id')
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
NameError: name 'generate_unique_10_digit_id' is not defined
2025-06-05 02:39:08,017 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:39:25,381 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:42:55,508 - INFO - orders - Pending order placement request received - User ID: 1, Symbol: AUDCAD, Type: BUY_LIMIT, Quantity: 1
2025-06-05 02:42:55,509 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 02:42:55,509 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 02:42:55,509 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 02:42:55,522 - INFO - orders - [DEBUG][pending_order] Prepared order_data_for_internal_processing: {'order_id': '6892778776', 'order_company_name': 'AUDCAD', 'order_type': 'BUY_LIMIT', 'order_quantity': Decimal('1'), 'order_price': Decimal('0.8885'), 'user_type': 'demo', 'status': 'PENDING', 'stop_loss': Decimal('0'), 'take_profit': Decimal('0'), 'order_user_id': 1, 'order_status': 'PENDING', 'contract_value': None, 'margin': None, 'open_time': None}
2025-06-05 02:42:55,522 - INFO - orders - Placing PENDING order: BUY_LIMIT for user 1 at price 0.8885
2025-06-05 02:42:55,619 - INFO - orders - Pending order 6892778776 added to Redis.
2025-06-05 02:47:37,879 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 02:47:58,640 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 03:01:24,110 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 03:37:07,719 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 03:37:07,720 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 03:37:07,720 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 03:38:07,812 - INFO - orders - Application starting up - Orders logging initialized
2025-06-05 03:39:49,128 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 03:39:49,128 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 03:39:49,128 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-05 03:39:49,136 - INFO - orders - [get_order_model] called with: 'demo' (type: <class 'str'>)
2025-06-05 03:39:49,136 - INFO - orders - [get_order_model] Branch: isinstance(user_or_type, str)
2025-06-05 03:39:49,136 - INFO - orders - [get_order_model] Branch: user_type string is 'demo' -> DemoUserOrder
2025-06-06 00:55:59,112 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 00:56:10,587 - INFO - orders - Close order request received - Order ID: 3942036292, User ID: 1, User Type: demo
2025-06-06 00:56:10,588 - INFO - orders - Close request details - Price: 0.89, Type: SELL, Symbol: AUDCAD
2025-06-06 00:56:10,588 - INFO - orders - user_to_operate_on: <app.database.models.DemoUser object at 0x0000014CCAD357F0>, type: <class 'app.database.models.DemoUser'>, attrs: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] called with: <app.database.models.DemoUser object at 0x0000014CCAD357F0> (type: <class 'app.database.models.DemoUser'>)
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] user_or_type.__class__.__name__: DemoUser
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] user_or_type attributes: ['__abstract__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__firstlineno__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__mapper__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__static_attributes__', '__str__', '__subclasshook__', '__table__', '__table_args__', '__tablename__', '__weakref__', '_sa_class_manager', '_sa_instance_state', '_sa_registry', 'account_number', 'city', 'country', 'created_at', 'email', 'group_name', 'hashed_password', 'id', 'isActive', 'leverage', 'margin', 'metadata', 'name', 'net_profit', 'orders', 'otps', 'phone_number', 'pincode', 'referred_by_id', 'reffered_code', 'registry', 'security_answer', 'security_question', 'state', 'status', 'updated_at', 'user_type', 'wallet_balance', 'wallet_transactions']
2025-06-06 00:56:10,588 - INFO - orders - [get_order_model] user_type attribute value: demo, type: <class 'str'>
2025-06-06 00:56:10,589 - INFO - orders - [get_order_model] Branch: user_type attribute is 'demo' -> DemoUserOrder
2025-06-06 00:56:10,590 - INFO - orders - Using order model: demo_user_orders for user 1 (DemoUser)
2025-06-06 00:56:10,590 - INFO - orders - Request to close order 3942036292 for user 1 (DemoUser) with price 0.89. Frontend provided type: SELL, company: AUDCAD, status: CLOSE, frontend_status: CLOSE.
2025-06-06 00:56:10,622 - INFO - orders - Demo user 1 from group 'default' ('sending_orders' is NOT 'barclays'). Processing close locally.
2025-06-06 00:56:10,656 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 2
2025-06-06 00:56:10,657 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 00:56:10,657 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2 (ID: 93): Type=SELL, Qty=2.00000000, StoredMargin=1314.77957965
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 2: MarginPerLot=657.389789825
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=2.00000000, NetQty=2.00000000
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425'), Decimal('657.389789825')], HighestMarginPerLot=657.389789825
2025-06-06 00:56:10,658 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=1314.78, ContributingOrders=2 (based on individual stored margins)
2025-06-06 00:56:10,659 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_ENTRY] User 1, Symbol AUDCAD, Positions count: 1
2025-06-06 00:56:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1 (ID: 88): Type=BUY, Qty=1.00000000, StoredMargin=656.68966425
2025-06-06 00:56:10,660 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_POS_DETAIL] User 1, Symbol AUDCAD, Pos 1: MarginPerLot=656.68966425
2025-06-06 00:56:10,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: TotalBuyQty=1.00000000, TotalSellQty=0, NetQty=1.00000000
2025-06-06 00:56:10,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_CALC] User 1, Symbol AUDCAD: AllMarginsPerLot=[Decimal('656.68966425')], HighestMarginPerLot=656.68966425
2025-06-06 00:56:10,662 - app.services.order_processing - DEBUG - [MARGIN_TOTAL_CONTRIB_EXIT] User 1, Symbol AUDCAD: CalculatedTotalMargin=656.69, ContributingOrders=1 (based on individual stored margins)
2025-06-06 00:56:10,691 - DEBUG - orders - Inverse conversion for PnL on Close: -338.000000000000000000000000 CAD / 1.3665600000 = -247.3363774733637747336377473 USD
2025-06-06 00:58:50,578 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:00:39,545 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:04:07,503 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:04:43,082 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-06 01:04:43,082 - app.api.v1.endpoints.orders - ERROR - [get_rejected_orders] Could not determine order model for user_type: demo
2025-06-06 01:05:54,163 - INFO - orders - Application starting up - Orders logging initialized
2025-06-06 01:06:07,418 - app.api.v1.endpoints.orders - INFO - [get_rejected_orders] user_type: demo
2025-06-06 01:06:50,378 - app.api.v1.endpoints.orders - INFO - [get_pending_orders] user_type: demo
2025-06-06 01:06:57,849 - app.api.v1.endpoints.orders - INFO - [get_closed_orders] user_type: demo
